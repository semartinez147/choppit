apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion 29

    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.semartinez.choppit"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

task generateApiDoc() {
    group "reporting"
    description "Generates all Javadoc."
}

android.applicationVariants.all { variant ->

    def appName = 'Choppit'

    def task = project.tasks.create("generate${variant.name.capitalize()}Javadoc", Javadoc) {

        title "$appName (${project.android.defaultConfig.versionName})"
        group "ApiDoc"
        description "Generates Javadoc for $variant.name."

        source = variant.sourceSets.collect { it.java.sourceFiles }.inject { m, i -> m + i }

        doFirst {
            classpath = project.files(
                    file(projectDir)
                            .toPath()
                            .resolve("build/intermediates/javac/${variant.name}/classes"),
                    variant.javaCompileProvider.get().classpath.files,
                    project.android.getBootClasspath()
            )
        }

        exclude '**/R'
        exclude '**/R.**'
        exclude '**/R\$**'
        exclude '**/BuildConfig*'

        destinationDir = file("$projectDir/../docs/api")

        options {
            windowTitle = "$appName (${project.android.defaultConfig.versionName})"
            memberLevel = JavadocMemberLevel.PROTECTED
            linkSource = false
            author = false
            links 'https://docs.oracle.com/javase/8/docs/api/'
            links 'http://reactivex.io/RxJava/javadoc/'
            links 'https://jsoup.org/apidocs/'
            links 'https://www.javadoc.io/doc/com.google.code.gson/gson/latest/com.google.gson/'
            linksOffline 'https://developer.android.com/reference', "$projectDir/.."
        }

        if (JavaVersion.current().isJava8Compatible()) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }

        failOnError true
    }

    task.dependsOn "assemble${variant.name.capitalize()}"
    generateApiDoc.dependsOn task
}


dependencies {
    // basic support dependencies
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'org.jetbrains:annotations:19.0.0'


    // added to address IDE bug
    implementation 'androidx.drawerlayout:drawerlayout:1.1.1'

    // enables fragment navigation
    implementation "androidx.navigation:navigation-fragment:2.3.5"
    implementation "androidx.navigation:navigation-ui:2.3.5"

    //Preference/settings dependencies
    implementation 'androidx.preference:preference:1.1.1'

    // live data & ViewModel dependencies
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    // material design components
    implementation 'com.google.android.material:material:1.3.0'

    // HTML parsing library
    implementation 'org.jsoup:jsoup:1.13.1'

    // Style/theme change library
    implementation 'com.airbnb.android:paris:1.7.2'

    // NLP library - this is a stretch goal.
    // implementation 'org.apache.opennlp:opennlp-tools:1.9.3'

    //Reactive X dependencies
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // object-relational mapping bridges databases & java objects
    implementation "androidx.room:room-runtime:2.3.0"
    annotationProcessor "androidx.room:room-compiler:2.3.0"
    implementation "androidx.room:room-rxjava2:2.3.0"

    // lets Chrome inspect the app
    implementation 'com.facebook.stetho:stetho:1.5.1'

    // gson parses JSON
    implementation 'com.google.code.gson:gson:2.8.6'

    // http client
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.2'
    def retrofit_version = "2.6.2"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.9.0"


    // unit test dependencies
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
