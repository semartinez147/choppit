/*
 * ======================================================================================== *
 * Master Control Program
 * Version: 3.24.1
 * Release Date: Wed Jul 15 2020 at 15:49:02 GMT-0400 (DST)
 * Provided by Discovery, Inc. Digital Ad Technology Group
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2020 Discovery, Inc. Digital Ad Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * ======================================================================================== *
 */
/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 	};
/******/
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		0: 0
/******/ 	};
/******/
/******/
/******/
/******/ 	// script path function
/******/ 	function jsonpScriptSrc(chunkId) {
/******/ 		return __webpack_require__.p + "" + ({"1":"SlotOverlay"}[chunkId]||chunkId) + ".js"
/******/ 	}
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var promises = [];
/******/
/******/
/******/ 		// JSONP chunk loading for javascript
/******/
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData !== 0) { // 0 means "already installed".
/******/
/******/ 			// a Promise means "currently loading".
/******/ 			if(installedChunkData) {
/******/ 				promises.push(installedChunkData[2]);
/******/ 			} else {
/******/ 				// setup Promise in chunk cache
/******/ 				var promise = new Promise(function(resolve, reject) {
/******/ 					installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 				});
/******/ 				promises.push(installedChunkData[2] = promise);
/******/
/******/ 				// start chunk loading
/******/ 				var script = document.createElement('script');
/******/ 				var onScriptComplete;
/******/
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.src = jsonpScriptSrc(chunkId);
/******/
/******/ 				// create error before stack unwound to get useful stacktrace later
/******/ 				var error = new Error();
/******/ 				onScriptComplete = function (event) {
/******/ 					// avoid mem leaks in IE.
/******/ 					script.onerror = script.onload = null;
/******/ 					clearTimeout(timeout);
/******/ 					var chunk = installedChunks[chunkId];
/******/ 					if(chunk !== 0) {
/******/ 						if(chunk) {
/******/ 							var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 							var realSrc = event && event.target && event.target.src;
/******/ 							error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 							error.name = 'ChunkLoadError';
/******/ 							error.type = errorType;
/******/ 							error.request = realSrc;
/******/ 							chunk[1](error);
/******/ 						}
/******/ 						installedChunks[chunkId] = undefined;
/******/ 					}
/******/ 				};
/******/ 				var timeout = setTimeout(function(){
/******/ 					onScriptComplete({ type: 'timeout', target: script });
/******/ 				}, 120000);
/******/ 				script.onerror = script.onload = onScriptComplete;
/******/ 				document.head.appendChild(script);
/******/ 			}
/******/ 		}
/******/ 		return Promise.all(promises);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "code.adsales.snidigital.com/datmcp/";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 386);
/******/ })
/************************************************************************/
/******/ ({

/***/ 101:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * UAParser.js v0.7.20
 * Lightweight JavaScript-based User-Agent string parser
 * https://github.com/faisalman/ua-parser-js
 *
 * Copyright © 2012-2019 Faisal Salman <f@faisalman.com>
 * Licensed under MIT License
 */
(function (window, undefined) {
  'use strict'; //////////////
  // Constants
  /////////////

  var LIBVERSION = '0.7.20',
      EMPTY = '',
      UNKNOWN = '?',
      FUNC_TYPE = 'function',
      UNDEF_TYPE = 'undefined',
      OBJ_TYPE = 'object',
      STR_TYPE = 'string',
      MAJOR = 'major',
      // deprecated
  MODEL = 'model',
      NAME = 'name',
      TYPE = 'type',
      VENDOR = 'vendor',
      VERSION = 'version',
      ARCHITECTURE = 'architecture',
      CONSOLE = 'console',
      MOBILE = 'mobile',
      TABLET = 'tablet',
      SMARTTV = 'smarttv',
      WEARABLE = 'wearable',
      EMBEDDED = 'embedded'; ///////////
  // Helper
  //////////

  var util = {
    extend: function extend(regexes, extensions) {
      var mergedRegexes = {};

      for (var i in regexes) {
        if (extensions[i] && extensions[i].length % 2 === 0) {
          mergedRegexes[i] = extensions[i].concat(regexes[i]);
        } else {
          mergedRegexes[i] = regexes[i];
        }
      }

      return mergedRegexes;
    },
    has: function has(str1, str2) {
      if (typeof str1 === "string") {
        return str2.toLowerCase().indexOf(str1.toLowerCase()) !== -1;
      } else {
        return false;
      }
    },
    lowerize: function lowerize(str) {
      return str.toLowerCase();
    },
    major: function major(version) {
      return _typeof(version) === STR_TYPE ? version.replace(/[^\d\.]/g, '').split(".")[0] : undefined;
    },
    trim: function trim(str) {
      return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
    }
  }; ///////////////
  // Map helper
  //////////////

  var mapper = {
    rgx: function rgx(ua, arrays) {
      var i = 0,
          j,
          k,
          p,
          q,
          matches,
          match; // loop through all regexes maps

      while (i < arrays.length && !matches) {
        var regex = arrays[i],
            // even sequence (0,2,4,..)
        props = arrays[i + 1]; // odd sequence (1,3,5,..)

        j = k = 0; // try matching uastring with regexes

        while (j < regex.length && !matches) {
          matches = regex[j++].exec(ua);

          if (!!matches) {
            for (p = 0; p < props.length; p++) {
              match = matches[++k];
              q = props[p]; // check if given property is actually array

              if (_typeof(q) === OBJ_TYPE && q.length > 0) {
                if (q.length == 2) {
                  if (_typeof(q[1]) == FUNC_TYPE) {
                    // assign modified match
                    this[q[0]] = q[1].call(this, match);
                  } else {
                    // assign given value, ignore regex match
                    this[q[0]] = q[1];
                  }
                } else if (q.length == 3) {
                  // check whether function or regex
                  if (_typeof(q[1]) === FUNC_TYPE && !(q[1].exec && q[1].test)) {
                    // call function (usually string mapper)
                    this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;
                  } else {
                    // sanitize match using given regex
                    this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;
                  }
                } else if (q.length == 4) {
                  this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;
                }
              } else {
                this[q] = match ? match : undefined;
              }
            }
          }
        }

        i += 2;
      }
    },
    str: function str(_str, map) {
      for (var i in map) {
        // check if array
        if (_typeof(map[i]) === OBJ_TYPE && map[i].length > 0) {
          for (var j = 0; j < map[i].length; j++) {
            if (util.has(map[i][j], _str)) {
              return i === UNKNOWN ? undefined : i;
            }
          }
        } else if (util.has(map[i], _str)) {
          return i === UNKNOWN ? undefined : i;
        }
      }

      return _str;
    }
  }; ///////////////
  // String map
  //////////////

  var maps = {
    browser: {
      oldsafari: {
        version: {
          '1.0': '/8',
          '1.2': '/1',
          '1.3': '/3',
          '2.0': '/412',
          '2.0.2': '/416',
          '2.0.3': '/417',
          '2.0.4': '/419',
          '?': '/'
        }
      }
    },
    device: {
      amazon: {
        model: {
          'Fire Phone': ['SD', 'KF']
        }
      },
      sprint: {
        model: {
          'Evo Shift 4G': '7373KT'
        },
        vendor: {
          'HTC': 'APA',
          'Sprint': 'Sprint'
        }
      }
    },
    os: {
      windows: {
        version: {
          'ME': '4.90',
          'NT 3.11': 'NT3.51',
          'NT 4.0': 'NT4.0',
          '2000': 'NT 5.0',
          'XP': ['NT 5.1', 'NT 5.2'],
          'Vista': 'NT 6.0',
          '7': 'NT 6.1',
          '8': 'NT 6.2',
          '8.1': 'NT 6.3',
          '10': ['NT 6.4', 'NT 10.0'],
          'RT': 'ARM'
        }
      }
    }
  }; //////////////
  // Regex map
  /////////////

  var regexes = {
    browser: [[// Presto based
    /(opera\smini)\/([\w\.-]+)/i, // Opera Mini
    /(opera\s[mobiletab]+).+version\/([\w\.-]+)/i, // Opera Mobi/Tablet
    /(opera).+version\/([\w\.]+)/i, // Opera > 9.80
    /(opera)[\/\s]+([\w\.]+)/i // Opera < 9.80
    ], [NAME, VERSION], [/(opios)[\/\s]+([\w\.]+)/i // Opera mini on iphone >= 8.0
    ], [[NAME, 'Opera Mini'], VERSION], [/\s(opr)\/([\w\.]+)/i // Opera Webkit
    ], [[NAME, 'Opera'], VERSION], [// Mixed
    /(kindle)\/([\w\.]+)/i, // Kindle
    /(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]*)/i, // Lunascape/Maxthon/Netfront/Jasmine/Blazer
    // Trident based
    /(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i, // Avant/IEMobile/SlimBrowser/Baidu
    /(?:ms|\()(ie)\s([\w\.]+)/i, // Internet Explorer
    // Webkit/KHTML based
    /(rekonq)\/([\w\.]*)/i, // Rekonq
    /(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\/([\w\.-]+)/i // Chromium/Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon
    ], [NAME, VERSION], [/(konqueror)\/([\w\.]+)/i // Konqueror
    ], [[NAME, 'Konqueror'], VERSION], [/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i // IE11
    ], [[NAME, 'IE'], VERSION], [/(edge|edgios|edga|edg)\/((\d+)?[\w\.]+)/i // Microsoft Edge
    ], [[NAME, 'Edge'], VERSION], [/(yabrowser)\/([\w\.]+)/i // Yandex
    ], [[NAME, 'Yandex'], VERSION], [/(puffin)\/([\w\.]+)/i // Puffin
    ], [[NAME, 'Puffin'], VERSION], [/(focus)\/([\w\.]+)/i // Firefox Focus
    ], [[NAME, 'Firefox Focus'], VERSION], [/(opt)\/([\w\.]+)/i // Opera Touch
    ], [[NAME, 'Opera Touch'], VERSION], [/((?:[\s\/])uc?\s?browser|(?:juc.+)ucweb)[\/\s]?([\w\.]+)/i // UCBrowser
    ], [[NAME, 'UCBrowser'], VERSION], [/(comodo_dragon)\/([\w\.]+)/i // Comodo Dragon
    ], [[NAME, /_/g, ' '], VERSION], [/(windowswechat qbcore)\/([\w\.]+)/i // WeChat Desktop for Windows Built-in Browser
    ], [[NAME, 'WeChat(Win) Desktop'], VERSION], [/(micromessenger)\/([\w\.]+)/i // WeChat
    ], [[NAME, 'WeChat'], VERSION], [/(brave)\/([\w\.]+)/i // Brave browser
    ], [[NAME, 'Brave'], VERSION], [/(qqbrowserlite)\/([\w\.]+)/i // QQBrowserLite
    ], [NAME, VERSION], [/(QQ)\/([\d\.]+)/i // QQ, aka ShouQ
    ], [NAME, VERSION], [/m?(qqbrowser)[\/\s]?([\w\.]+)/i // QQBrowser
    ], [NAME, VERSION], [/(BIDUBrowser)[\/\s]?([\w\.]+)/i // Baidu Browser
    ], [NAME, VERSION], [/(2345Explorer)[\/\s]?([\w\.]+)/i // 2345 Browser
    ], [NAME, VERSION], [/(MetaSr)[\/\s]?([\w\.]+)/i // SouGouBrowser
    ], [NAME], [/(LBBROWSER)/i // LieBao Browser
    ], [NAME], [/xiaomi\/miuibrowser\/([\w\.]+)/i // MIUI Browser
    ], [VERSION, [NAME, 'MIUI Browser']], [/;fbav\/([\w\.]+);/i // Facebook App for iOS & Android
    ], [VERSION, [NAME, 'Facebook']], [/safari\s(line)\/([\w\.]+)/i, // Line App for iOS
    /android.+(line)\/([\w\.]+)\/iab/i // Line App for Android
    ], [NAME, VERSION], [/headlesschrome(?:\/([\w\.]+)|\s)/i // Chrome Headless
    ], [VERSION, [NAME, 'Chrome Headless']], [/\swv\).+(chrome)\/([\w\.]+)/i // Chrome WebView
    ], [[NAME, /(.+)/, '$1 WebView'], VERSION], [/((?:oculus|samsung)browser)\/([\w\.]+)/i], [[NAME, /(.+(?:g|us))(.+)/, '$1 $2'], VERSION], [// Oculus / Samsung Browser
    /android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*/i // Android Browser
    ], [VERSION, [NAME, 'Android Browser']], [/(sailfishbrowser)\/([\w\.]+)/i // Sailfish Browser
    ], [[NAME, 'Sailfish Browser'], VERSION], [/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i // Chrome/OmniWeb/Arora/Tizen/Nokia
    ], [NAME, VERSION], [/(dolfin)\/([\w\.]+)/i // Dolphin
    ], [[NAME, 'Dolphin'], VERSION], [/((?:android.+)crmo|crios)\/([\w\.]+)/i // Chrome for Android/iOS
    ], [[NAME, 'Chrome'], VERSION], [/(coast)\/([\w\.]+)/i // Opera Coast
    ], [[NAME, 'Opera Coast'], VERSION], [/fxios\/([\w\.-]+)/i // Firefox for iOS
    ], [VERSION, [NAME, 'Firefox']], [/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i // Mobile Safari
    ], [VERSION, [NAME, 'Mobile Safari']], [/version\/([\w\.]+).+?(mobile\s?safari|safari)/i // Safari & Safari Mobile
    ], [VERSION, NAME], [/webkit.+?(gsa)\/([\w\.]+).+?(mobile\s?safari|safari)(\/[\w\.]+)/i // Google Search Appliance on iOS
    ], [[NAME, 'GSA'], VERSION], [/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i // Safari < 3.0
    ], [NAME, [VERSION, mapper.str, maps.browser.oldsafari.version]], [/(webkit|khtml)\/([\w\.]+)/i], [NAME, VERSION], [// Gecko based
    /(navigator|netscape)\/([\w\.-]+)/i // Netscape
    ], [[NAME, 'Netscape'], VERSION], [/(swiftfox)/i, // Swiftfox
    /(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i, // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror
    /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([\w\.-]+)$/i, // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix
    /(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i, // Mozilla
    // Other
    /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i, // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir
    /(links)\s\(([\w\.]+)/i, // Links
    /(gobrowser)\/?([\w\.]*)/i, // GoBrowser
    /(ice\s?browser)\/v?([\w\._]+)/i, // ICE Browser
    /(mosaic)[\/\s]([\w\.]+)/i // Mosaic
    ], [NAME, VERSION]],
    cpu: [[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i // AMD64
    ], [[ARCHITECTURE, 'amd64']], [/(ia32(?=;))/i // IA32 (quicktime)
    ], [[ARCHITECTURE, util.lowerize]], [/((?:i[346]|x)86)[;\)]/i // IA32
    ], [[ARCHITECTURE, 'ia32']], [// PocketPC mistakenly identified as PowerPC
    /windows\s(ce|mobile);\sppc;/i], [[ARCHITECTURE, 'arm']], [/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i // PowerPC
    ], [[ARCHITECTURE, /ower/, '', util.lowerize]], [/(sun4\w)[;\)]/i // SPARC
    ], [[ARCHITECTURE, 'sparc']], [/((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+[;l]))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC
    ], [[ARCHITECTURE, util.lowerize]]],
    device: [[/\((ipad|playbook);[\w\s\),;-]+(rim|apple)/i // iPad/PlayBook
    ], [MODEL, VENDOR, [TYPE, TABLET]], [/applecoremedia\/[\w\.]+ \((ipad)/ // iPad
    ], [MODEL, [VENDOR, 'Apple'], [TYPE, TABLET]], [/(apple\s{0,1}tv)/i // Apple TV
    ], [[MODEL, 'Apple TV'], [VENDOR, 'Apple']], [/(archos)\s(gamepad2?)/i, // Archos
    /(hp).+(touchpad)/i, // HP TouchPad
    /(hp).+(tablet)/i, // HP Tablet
    /(kindle)\/([\w\.]+)/i, // Kindle
    /\s(nook)[\w\s]+build\/(\w+)/i, // Nook
    /(dell)\s(strea[kpr\s\d]*[\dko])/i // Dell Streak
    ], [VENDOR, MODEL, [TYPE, TABLET]], [/(kf[A-z]+)\sbuild\/.+silk\//i // Kindle Fire HD
    ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [/(sd|kf)[0349hijorstuw]+\sbuild\/.+silk\//i // Fire Phone
    ], [[MODEL, mapper.str, maps.device.amazon.model], [VENDOR, 'Amazon'], [TYPE, MOBILE]], [/android.+aft([bms])\sbuild/i // Fire TV
    ], [MODEL, [VENDOR, 'Amazon'], [TYPE, SMARTTV]], [/\((ip[honed|\s\w*]+);.+(apple)/i // iPod/iPhone
    ], [MODEL, VENDOR, [TYPE, MOBILE]], [/\((ip[honed|\s\w*]+);/i // iPod/iPhone
    ], [MODEL, [VENDOR, 'Apple'], [TYPE, MOBILE]], [/(blackberry)[\s-]?(\w+)/i, // BlackBerry
    /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\s_-]?([\w-]*)/i, // BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron
    /(hp)\s([\w\s]+\w)/i, // HP iPAQ
    /(asus)-?(\w+)/i // Asus
    ], [VENDOR, MODEL, [TYPE, MOBILE]], [/\(bb10;\s(\w+)/i // BlackBerry 10
    ], [MODEL, [VENDOR, 'BlackBerry'], [TYPE, MOBILE]], [// Asus Tablets
    /android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone|p00c)/i], [MODEL, [VENDOR, 'Asus'], [TYPE, TABLET]], [/(sony)\s(tablet\s[ps])\sbuild\//i, // Sony
    /(sony)?(?:sgp.+)\sbuild\//i], [[VENDOR, 'Sony'], [MODEL, 'Xperia Tablet'], [TYPE, TABLET]], [/android.+\s([c-g]\d{4}|so[-l]\w+)(?=\sbuild\/|\).+chrome\/(?![1-6]{0,1}\d\.))/i], [MODEL, [VENDOR, 'Sony'], [TYPE, MOBILE]], [/\s(ouya)\s/i, // Ouya
    /(nintendo)\s([wids3u]+)/i // Nintendo
    ], [VENDOR, MODEL, [TYPE, CONSOLE]], [/android.+;\s(shield)\sbuild/i // Nvidia
    ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [/(playstation\s[34portablevi]+)/i // Playstation
    ], [MODEL, [VENDOR, 'Sony'], [TYPE, CONSOLE]], [/(sprint\s(\w+))/i // Sprint Phones
    ], [[VENDOR, mapper.str, maps.device.sprint.vendor], [MODEL, mapper.str, maps.device.sprint.model], [TYPE, MOBILE]], [/(htc)[;_\s-]+([\w\s]+(?=\)|\sbuild)|\w+)/i, // HTC
    /(zte)-(\w*)/i, // ZTE
    /(alcatel|geeksphone|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]*)/i // Alcatel/GeeksPhone/Nexian/Panasonic/Sony
    ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [/(nexus\s9)/i // HTC Nexus 9
    ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [/d\/huawei([\w\s-]+)[;\)]/i, /(nexus\s6p)/i // Huawei
    ], [MODEL, [VENDOR, 'Huawei'], [TYPE, MOBILE]], [/(microsoft);\s(lumia[\s\w]+)/i // Microsoft Lumia
    ], [VENDOR, MODEL, [TYPE, MOBILE]], [/[\s\(;](xbox(?:\sone)?)[\s\);]/i // Microsoft Xbox
    ], [MODEL, [VENDOR, 'Microsoft'], [TYPE, CONSOLE]], [/(kin\.[onetw]{3})/i // Microsoft Kin
    ], [[MODEL, /\./g, ' '], [VENDOR, 'Microsoft'], [TYPE, MOBILE]], [// Motorola
    /\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?:?(\s4g)?)[\w\s]+build\//i, /mot[\s-]?(\w*)/i, /(XT\d{3,4}) build\//i, /(nexus\s6)/i], [MODEL, [VENDOR, 'Motorola'], [TYPE, MOBILE]], [/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i], [MODEL, [VENDOR, 'Motorola'], [TYPE, TABLET]], [/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i // HbbTV devices
    ], [[VENDOR, util.trim], [MODEL, util.trim], [TYPE, SMARTTV]], [/hbbtv.+maple;(\d+)/i], [[MODEL, /^/, 'SmartTV'], [VENDOR, 'Samsung'], [TYPE, SMARTTV]], [/\(dtv[\);].+(aquos)/i // Sharp
    ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [/android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))/i, /((SM-T\w+))/i], [[VENDOR, 'Samsung'], MODEL, [TYPE, TABLET]], [// Samsung
    /smart-tv.+(samsung)/i], [VENDOR, [TYPE, SMARTTV], MODEL], [/((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))/i, /(sam[sung]*)[\s-]*(\w+-?[\w-]*)/i, /sec-((sgh\w+))/i], [[VENDOR, 'Samsung'], MODEL, [TYPE, MOBILE]], [/sie-(\w*)/i // Siemens
    ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [/(maemo|nokia).*(n900|lumia\s\d+)/i, // Nokia
    /(nokia)[\s_-]?([\w-]*)/i], [[VENDOR, 'Nokia'], MODEL, [TYPE, MOBILE]], [/android[x\d\.\s;]+\s([ab][1-7]\-?[0178a]\d\d?)/i // Acer
    ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [/android.+([vl]k\-?\d{3})\s+build/i // LG Tablet
    ], [MODEL, [VENDOR, 'LG'], [TYPE, TABLET]], [/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i // LG Tablet
    ], [[VENDOR, 'LG'], MODEL, [TYPE, TABLET]], [/(lg) netcast\.tv/i // LG SmartTV
    ], [VENDOR, MODEL, [TYPE, SMARTTV]], [/(nexus\s[45])/i, // LG
    /lg[e;\s\/-]+(\w*)/i, /android.+lg(\-?[\d\w]+)\s+build/i], [MODEL, [VENDOR, 'LG'], [TYPE, MOBILE]], [/(lenovo)\s?(s(?:5000|6000)(?:[\w-]+)|tab(?:[\s\w]+))/i // Lenovo tablets
    ], [VENDOR, MODEL, [TYPE, TABLET]], [/android.+(ideatab[a-z0-9\-\s]+)/i // Lenovo
    ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [/(lenovo)[_\s-]?([\w-]+)/i], [VENDOR, MODEL, [TYPE, MOBILE]], [/linux;.+((jolla));/i // Jolla
    ], [VENDOR, MODEL, [TYPE, MOBILE]], [/((pebble))app\/[\d\.]+\s/i // Pebble
    ], [VENDOR, MODEL, [TYPE, WEARABLE]], [/android.+;\s(oppo)\s?([\w\s]+)\sbuild/i // OPPO
    ], [VENDOR, MODEL, [TYPE, MOBILE]], [/crkey/i // Google Chromecast
    ], [[MODEL, 'Chromecast'], [VENDOR, 'Google']], [/android.+;\s(glass)\s\d/i // Google Glass
    ], [MODEL, [VENDOR, 'Google'], [TYPE, WEARABLE]], [/android.+;\s(pixel c)[\s)]/i // Google Pixel C
    ], [MODEL, [VENDOR, 'Google'], [TYPE, TABLET]], [/android.+;\s(pixel( [23])?( xl)?)[\s)]/i // Google Pixel
    ], [MODEL, [VENDOR, 'Google'], [TYPE, MOBILE]], [/android.+;\s(\w+)\s+build\/hm\1/i, // Xiaomi Hongmi 'numeric' models
    /android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i, // Xiaomi Hongmi
    /android.+(mi[\s\-_]*(?:a\d|one|one[\s_]plus|note lte)?[\s_]*(?:\d?\w?)[\s_]*(?:plus)?)\s+build/i, // Xiaomi Mi
    /android.+(redmi[\s\-_]*(?:note)?(?:[\s_]*[\w\s]+))\s+build/i // Redmi Phones
    ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [/android.+(mi[\s\-_]*(?:pad)(?:[\s_]*[\w\s]+))\s+build/i // Mi Pad tablets
    ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, TABLET]], [/android.+;\s(m[1-5]\snote)\sbuild/i // Meizu
    ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [/(mz)-([\w-]{2,})/i], [[VENDOR, 'Meizu'], MODEL, [TYPE, MOBILE]], [/android.+a000(1)\s+build/i, // OnePlus
    /android.+oneplus\s(a\d{4})\s+build/i], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [/android.+[;\/]\s*(RCT[\d\w]+)\s+build/i // RCA Tablets
    ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [/android.+[;\/\s]+(Venue[\d\s]{2,7})\s+build/i // Dell Venue Tablets
    ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [/android.+[;\/]\s*(Q[T|M][\d\w]+)\s+build/i // Verizon Tablet
    ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [/android.+[;\/]\s+(Barnes[&\s]+Noble\s+|BN[RT])(V?.*)\s+build/i // Barnes & Noble Tablet
    ], [[VENDOR, 'Barnes & Noble'], MODEL, [TYPE, TABLET]], [/android.+[;\/]\s+(TM\d{3}.*\b)\s+build/i // Barnes & Noble Tablet
    ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [/android.+;\s(k88)\sbuild/i // ZTE K Series Tablet
    ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [/android.+[;\/]\s*(gen\d{3})\s+build.*49h/i // Swiss GEN Mobile
    ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [/android.+[;\/]\s*(zur\d{3})\s+build/i // Swiss ZUR Tablet
    ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [/android.+[;\/]\s*((Zeki)?TB.*\b)\s+build/i // Zeki Tablets
    ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [/(android).+[;\/]\s+([YR]\d{2})\s+build/i, /android.+[;\/]\s+(Dragon[\-\s]+Touch\s+|DT)(\w{5})\sbuild/i // Dragon Touch Tablet
    ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [/android.+[;\/]\s*(NS-?\w{0,9})\sbuild/i // Insignia Tablets
    ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [/android.+[;\/]\s*((NX|Next)-?\w{0,9})\s+build/i // NextBook Tablets
    ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [/android.+[;\/]\s*(Xtreme\_)?(V(1[045]|2[015]|30|40|60|7[05]|90))\s+build/i], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [// Voice Xtreme Phones
    /android.+[;\/]\s*(LVTEL\-)?(V1[12])\s+build/i // LvTel Phones
    ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [/android.+;\s(PH-1)\s/i], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [// Essential PH-1
    /android.+[;\/]\s*(V(100MD|700NA|7011|917G).*\b)\s+build/i // Envizen Tablets
    ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [/android.+[;\/]\s*(Le[\s\-]+Pan)[\s\-]+(\w{1,9})\s+build/i // Le Pan Tablets
    ], [VENDOR, MODEL, [TYPE, TABLET]], [/android.+[;\/]\s*(Trio[\s\-]*.*)\s+build/i // MachSpeed Tablets
    ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [/android.+[;\/]\s*(Trinity)[\-\s]*(T\d{3})\s+build/i // Trinity Tablets
    ], [VENDOR, MODEL, [TYPE, TABLET]], [/android.+[;\/]\s*TU_(1491)\s+build/i // Rotor Tablets
    ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [/android.+(KS(.+))\s+build/i // Amazon Kindle Tablets
    ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [/android.+(Gigaset)[\s\-]+(Q\w{1,9})\s+build/i // Gigaset Tablets
    ], [VENDOR, MODEL, [TYPE, TABLET]], [/\s(tablet|tab)[;\/]/i, // Unidentifiable Tablet
    /\s(mobile)(?:[;\/]|\ssafari)/i // Unidentifiable Mobile
    ], [[TYPE, util.lowerize], VENDOR, MODEL], [/[\s\/\(](smart-?tv)[;\)]/i // SmartTV
    ], [[TYPE, SMARTTV]], [/(android[\w\.\s\-]{0,9});.+build/i // Generic Android Device
    ], [MODEL, [VENDOR, 'Generic']]],
    engine: [[/windows.+\sedge\/([\w\.]+)/i // EdgeHTML
    ], [VERSION, [NAME, 'EdgeHTML']], [/webkit\/537\.36.+chrome\/(?!27)/i // Blink
    ], [[NAME, 'Blink']], [/(presto)\/([\w\.]+)/i, // Presto
    /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna
    /(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i, // KHTML/Tasman/Links
    /(icab)[\/\s]([23]\.[\d\.]+)/i // iCab
    ], [NAME, VERSION], [/rv\:([\w\.]{1,9}).+(gecko)/i // Gecko
    ], [VERSION, NAME]],
    os: [[// Windows based
    /microsoft\s(windows)\s(vista|xp)/i // Windows (iTunes)
    ], [NAME, VERSION], [/(windows)\snt\s6\.2;\s(arm)/i, // Windows RT
    /(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s\w]*)/i, // Windows Phone
    /(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i], [NAME, [VERSION, mapper.str, maps.os.windows.version]], [/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i], [[NAME, 'Windows'], [VERSION, mapper.str, maps.os.windows.version]], [// Mobile/Embedded OS
    /\((bb)(10);/i // BlackBerry 10
    ], [[NAME, 'BlackBerry'], VERSION], [/(blackberry)\w*\/?([\w\.]*)/i, // Blackberry
    /(tizen)[\/\s]([\w\.]+)/i, // Tizen
    /(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|sailfish|contiki)[\/\s-]?([\w\.]*)/i // Android/WebOS/Palm/QNX/Bada/RIM/MeeGo/Contiki/Sailfish OS
    ], [NAME, VERSION], [/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]*)/i // Symbian
    ], [[NAME, 'Symbian'], VERSION], [/\((series40);/i // Series 40
    ], [NAME], [/mozilla.+\(mobile;.+gecko.+firefox/i // Firefox OS
    ], [[NAME, 'Firefox OS'], VERSION], [// Console
    /(nintendo|playstation)\s([wids34portablevu]+)/i, // Nintendo/Playstation
    // GNU/Linux based
    /(mint)[\/\s\(]?(\w*)/i, // Mint
    /(mageia|vectorlinux)[;\s]/i, // Mageia/VectorLinux
    /(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]*)/i, // Joli/Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware
    // Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus
    /(hurd|linux)\s?([\w\.]*)/i, // Hurd/Linux
    /(gnu)\s?([\w\.]*)/i // GNU
    ], [NAME, VERSION], [/(cros)\s[\w]+\s([\w\.]+\w)/i // Chromium OS
    ], [[NAME, 'Chromium OS'], VERSION], [// Solaris
    /(sunos)\s?([\w\.\d]*)/i // Solaris
    ], [[NAME, 'Solaris'], VERSION], [// BSD based
    /\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]*)/i // FreeBSD/NetBSD/OpenBSD/PC-BSD/DragonFly
    ], [NAME, VERSION], [/(haiku)\s(\w+)/i // Haiku
    ], [NAME, VERSION], [/cfnetwork\/.+darwin/i, /ip[honead]{2,4}(?:.*os\s([\w]+)\slike\smac|;\sopera)/i // iOS
    ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [/(mac\sos\sx)\s?([\w\s\.]*)/i, /(macintosh|mac(?=_powerpc)\s)/i // Mac OS
    ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [// Other
    /((?:open)?solaris)[\/\s-]?([\w\.]*)/i, // Solaris
    /(aix)\s((\d)(?=\.|\)|\s)[\w\.])*/i, // AIX
    /(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms|fuchsia)/i, // Plan9/Minix/BeOS/OS2/AmigaOS/MorphOS/RISCOS/OpenVMS/Fuchsia
    /(unix)\s?([\w\.]*)/i // UNIX
    ], [NAME, VERSION]]
  }; /////////////////
  // Constructor
  ////////////////

  var UAParser = function UAParser(uastring, extensions) {
    if (_typeof(uastring) === 'object') {
      extensions = uastring;
      uastring = undefined;
    }

    if (!(this instanceof UAParser)) {
      return new UAParser(uastring, extensions).getResult();
    }

    var ua = uastring || (window && window.navigator && window.navigator.userAgent ? window.navigator.userAgent : EMPTY);
    var rgxmap = extensions ? util.extend(regexes, extensions) : regexes;

    this.getBrowser = function () {
      var browser = {
        name: undefined,
        version: undefined
      };
      mapper.rgx.call(browser, ua, rgxmap.browser);
      browser.major = util.major(browser.version); // deprecated

      return browser;
    };

    this.getCPU = function () {
      var cpu = {
        architecture: undefined
      };
      mapper.rgx.call(cpu, ua, rgxmap.cpu);
      return cpu;
    };

    this.getDevice = function () {
      var device = {
        vendor: undefined,
        model: undefined,
        type: undefined
      };
      mapper.rgx.call(device, ua, rgxmap.device);
      return device;
    };

    this.getEngine = function () {
      var engine = {
        name: undefined,
        version: undefined
      };
      mapper.rgx.call(engine, ua, rgxmap.engine);
      return engine;
    };

    this.getOS = function () {
      var os = {
        name: undefined,
        version: undefined
      };
      mapper.rgx.call(os, ua, rgxmap.os);
      return os;
    };

    this.getResult = function () {
      return {
        ua: this.getUA(),
        browser: this.getBrowser(),
        engine: this.getEngine(),
        os: this.getOS(),
        device: this.getDevice(),
        cpu: this.getCPU()
      };
    };

    this.getUA = function () {
      return ua;
    };

    this.setUA = function (uastring) {
      ua = uastring;
      return this;
    };

    return this;
  };

  UAParser.VERSION = LIBVERSION;
  UAParser.BROWSER = {
    NAME: NAME,
    MAJOR: MAJOR,
    // deprecated
    VERSION: VERSION
  };
  UAParser.CPU = {
    ARCHITECTURE: ARCHITECTURE
  };
  UAParser.DEVICE = {
    MODEL: MODEL,
    VENDOR: VENDOR,
    TYPE: TYPE,
    CONSOLE: CONSOLE,
    MOBILE: MOBILE,
    SMARTTV: SMARTTV,
    TABLET: TABLET,
    WEARABLE: WEARABLE,
    EMBEDDED: EMBEDDED
  };
  UAParser.ENGINE = {
    NAME: NAME,
    VERSION: VERSION
  };
  UAParser.OS = {
    NAME: NAME,
    VERSION: VERSION
  }; ///////////
  // Export
  //////////
  // check js environment

  if (( false ? undefined : _typeof(exports)) !== UNDEF_TYPE) {
    // nodejs env
    if (( false ? undefined : _typeof(module)) !== UNDEF_TYPE && module.exports) {
      exports = module.exports = UAParser;
    }

    exports.UAParser = UAParser;
  } else {
    // requirejs env (optional)
    if (true) {
      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
        return UAParser;
      }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else {}
  } // jQuery/Zepto specific (optional)
  // Note:
  //   In AMD env the global scope should be kept clean, but jQuery is an exception.
  //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,
  //   and we should catch that.


  var $ = window && (window.jQuery || window.Zepto);

  if (_typeof($) !== UNDEF_TYPE && !$.ua) {
    var parser = new UAParser();
    $.ua = parser.getResult();

    $.ua.get = function () {
      return parser.getUA();
    };

    $.ua.set = function (uastring) {
      parser.setUA(uastring);
      var result = parser.getResult();

      for (var prop in result) {
        $.ua[prop] = result[prop];
      }
    };
  }
})((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object' ? window : this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(52)(module)))

/***/ }),

/***/ 102:
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(197),
    compile = __webpack_require__(198);

module.exports = function nthCheck(formula) {
  return compile(parse(formula));
};

module.exports.parse = parse;
module.exports.compile = compile;

/***/ }),

/***/ 103:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var keys = __webpack_require__(104);

var hasSymbols = typeof Symbol === 'function' && _typeof(Symbol('foo')) === 'symbol';
var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var origDefineProperty = Object.defineProperty;

var isFunction = function isFunction(fn) {
  return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var arePropertyDescriptorsSupported = function arePropertyDescriptorsSupported() {
  var obj = {};

  try {
    origDefineProperty(obj, 'x', {
      enumerable: false,
      value: obj
    }); // eslint-disable-next-line no-unused-vars, no-restricted-syntax

    for (var _ in obj) {
      // jscs:ignore disallowUnusedVariables
      return false;
    }

    return obj.x === obj;
  } catch (e) {
    /* this is IE 8. */
    return false;
  }
};

var supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();

var defineProperty = function defineProperty(object, name, value, predicate) {
  if (name in object && (!isFunction(predicate) || !predicate())) {
    return;
  }

  if (supportsDescriptors) {
    origDefineProperty(object, name, {
      configurable: true,
      enumerable: false,
      value: value,
      writable: true
    });
  } else {
    object[name] = value;
  }
};

var defineProperties = function defineProperties(object, map) {
  var predicates = arguments.length > 2 ? arguments[2] : {};
  var props = keys(map);

  if (hasSymbols) {
    props = concat.call(props, Object.getOwnPropertySymbols(map));
  }

  for (var i = 0; i < props.length; i += 1) {
    defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
  }
};

defineProperties.supportsDescriptors = !!supportsDescriptors;
module.exports = defineProperties;

/***/ }),

/***/ 104:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var slice = Array.prototype.slice;

var isArgs = __webpack_require__(105);

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) {
  return origKeys(o);
} : __webpack_require__(173);
var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
  if (Object.keys) {
    var keysWorksWithArguments = function () {
      // Safari 5.0 bug
      var args = Object.keys(arguments);
      return args && args.length === arguments.length;
    }(1, 2);

    if (!keysWorksWithArguments) {
      Object.keys = function keys(object) {
        // eslint-disable-line func-name-matching
        if (isArgs(object)) {
          return originalKeys(slice.call(object));
        }

        return originalKeys(object);
      };
    }
  } else {
    Object.keys = keysShim;
  }

  return Object.keys || keysShim;
};

module.exports = keysShim;

/***/ }),

/***/ 105:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
  var str = toStr.call(value);
  var isArgs = str === '[object Arguments]';

  if (!isArgs) {
    isArgs = str !== '[object Array]' && value !== null && _typeof(value) === 'object' && typeof value.length === 'number' && value.length >= 0 && toStr.call(value.callee) === '[object Function]';
  }

  return isArgs;
};

/***/ }),

/***/ 106:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(174);

/***/ }),

/***/ 107:
/***/ (function(module, exports) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

module.exports = function isPrimitive(value) {
  return value === null || typeof value !== 'function' && _typeof(value) !== 'object';
};

/***/ }),

/***/ 108:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(71);

var $TypeError = GetIntrinsic('%TypeError%');
var $SyntaxError = GetIntrinsic('%SyntaxError%');

var has = __webpack_require__(53);

var predicates = {
  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type
  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {
    if (ES.Type(Desc) !== 'Object') {
      return false;
    }

    var allowed = {
      '[[Configurable]]': true,
      '[[Enumerable]]': true,
      '[[Get]]': true,
      '[[Set]]': true,
      '[[Value]]': true,
      '[[Writable]]': true
    };

    for (var key in Desc) {
      // eslint-disable-line
      if (has(Desc, key) && !allowed[key]) {
        return false;
      }
    }

    var isData = has(Desc, '[[Value]]');
    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');

    if (isData && IsAccessor) {
      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');
    }

    return true;
  }
};

module.exports = function assertRecord(ES, recordType, argumentName, value) {
  var predicate = predicates[recordType];

  if (typeof predicate !== 'function') {
    throw new $SyntaxError('unknown record type: ' + recordType);
  }

  if (!predicate(ES, value)) {
    throw new $TypeError(argumentName + ' must be a ' + recordType);
  }

  console.log(predicate(ES, value), value);
};

/***/ }),

/***/ 109:
/***/ (function(module, exports) {

module.exports = Number.isNaN || function isNaN(a) {
  return a !== a;
};

/***/ }),

/***/ 110:
/***/ (function(module, exports) {

var $isNaN = Number.isNaN || function (a) {
  return a !== a;
};

module.exports = Number.isFinite || function (x) {
  return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity;
};

/***/ }),

/***/ 111:
/***/ (function(module, exports) {

module.exports = function sign(number) {
  return number >= 0 ? 1 : -1;
};

/***/ }),

/***/ 112:
/***/ (function(module, exports) {

module.exports = function mod(number, modulo) {
  var remain = number % modulo;
  return Math.floor(remain >= 0 ? remain : remain + modulo);
};

/***/ }),

/***/ 113:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var ES = __webpack_require__(106);

var $isNaN = Number.isNaN || function isNaN(a) {
  return a !== a;
};

var $isFinite = Number.isFinite || function isFinite(n) {
  return typeof n === 'number' && global.isFinite(n);
};

var indexOf = Array.prototype.indexOf;

module.exports = function includes(searchElement) {
  var fromIndex = arguments.length > 1 ? ES.ToInteger(arguments[1]) : 0;

  if (indexOf && !$isNaN(searchElement) && $isFinite(fromIndex) && typeof searchElement !== 'undefined') {
    return indexOf.apply(this, arguments) > -1;
  }

  var O = ES.ToObject(this);
  var length = ES.ToLength(O.length);

  if (length === 0) {
    return false;
  }

  var k = fromIndex >= 0 ? fromIndex : Math.max(0, length + fromIndex);

  while (k < length) {
    if (ES.SameValueZero(searchElement, O[k])) {
      return true;
    }

    k += 1;
  }

  return false;
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(70)))

/***/ }),

/***/ 114:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(113);

module.exports = function getPolyfill() {
  return Array.prototype.includes || implementation;
};

/***/ }),

/***/ 115:
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var freeGlobal = __webpack_require__(190);
/** Detect free variable `self`. */


var freeSelf = (typeof self === "undefined" ? "undefined" : _typeof(self)) == 'object' && self && self.Object === Object && self;
/** Used as a reference to the global object. */

var root = freeGlobal || freeSelf || Function('return this')();
module.exports = root;

/***/ }),

/***/ 116:
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(115);
/** Built-in value references. */


var _Symbol = root.Symbol;
module.exports = _Symbol;

/***/ }),

/***/ 150:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (promises) {
  return new Promise(function (resolve, reject) {
    var resolved = false;
    var firstError;
    Promise.all(promises.map(function (promise) {
      return promise.then(function (result) {
        if (!resolved) {
          resolve(result);
          resolved = true;
        }
      }, function (err) {
        firstError = firstError || err;
      });
    })).then(function () {
      if (firstError && !resolved) {
        reject(firstError);
      }
    });
  });
};

/***/ }),

/***/ 151:
/***/ (function(module, exports) {

module.exports = [{condition:{key:'location.hostname',test:'localhost.dev'},action:{asdf:true}},{action:{autoPruneOrphans:true}}]

/***/ }),

/***/ 152:
/***/ (function(module, exports) {

module.exports = [{channel:'standard',condition:[{key:'slot.type',compare:'in',test:['dfp_top_banner','dfp_bigbox','dfp_leaderboard','dfp_smartphone_banner','dfp_prog_bigbox','dfp_after_component']},{compare:'and',test:[{compare:'or',test:[{key:'slot.meta.creativeMetaLoaded',test:true},{key:'slot.meta.creativeMetaError',test:true}]},{compare:'or',test:[{key:'slot.meta.priority',compare:'>',test:2},{key:'slot.meta.priority',compare:'undefined'}]}]},{key:'slot.creative.isEmpty',test:false},{key:'slot.meta.kronosLocked',compare:'!=',test:true}],action:{refreshThreshold:30,refresh:true}},{channel:'standard',condition:[{key:'slot.type',compare:'in',test:['dfp_after_component','dfp_leaderboard','dfp_leaderboard_body','dfp_bigbox','dfp_native_ingredient','dfp_grocery_list']}],action:{preventFindRefresh:true,shouldLazyLoad:true}},{channel:'standard',condition:[{key:'slot.id',compare:'^',test:'dfp_bigbox_'}],action:{preventFindRefresh:true,shouldLazyLoad:true}},{channel:'standard',condition:[{key:'slot.id',compare:'^',test:'overlay_bigbox'}],action:{preventFindRefresh:false,shouldLazyLoad:false}},{channel:'standard',condition:[{key:'slot.id',compare:'=',test:'dfp_bigbox'}],action:{preventFindRefresh:false,shouldLazyLoad:false}},{channel:'standard',condition:[{key:'page.delivery_channel',compare:'=',test:'mobile'},{key:'slot.id',compare:'=',test:'dfp_bigbox'}],action:{preventFindRefresh:true,shouldLazyLoad:true}},{channel:'standard',condition:[{key:'page.pagetype',test:'recipe'}],action:{kronos:{tolerance:90}}},{channel:'standard',condition:[{key:'page.site',compare:'in',test:['hgtv','food','diy','travel','cook','gac']}],action:{refreshThreshold:20}},{channel:'golf',action:{'+kronos':{targetingCountKey:'ctx_slot_rn'}}},{channel:'golf',condition:[{key:'slot.type',compare:'in',test:['box_top_mobile','golfworld_banner_top','banner_instream_golfworld1','banner_instream_golfworld2','banner_instream_golfworld3','banner_instream_golfworld4','banner_instream_golfworld5','banner_instream_golfworld6','theloop_banner_top','theloop_banner_recirc','banner_bottom','theloop_banner_recirc','longform_instream','banner_top_slideshow','box_top_slideshow','banner_top_listicle','box_top_listicle','banner_instream_listicle','banner_top','banner_instream','banner_hotlist_top','box_top','banner_hotlist','banner_midboard','banner_hotlist_inline','banner_hotlist_middle','banner_hotlist_middle_parallax','banner_hotlist_bottom','banner_hotlist_product_inline','cm_index_page_contentRiver','cm_homepage_content_river','cm_footer']}],action:{refresh:true,refreshThreshold:20,preventFindRefresh:true,shouldLazyLoad:true}},{channel:'golf',condition:[{key:'slot.type',compare:'in',test:['interstitial_slideshow']}],action:{preventFindRefresh:true}}]

/***/ }),

/***/ 153:
/***/ (function(module, exports) {

module.exports = [{channel:'standard',action:{targetingWhitelist:['pagetype','uniqueid','topic','keyterm','adkey1','talentName','showName','keyword','contenttag1','contenttag2','category','photocount','vgncontent','show_abbr','sniads_regression_test','ing','scripps160','scripps250','scripps600','scripps728','scripps320','scripps250btf','scripps250m','cs_debug','subsection','subsection1','subsection2','subsctn1','subsctn2','source','livingsource','orntn','version','sbi_apoc','sbi_size','sbi_dozer','glist','mcid','aam_fw','main_ing','site','page_uniqueid','strnativekey','classification','abkey','kuid','ksg','light_mode','sctndspname','partner']}},{channel:'golf',action:{targetingWhitelist:['site','pagetype','env_device_type','ctx_template','ctx_page_slug','ctx_page_channel','ctx_page_sub_channel','cnt_tags','uniqueid','ao_test','userid']}}]

/***/ }),

/***/ 154:
/***/ (function(module, exports) {

module.exports = [{action:{slotDefinitions:{nop:{enabled:false},dfp_bigbox:{sizes:{default:['300,250','300,600','300,1050'],responsive:{small:['300,250'],medium:['300,250'],large:['300,250','300,600','300,1050'],xlarge:['300,250','300,600','300,1050']}}},dfp_top_banner:{sizes:{default:['728,90','970,90','970,250','1,5'],responsive:{small:['320,50'],medium:['728,90','970,90','970,250','1,5'],large:['728,90','970,90','970,250','1,5'],xlarge:['728,90','970,90','970,250','1,5']}}},dfp_leaderboard:{sizes:{default:['728,90','970,90','970,250','1,5'],responsive:{small:['320,50'],medium:['728,90','970,90','970,250','1,5'],large:['728,90','970,90','970,250','1,5'],xlarge:['728,90','970,90','970,250','1,5']}}},dfp_leaderboard_body:{sizes:{default:['728,90','970,90'],responsive:{small:['320,50','4,1'],medium:['728,90','970,90'],large:['728,90','970,90'],xlarge:['728,90','970,90']}}},dfp_photo_interstitial:{sizes:{default:['1,3']}},dfp_pushdown_brandscape:{sizes:{default:['1,5','1,14']}},dfp_utility1:{sizes:{default:['1,6']}},dfp_utility2:{sizes:{default:['1,12']}},dfp_sponsorship_module:{sizes:{default:['300,150']}},dfp_smartphone_banner:{sizes:{default:['320,50','1,5']}},dfp_after_component:{distanceFromTop:1500,distanceFromSimilarSlot:1500,nthInstance:'n+2',sizes:{default:['728,90']}},dfp_native:{sizes:{default:['1,11','fluid']}},dfp_rsi_result:{sizes:{default:['1,10']}},dfp_logo:{sizes:{default:['1,2']}},dfp_native_ingredient:{sizes:{default:['1,15']}},dfp_grocery_list:{sizes:{default:['1,13']}},banner_hotlist_top:{position:'hero',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','320,150','300,250','9,1','3,1'],medium:['728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','9,1','9,3','8,1'],large:['728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','9,1','9,3','10,1'],xlarge:['728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','9,1','9,3','10,1']}}},banner_top:{position:'hero',sizes:{default:[],responsive:{small:['9,1','3,1','300,50','320,50','300,150','320,150','300,250'],medium:['9,1','8,1','728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534'],large:['9,1','10,1','728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534'],xlarge:['9,1','10,1','728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534']}}},golfworld_banner_top:{position:'hero',sizes:{default:[],responsive:{small:['9,3','9,1','3,1','300,50','320,50','300,150','320,150'],medium:['9,3','9,1','8,1','728,90','970,90','970,250'],large:['9,3','9,1','10,1','728,90','970,90','970,250'],xlarge:['9,3','9,1','10,1','728,90','970,90','970,250']}}},theloop_banner_top:{position:'hero',sizes:{default:[],responsive:{small:['9,1','3,1','300,50','320,50','300,150','320,150'],medium:['9,1','8,1','728,90','970,90','970,250'],large:['9,1','10,1','728,90','970,90','970,250'],xlarge:['9,1','10,1','728,90','970,90','970,250']}}},banner_top_listicle:{position:'hero',sizes:{default:[],responsive:{small:['9,1','3,1','300,50','320,50','300,150','320,150','300,250'],medium:['9,1','8,1','728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534'],large:['9,1','10,1','728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534'],xlarge:['9,1','10,1','728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534']}}},box_top:{position:'rail',sizes:{default:[],responsive:{small:[],medium:['300,250','300,600'],large:['300,250','300,600'],xlarge:['300,250','300,600']}}},box_top_listicle:{position:'rail',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','320,150','300,250'],medium:['300,250','300,600'],large:['300,250','300,600'],xlarge:['300,250','300,600']}}},box_top_slideshow:{position:'rail',sizes:{default:[],responsive:{small:[],medium:['300,250'],large:['300,250'],xlarge:['300,250']}}},banner_bottom:{position:'footer',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','320,150','300,250','9,2','9,3','16,9'],medium:['728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534','4,1'],large:['728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534','4,1'],xlarge:['728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534','4,1']}}},banner_midboard:{position:'mid-content',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','320,150','300,250','9,2','9,3','16,9','2,1'],medium:['728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534','9,2','4,1','2,1'],large:['728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534','9,2','4,1','2,1'],xlarge:['728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534','9,2','4,1','2,1']}}},box_top_mobile:{position:'rail',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','320,150','300,250','9,2','9,3'],medium:[],large:[],xlarge:[]}}},banner_instream:{position:'mid-content',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','320,150','300,250','16,9','2,1'],medium:['728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534','9,2','4,1','2,1'],large:['728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534','9,2','4,1','2,1'],xlarge:['728,90','970,418','970,250','980,300','970,90','970,66','62,88','88,31','196,31','2048,1534','9,2','4,1','2,1']}}},banner_instream_listicle:{position:'mid-content',nthInstance:'3n+1',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','320,150','300,250','16,9','2,1'],medium:['728,90','970,250','970,90','970,418','62,88','88,32','196,31','4,1','2,1'],large:['728,90','970,250','970,90','970,418','62,88','88,32','196,31','4,1','2,1'],xlarge:['728,90','970,250','970,90','970,418','62,88','88,32','196,31','4,1','2,1']}}},theloop_banner_recirc:{position:'legacy',sizes:{default:[],responsive:{small:['300,50','320,50','300,250'],medium:['728,90','970,90'],large:['728,90','970,90'],xlarge:['728,90','970,90']}}},longform_instream:{position:'mid-content',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','300,250','320,150','9,1','16,9','2,1'],medium:['728,90','970,250','970,90','970,66','970,418','9,1','4,1','2,1'],large:['728,90','970,250','970,90','970,66','970,418','9,1','4,1','2,1'],xlarge:['728,90','970,250','970,90','970,66','970,418','9,1','4,1','2,1']}}},banner_instream_golfworld1:{position:'mid-content',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','300,250','320,150','9,2','16,9','2,1'],medium:['728,90','970,250','970,90','9,2','4,1','2,1'],large:['728,90','970,250','970,90','9,2','4,1','2,1'],xlarge:['728,90','970,250','970,90','9,2','4,1','2,1']}}},banner_instream_golfworld2:{position:'mid-content',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','300,250','320,150','9,2','16,9','2,1'],medium:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1'],large:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1'],xlarge:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1']}}},banner_instream_golfworld3:{position:'mid-content',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','300,250','320,150','9,1','9,2','9,3','16,9','2,1'],medium:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1'],large:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1'],xlarge:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1']}}},banner_instream_golfworld4:{position:'mid-content',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','300,250','320,150','9,1','9,2','9,3','16,9','2,1'],medium:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1'],large:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1'],xlarge:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1']}}},banner_instream_golfworld5:{position:'mid-content',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','300,250','320,150','9,1','9,2','9,3','16,9','2,1'],medium:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1'],large:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1'],xlarge:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1']}}},banner_instream_golfworld6:{position:'mid-content',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','300,250','320,150','9,1','9,2','9,3','16,9','2,1'],medium:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1'],large:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1'],xlarge:['728,90','970,250','970,90','9,1','9,2','9,3','4,1','2,1']}}},banner_hotlist_inline:{position:'mid-content',sizes:{default:[],responsive:{small:['300,50','320,50','300,100','300,150','300,250','320,150','300,250','9,2','16,9','2,1'],medium:[],large:[],xlarge:[]}}},banner_hotlist:{position:'mid-content',canBeHidden:true,sizes:{default:[],responsive:{small:[],medium:['728,90','970,66','970,90','970,250','970,418','62,88','88,32','196,31','9,2','4,1','2,1'],large:['728,90','970,66','970,90','970,250','970,418','62,88','88,32','196,31','9,2','4,1','2,1'],xlarge:['728,90','970,66','970,90','970,250','970,418','62,88','88,32','196,31','9,2','4,1','2,1']}}},banner_hotlist_middle:{position:'mid-content',sizes:{default:[],responsive:{small:['300,50','320,50','300,100','300,150','320,150','300,250','16,9','2,1'],medium:['728,90','970,66','970,90','970,250','970,418','62,88','88,32','196,31','9,2','4,1','2,1'],large:['728,90','970,66','970,90','970,250','970,418','62,88','88,32','196,31','9,2','4,1','2,1'],xlarge:['728,90','970,66','970,90','970,250','970,418','62,88','88,32','196,31','9,2','4,1','2,1']}}},banner_hotlist_middle_parallax:{position:'mid-content',sizes:{default:[],responsive:{small:['300,50','320,50','300,100','300,150','320,150','300,250','9,2','16,9','2,1'],medium:[],large:[],xlarge:[]}}},banner_hotlist_bottom:{position:'footer',sizes:{default:[],responsive:{small:['300,50','320,50','300,100','300,150','320,150','300,250','16,9'],medium:['728,90','970,66','970,90','970,250','970,420','62,90','88,33','196,33','4,1'],large:['728,90','970,66','970,90','970,250','970,420','62,90','88,33','196,33','4,1'],xlarge:['728,90','970,66','970,90','970,250','970,420','62,90','88,33','196,33','4,1']}}},banner_hotlist_product_inline:{position:'mid-content',sizes:{default:[],responsive:{small:['300,50','320,50','300,100','300,150','320,150','300,250','16,9','2,1'],medium:[],large:[],xlarge:[]}}},banner_top_slideshow:{position:'hero',sizes:{default:[],responsive:{small:['300,50','320,50','300,150','320,150','300,250','16,9','2,1'],medium:['970,90','728,90','4,1','2,1'],large:['728,90','970,90','4,1','2,1'],xlarge:['728,90','970,90','4,1','2,1']}}},interstitial_slideshow:{position:'mid-gallery',sizes:{default:[],responsive:{small:['300,250','16,9','2,1'],medium:['300,250','4,1','2,1'],large:['300,250','4,1','2,1'],xlarge:['300,250','4,1','2,1']}}},cm_homepage_content_river:{position:'cm',useLegacyPath:true,suffix:'cm',canBeHidden:true,sizes:{default:[],responsive:{small:[],medium:['730,180'],large:['969,251'],xlarge:['969,251']}}},cm_index_page_contentRiver:{position:'cm',useLegacyPath:true,suffix:'cm',canBeHidden:true,sizes:{default:[],responsive:{small:[],medium:['475,100'],large:['475,100'],xlarge:['475,100']}}},cm_article_content_river:{position:'cm',useLegacyPath:true,suffix:'cm',canBeHidden:true,sizes:{default:['476,100']}},cm_footer:{position:'cm',useLegacyPath:true,suffix:'cm',canBeHidden:true,sizes:{default:[],responsive:{small:['300,101'],medium:['728,180'],large:['969,252'],xlarge:['969,252']}}},sponsor_stix_link:{position:'sponsor',sizes:{default:['135,36']}},_out_of_page:{position:'interstitial',isOutOfPage:true,canBeHidden:true,sizes:{default:['1,1']}}}}},{channel:'standard',condition:[{key:'page.delivery_channel',test:'mobile'}],action:{'+slotDefinitions':{'+dfp_bigbox':{'+sizes':{'-default':['300,600','300,1050'],'+responsive':{'-small':['300,600'],'-medium':['300,600','300,1050'],'-large':['300,600','300,1050'],'-xlarge':['300,600','300,1050']}}}}}},{channel:'standard',condition:[{key:'page.uniqueid',test:'gac|landingpage|fa5a26ed246fca9bdcd0dfe8701407d9|1'}],action:{'+slotDefinitions':{'+dfp_bigbox':{'+sizes':{'-default':['300,600','300,1050'],'+responsive':{'-small':['300,600'],'-medium':['300,600','300,1050'],'-large':['300,600','300,1050'],'-xlarge':['300,600','300,1050']}}}}}},{channel:'standard',condition:[{key:'page.delivery_channel',test:'mobile'}],action:{'+slotDefinitions':{'+dfp_after_component':{sizes:{default:['300,250']}}}}},{channel:'standard',condition:[{key:'page.categorydspname',test:'home'}],action:{'+slotDefinitions':{'+dfp_top_banner':{'+sizes':{'-default':['970,90','970,250'],'+responsive':{small:['320,50'],'-medium':['970,90','970,250'],'-large':['970,90','970,250'],'-xlarge':['970,90','970,250']}}},'+dfp_bigbox':{'+sizes':{'-default':['300,1050'],'+responsive':{'-large':['300,1050'],'-xlarge':['300,1050']}}}}}},{channel:'standard',condition:[{key:'page.site',test:'travel'},{key:'page.delivery_channel',test:'web'},{key:'page.pagetype',test:'photogallerypage'}],action:{'+slotDefinitions':{'+dfp_bigbox':{sizes:{default:['300,250'],responsive:{small:['300,250'],medium:['300,250'],large:['300,250'],xlarge:['300,250']}}}}}},{channel:'standard',condition:[{key:'page.pagetype',test:'photogallerypage'}],action:{'+slotDefinitions':{'+dfp_bigbox':{'+sizes':{'-default':['300,1050'],'+responsive':{'-large':['300,1050'],'-xlarge':['300,1050']}}}}}},{channel:'standard',condition:[{key:'page.site',test:'dsc/discovery'},{key:'page.delivery_channel',test:'mobile'}],action:{'+slotDefinitions':{'+dfp_after_component':{distanceFromTop:1000,distanceFromSimilarSlot:1200},'-dfp_leaderboard_body':null}}},{channel:'standard',condition:[{key:'page.site',test:'food'},{key:'page.category',test:'home'}],action:{'+slotDefinitions':{dfp_leaderboard:{enabled:false},dfp_leaderboard_body:{enabled:false}}}},{channel:'standard',condition:[{key:'page.site',test:'food'},{key:'page.pagetype',test:'photogallerypage'}],action:{'+slotDefinitions':{dfp_native:{enabled:false}}}}]

/***/ }),

/***/ 155:
/***/ (function(module, exports) {

module.exports = [{action:{gpt:{collapseEmptyDivs:false,singleRequestMode:true,centerAds:true,disableInitialLoad:true}}},{channel:['standard','dtc-web'],action:{'+findSlotsOnLoad':[{selector:'#dfp_bigbox, #dfp_prog_bigbox, #dfp_sticky_bigbox, [id^=dfp_bigbox_], [data-slot-type=dfp_bigbox]',type:'dfp_bigbox'},{selector:'#dfp_leaderboard',type:'dfp_top_banner'},{selector:'[data-slot-type^=dfp_leaderboard], [id^=dfp_leaderboard_body]',type:'dfp_leaderboard'},{selector:'[id^=dfp_leaderboard_container_]',type:'dfp_leaderboard'},'dfp_smartphone_banner','dfp_sponsorship_module',{selector:'#dfp_cartridge, #dfp_native_infeed, #dfp_native_recommendation',type:'dfp_native'},{selector:'.section.assetTitle + [data-slot-type=dfp_after_component]',type:'nop'},{selector:'[data-slot-type=dfp_after_component]',type:'dfp_after_component'},'dfp_rsi_result','dfp_utility1','dfp_logo','dfp_native_ingredient','dfp_grocery_list'],overlaySelectors:['div#video-gallery.o-Modal.in','div#photo-gallery.o-Modal.in','div.o-Modal__m-Backdrop','div.fd-recipe-gallery.js-recipe-gallery.fd-lazyload-container']}},{channel:'golf',action:{findSlotsOnLoad:['box_top_mobile','cm_homepage_content_river','golfworld_banner_top','banner_instream_golfworld1','banner_instream_golfworld2','banner_instream_golfworld3','banner_instream_golfworld4','banner_instream_golfworld5','banner_instream_golfworld6','theloop_banner_top','theloop_banner_recirc','banner_bottom','theloop_banner_recirc','longform_instream',{selector:'[data-slot-type=banner_slideshow], [data-slot-type=banner_top_slideshow]',type:'banner_top_slideshow'},'box_top_slideshow','interstitial_slideshow',{selector:'#photo_interstitial_wrapper',type:'interstitial_slideshow'},'banner_top_listicle','box_top_listicle','banner_instream_listicle','cm_article_content_river','banner_top','banner_instream','_out_of_page','banner_hotlist_top','box_top','banner_hotlist','banner_midboard','banner_hotlist_inline','banner_hotlist_middle','banner_hotlist_middle_parallax','banner_hotlist_bottom','banner_hotlist_product_inline','cm_mobile_subnav','cm_index_page_contentRiver','cm_footer']}},{channel:'standard',action:{lazyLoader:{distanceFromViewport:1200}}},{channel:'standard',condition:[{key:'page.delivery_channel',test:'mobile'}],action:{lazyLoader:{distanceFromViewport:800}}},{channel:'standard',condition:[{key:'page.pagetype',test:'photogallerypage'}],action:{'+fixedLeaderboard':{enabled:true,duration:0},'+photoGallery':{'+activeSlots':{leaderboard:{selector:'#dfp_leaderboard',refreshRate:2},bigbox:{selector:'[id^=overlay_bigbox]',refreshRate:1}}},'+slotDefinitions':{'+dfp_top_banner':{'+sizes':{'-default':['970,90','970,250'],'+responsive':{'-medium':['970,90','970,250'],'-large':['970,90','970,250'],'-xlarge':['970,90','970,250']}}}}}},{channel:'standard',condition:[{key:'page.site',test:'dsc/discovery'}],action:{'+fixedLeaderboard':{containerSelector:'#leaderboard-wrap'}}},{channel:'standard',condition:[{key:'page.site',test:'dsc/discovery'},{key:'page.delivery_channel',test:'mobile'},{key:'page.pagetype',test:'fullwidthpage'}],action:{'+fixedLeaderboard':{containerSelector:'#leaderboard-wrap'}}},{channel:'standard',condition:[{key:'page.pagetype',compare:'in',test:['userprofilepage','passwordresetpage']}],action:{findSlotsOnLoad:[]}},{channel:'standard',condition:[{key:'page.site',test:'diy'}],action:{photoGallery:{enabled:false}}},{channel:'standard',condition:[{key:'page.site',test:'hgtv'},{key:'page.pagetype',test:'photogallerypage'},{key:'page.delivery_channel',test:'web'}],action:{'+slotDefinitions':{dfp_native:{enabled:false}}}},{channel:'standard',condition:[{key:'page.premium',test:'1'}],action:{findSlotsOnLoad:[],photoGallery:{enabled:false},slotDefinitions:{}}},{channel:'standard',condition:[{key:'page.site',test:'diy'},{key:'page.uniqueid',compare:'in',test:['diy|onecolumnpage|db1c513cc25d78577802b8756fb70a67|1','diy|fullwidthpage|64081879295ec8a4bf69b1725debd9e7|1']}],action:{'+slotDefinitions':{dfp_top_banner:{enabled:false},dfp_smartphone_banner:{enabled:false},dfp_utility1:{enabled:false}}}},{channel:'standard',condition:[{key:'page.site',test:'diy'},{key:'page.uniqueid',test:'diy|universallandingpage|4828eed5faa11d2b7d4bf9cf4b3d9926|1'}],action:{'+slotDefinitions':{'+dfp_top_banner':{'+sizes':{'-default':['970,90','970,250','1,5'],'+responsive':{'-medium':['970,90','970,250','1,5'],'-large':['970,90','970,250','1,5'],'-xlarge':['970,90','970,250','1,5']}}}}}},{channel:'standard',condition:[{key:'page.site',test:'hgtv'},{key:'page.categorydspname',compare:'in',test:['sweepstakes','sponsored']}],action:{'+prebid':{'+slotMap':{'+hgtv':{'+dfp_bigbox':{'-kargo300x250':null},'+dfp_native':{'-kargo':null},'+dfp_smartphone_banner':{'-kargo':null},'+dfp_leaderboard_body':{'-kargo':null}}}}}},{channel:'standard',condition:[{key:'page.site',test:'travel'},{key:'page.categorydspname',test:'sweepstakes'}],action:{'+prebid':{'+slotMap':{'+travel':{'+dfp_bigbox':{'-kargo300x250':null},'+dfp_smartphone_banner':{'-kargo':null}}}}}},{channel:'standard',condition:[{key:'page.site',test:'diy'},{key:'page.categorydspname',compare:'in',test:['hgtv_smart_home','hgtv_urban_oasis','hgtv_dream_home','sponsored']}],action:{'+prebid':{'+slotMap':{'+diy':{'+dfp_bigbox':{'-kargo300x250':null},'+dfp_smartphone_banner':{'-kargo':null}}}}}},{channel:'standard',condition:[{key:'page.site',test:'diy'},{key:'page.categorydspname',test:'about_us'},{key:'page.sctndspname',test:'diy_sweepstakes'}],action:{'+prebid':{'+slotMap':{'+diy':{'+dfp_bigbox':{'-kargo300x250':null},'+dfp_smartphone_banner':{'-kargo':null}}}}}},{channel:'standard',condition:[{key:'page.site',test:'food'},{key:'page.categorydspname',compare:'in',test:['sponsored']}],action:{'+prebid':{'+slotMap':{'+food':{'+dfp_bigbox':{'-kargo300x250':null},'+dfp_native':{'-kargo':null},'+dfp_smartphone_banner':{'-kargo':null},'+dfp_leaderboard_body':{'-kargo':null}}}}}},{channel:'standard',condition:[{key:'page.site',test:'tlc'},{key:'page.sctndspname',test:'sponsored'}],action:{'+slotDefinitions':{dfp_top_banner:{enabled:false}}}},{channel:'golf',action:{'+gpt':{singleRequestMode:false}}},{channel:'golf',condition:[{key:'page.pagetype',test:'photogallerypage'}],action:{'+slotDefinitions':{dfp_photo_interstitial:{enabled:false},_out_of_page:{enabled:false}},'+photoGallery':{interstitialFrequency:7,'+activeSlots':{interstitial:{selector:'[data-slot-type=interstitial_slideshow]'},'-leaderboard':null,'-bigbox':null}}}},{channel:'standard',condition:{compare:'and',test:[{key:'page.site',test:'food'},{key:'page.delivery_channel',test:'web'},{key:'page.pagetype',compare:'in',test:['recipe','universallandingpage','sitesearchpage','votepage']}]},action:{'+fixedLeaderboard':{enabled:true,duration:10}}},{channel:'dtc-web',action:{'+slotDefinitions':{dfp_smartphone_banner:{sizes:{default:[],responsive:{small:['320,50'],medium:['320,50'],large:[],xlarge:[]}}},'+dfp_top_banner':{'+sizes':{'+responsive':{small:[],medium:[]}}},'+dfp_bigbox':{'+sizes':{'-default':['300,600','300,1050'],'+responsive':{'-medium':['300,600','300,1050'],'-large':['300,600','300,1050'],'-xlarge':['300,600','300,1050']}}}}}}]

/***/ }),

/***/ 156:
/***/ (function(module, exports) {

module.exports = [{channel:'standard',action:{dfpEnvironment:'production'}},{channel:'golf',action:{dfpEnvironment:'golf-prod'}},{channel:'dtc-web',action:{dfpEnvironment:'production'}},{channel:'standard',condition:{compare:'or',test:[{key:'env.NODE_ENV',test:'development'},{key:'location.query.dfpenv',test:'staging'}]},action:{dfpEnvironment:'staging'}},{channel:'standard',condition:{key:'location.query.dfpenv',test:'production'},action:{dfpEnvironment:'production'}}]

/***/ }),

/***/ 157:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

(function (root, factory) {
  'use strict';
  /*istanbul ignore next:cant test*/

  if (( false ? undefined : _typeof(module)) === 'object' && _typeof(module.exports) === 'object') {
    module.exports = factory();
  } else if (true) {
    // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function () {
  'use strict';

  var toStr = Object.prototype.toString;

  function hasOwnProperty(obj, prop) {
    if (obj == null) {
      return false;
    } //to handle objects with null prototypes (too edge case?)


    return Object.prototype.hasOwnProperty.call(obj, prop);
  }

  function isEmpty(value) {
    if (!value) {
      return true;
    }

    if (isArray(value) && value.length === 0) {
      return true;
    } else if (typeof value !== 'string') {
      for (var i in value) {
        if (hasOwnProperty(value, i)) {
          return false;
        }
      }

      return true;
    }

    return false;
  }

  function toString(type) {
    return toStr.call(type);
  }

  function isObject(obj) {
    return _typeof(obj) === 'object' && toString(obj) === "[object Object]";
  }

  var isArray = Array.isArray || function (obj) {
    /*istanbul ignore next:cant test*/
    return toStr.call(obj) === '[object Array]';
  };

  function isBoolean(obj) {
    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';
  }

  function getKey(key) {
    var intKey = parseInt(key);

    if (intKey.toString() === key) {
      return intKey;
    }

    return key;
  }

  function factory(options) {
    options = options || {};

    var objectPath = function objectPath(obj) {
      return Object.keys(objectPath).reduce(function (proxy, prop) {
        if (prop === 'create') {
          return proxy;
        }
        /*istanbul ignore else*/


        if (typeof objectPath[prop] === 'function') {
          proxy[prop] = objectPath[prop].bind(objectPath, obj);
        }

        return proxy;
      }, {});
    };

    function hasShallowProperty(obj, prop) {
      return options.includeInheritedProps || typeof prop === 'number' && Array.isArray(obj) || hasOwnProperty(obj, prop);
    }

    function getShallowProperty(obj, prop) {
      if (hasShallowProperty(obj, prop)) {
        return obj[prop];
      }
    }

    function set(obj, path, value, doNotReplace) {
      if (typeof path === 'number') {
        path = [path];
      }

      if (!path || path.length === 0) {
        return obj;
      }

      if (typeof path === 'string') {
        return set(obj, path.split('.').map(getKey), value, doNotReplace);
      }

      var currentPath = path[0];
      var currentValue = getShallowProperty(obj, currentPath);

      if (path.length === 1) {
        if (currentValue === void 0 || !doNotReplace) {
          obj[currentPath] = value;
        }

        return currentValue;
      }

      if (currentValue === void 0) {
        //check if we assume an array
        if (typeof path[1] === 'number') {
          obj[currentPath] = [];
        } else {
          obj[currentPath] = {};
        }
      }

      return set(obj[currentPath], path.slice(1), value, doNotReplace);
    }

    objectPath.has = function (obj, path) {
      if (typeof path === 'number') {
        path = [path];
      } else if (typeof path === 'string') {
        path = path.split('.');
      }

      if (!path || path.length === 0) {
        return !!obj;
      }

      for (var i = 0; i < path.length; i++) {
        var j = getKey(path[i]);

        if (typeof j === 'number' && isArray(obj) && j < obj.length || (options.includeInheritedProps ? j in Object(obj) : hasOwnProperty(obj, j))) {
          obj = obj[j];
        } else {
          return false;
        }
      }

      return true;
    };

    objectPath.ensureExists = function (obj, path, value) {
      return set(obj, path, value, true);
    };

    objectPath.set = function (obj, path, value, doNotReplace) {
      return set(obj, path, value, doNotReplace);
    };

    objectPath.insert = function (obj, path, value, at) {
      var arr = objectPath.get(obj, path);
      at = ~~at;

      if (!isArray(arr)) {
        arr = [];
        objectPath.set(obj, path, arr);
      }

      arr.splice(at, 0, value);
    };

    objectPath.empty = function (obj, path) {
      if (isEmpty(path)) {
        return void 0;
      }

      if (obj == null) {
        return void 0;
      }

      var value, i;

      if (!(value = objectPath.get(obj, path))) {
        return void 0;
      }

      if (typeof value === 'string') {
        return objectPath.set(obj, path, '');
      } else if (isBoolean(value)) {
        return objectPath.set(obj, path, false);
      } else if (typeof value === 'number') {
        return objectPath.set(obj, path, 0);
      } else if (isArray(value)) {
        value.length = 0;
      } else if (isObject(value)) {
        for (i in value) {
          if (hasShallowProperty(value, i)) {
            delete value[i];
          }
        }
      } else {
        return objectPath.set(obj, path, null);
      }
    };

    objectPath.push = function (obj, path
    /*, values */
    ) {
      var arr = objectPath.get(obj, path);

      if (!isArray(arr)) {
        arr = [];
        objectPath.set(obj, path, arr);
      }

      arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));
    };

    objectPath.coalesce = function (obj, paths, defaultValue) {
      var value;

      for (var i = 0, len = paths.length; i < len; i++) {
        if ((value = objectPath.get(obj, paths[i])) !== void 0) {
          return value;
        }
      }

      return defaultValue;
    };

    objectPath.get = function (obj, path, defaultValue) {
      if (typeof path === 'number') {
        path = [path];
      }

      if (!path || path.length === 0) {
        return obj;
      }

      if (obj == null) {
        return defaultValue;
      }

      if (typeof path === 'string') {
        return objectPath.get(obj, path.split('.'), defaultValue);
      }

      var currentPath = getKey(path[0]);
      var nextObj = getShallowProperty(obj, currentPath);

      if (nextObj === void 0) {
        return defaultValue;
      }

      if (path.length === 1) {
        return nextObj;
      }

      return objectPath.get(obj[currentPath], path.slice(1), defaultValue);
    };

    objectPath.del = function del(obj, path) {
      if (typeof path === 'number') {
        path = [path];
      }

      if (obj == null) {
        return obj;
      }

      if (isEmpty(path)) {
        return obj;
      }

      if (typeof path === 'string') {
        return objectPath.del(obj, path.split('.'));
      }

      var currentPath = getKey(path[0]);

      if (!hasShallowProperty(obj, currentPath)) {
        return obj;
      }

      if (path.length === 1) {
        if (isArray(obj)) {
          obj.splice(currentPath, 1);
        } else {
          delete obj[currentPath];
        }
      } else {
        return objectPath.del(obj[currentPath], path.slice(1));
      }

      return obj;
    };

    return objectPath;
  }

  var mod = factory();
  mod.create = factory;
  mod.withInheritedProps = factory({
    includeInheritedProps: true
  });
  return mod;
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(52)(module)))

/***/ }),

/***/ 158:
/***/ (function(module, exports, __webpack_require__) {

var debounce = __webpack_require__(188),
    isObject = __webpack_require__(72);
/** Error message constants. */


var FUNC_ERROR_TEXT = 'Expected a function';
/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */

function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  return debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

module.exports = throttle;

/***/ }),

/***/ 159:
/***/ (function(module, exports) {

module.exports = [{channel:'standard',action:{prebid:{prebidTimeout:1200,enabled:true,priceGranularity:{buckets:[{min:0,max:10,increment:0.01},{min:10,max:20,increment:0.05},{min:20,max:50,increment:0.5}]},config:{enableSendAllBids:false,targetingControls:{alwaysIncludeDeals:true},userSync:{filterSettings:{iframe:{bidders:'*',filter:'include'}}}},analytics:{},slotMap:{cook:{dfp_top_banner:{},dfp_leaderboard:{},dfp_bigbox:{},dfp_sponsorship_module:{},dfp_native:{},dfp_smartphone_banner:{}},travel:{dfp_top_banner:{},dfp_leaderboard:{},dfp_bigbox:{},dfp_sponsorship_module:{},dfp_native:{},dfp_rsi_result:{},dfp_smartphone_banner:{}},gac:{dfp_top_banner:{},dfp_leaderboard:{},dfp_bigbox:{},dfp_sponsorship_module:{},dfp_native:{},dfp_rsi_result:{},dfp_smartphone_banner:{}},diy:{dfp_top_banner:{},dfp_leaderboard:{},dfp_bigbox:{},dfp_sponsorship_module:{},dfp_native:{}},'dsc/discovery':{dfp_top_banner:{},dfp_leaderboard:{},dfp_bigbox:{},dfp_after_component:{},dfp_smartphone_banner:{}},investigationdiscovery:{dfp_top_banner:{},dfp_leaderboard:{},dfp_bigbox:{},dfp_smartphone_banner:{}},tlc:{dfp_top_banner:{},dfp_leaderboard:{},dfp_bigbox:{},dfp_smartphone_banner:{}},food:{dfp_top_banner:{},dfp_leaderboard:{},dfp_bigbox:{},dfp_sponsorship_module:{},dfp_native:{}},hgtv:{dfp_top_banner:{},dfp_leaderboard:{},dfp_bigbox:{},dfp_sponsorship_module:{},dfp_native:{}}}}}},{channel:['golf','dtc-web'],action:{'+prebid':{enabled:false}}}]

/***/ }),

/***/ 160:
/***/ (function(module, exports) {

module.exports = [{channel:'standard',action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_top_banner':{appnexus:{params:{placementId:15097313,keywords:'##data.keywords##'}}},'+dfp_leaderboard':{appnexus:{params:{placementId:15097313,keywords:'##data.keywords##'}}},'+dfp_bigbox':{appnexus:{params:{placementId:15097326,keywords:'##data.keywords##'}}},'+dfp_sponsorship_module':{appnexus:{params:{placementId:15097252,keywords:'##data.keywords##'}}}},'+travel':{'+dfp_top_banner':{appnexus:{params:{placementId:15136367,keywords:'##data.keywords##'}}},'+dfp_leaderboard':{appnexus:{params:{placementId:15136367,keywords:'##data.keywords##'}}},'+dfp_bigbox':{appnexus:{params:{placementId:15136369,keywords:'##data.keywords##'}}},'+dfp_sponsorship_module':{appnexus:{params:{placementId:15136362,keywords:'##data.keywords##'}}}},'+gac':{'+dfp_top_banner':{appnexus:{params:{placementId:15136387,keywords:'##data.keywords##'}}},'+dfp_leaderboard':{appnexus:{params:{placementId:15136387,keywords:'##data.keywords##'}}},'+dfp_bigbox':{appnexus:{params:{placementId:15136396,keywords:'##data.keywords##'}}},'+dfp_sponsorship_module':{appnexus:{params:{placementId:15136381,keywords:'##data.keywords##'}}}},'+diy':{'+dfp_top_banner':{appnexus:{params:{placementId:15136286,keywords:'##data.keywords##'}}},'+dfp_leaderboard':{appnexus:{params:{placementId:15136286,keywords:'##data.keywords##'}}},'+dfp_bigbox':{appnexus:{params:{placementId:15136289,keywords:'##data.keywords##'}}},'+dfp_sponsorship_module':{appnexus:{params:{placementId:15136278,keywords:'##data.keywords##'}}}},'+food':{'+dfp_top_banner':{appnexus:{params:{placementId:15136316,keywords:'##data.keywords##'}}},'+dfp_leaderboard':{appnexus:{params:{placementId:15136316,keywords:'##data.keywords##'}}},'+dfp_bigbox':{appnexus:{params:{placementId:15136322,keywords:'##data.keywords##'}}},'+dfp_sponsorship_module':{appnexus:{params:{placementId:15136305,keywords:'##data.keywords##'}}}},'+hgtv':{'+dfp_top_banner':{appnexus:{params:{placementId:15117709,keywords:'##data.keywords##'}}},'+dfp_leaderboard':{appnexus:{params:{placementId:15117709,keywords:'##data.keywords##'}}},'+dfp_bigbox':{appnexus:{params:{placementId:15117714,keywords:'##data.keywords##'}}},'+dfp_sponsorship_module':{appnexus:{params:{placementId:15117704,keywords:'##data.keywords##'}}}}}}}},{channel:'standard',condition:{key:'page.delivery_channel',test:'mobile'},action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_smartphone_banner':{appnexus:{params:{placementId:15097258,keywords:'##data.keywords##'}}},'+dfp_bigbox':{appnexus:{params:{placementId:15331071,keywords:'##data.keywords##'}}}},'+travel':{'+dfp_smartphone_banner':{appnexus:{params:{placementId:15136365,keywords:'##data.keywords##'}}},'+dfp_bigbox':{appnexus:{params:{placementId:15331679,keywords:'##data.keywords##'}}}},'+gac':{'+dfp_smartphone_banner':{appnexus:{params:{placementId:15136383,keywords:'##data.keywords##'}}},'+dfp_bigbox':{appnexus:{params:{placementId:15331700,keywords:'##data.keywords##'}}}},'+diy':{'+dfp_smartphone_banner':{appnexus:{params:{placementId:15136281,keywords:'##data.keywords##'}}},'+dfp_bigbox':{appnexus:{params:{placementId:15331566,keywords:'##data.keywords##'}}}},'+food':{'+dfp_smartphone_banner':{appnexus:{params:{placementId:15136308,keywords:'##data.keywords##'}}},'+dfp_bigbox':{appnexus:{params:{placementId:15331601,keywords:'##data.keywords##'}}}},'+hgtv':{'+dfp_smartphone_banner':{appnexus:{params:{placementId:15117706,keywords:'##data.keywords##'}}}}}}}}]

/***/ }),

/***/ 161:
/***/ (function(module, exports) {

module.exports = [{channel:'standard',action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_top_banner':{criteo:{params:{networkId:3261}}},'+dfp_leaderboard':{criteo:{params:{networkId:3261}}},'+dfp_bigbox':{criteo:{params:{networkId:3261}}},'+dfp_sponsorship_module':{criteo:{params:{networkId:3261}}},'+dfp_smartphone_banner':{criteo:{params:{networkId:3261}}}},'+travel':{'+dfp_top_banner':{criteo:{params:{networkId:3261}}},'+dfp_leaderboard':{criteo:{params:{networkId:3261}}},'+dfp_bigbox':{criteo:{params:{networkId:3261}}},'+dfp_sponsorship_module':{criteo:{params:{networkId:3261}}},'+dfp_smartphone_banner':{criteo:{params:{networkId:3261}}}},'+gac':{'+dfp_top_banner':{criteo:{params:{networkId:3261}}},'+dfp_leaderboard':{criteo:{params:{networkId:3261}}},'+dfp_bigbox':{criteo:{params:{networkId:3261}}},'+dfp_sponsorship_module':{criteo:{params:{networkId:3261}}},'+dfp_smartphone_banner':{criteo:{params:{networkId:3261}}}},'+diy':{'+dfp_top_banner':{criteo:{params:{networkId:3261}}},'+dfp_leaderboard':{criteo:{params:{networkId:3261}}},'+dfp_bigbox':{criteo:{params:{networkId:3261}}},'+dfp_sponsorship_module':{criteo:{params:{networkId:3261}}},'+dfp_smartphone_banner':{criteo:{params:{networkId:3261}}}},'+food':{'+dfp_top_banner':{criteo:{params:{networkId:3261}}},'+dfp_leaderboard':{criteo:{params:{networkId:3261}}},'+dfp_bigbox':{criteo:{params:{networkId:3261}}},'+dfp_sponsorship_module':{criteo:{params:{networkId:3261}}},'+dfp_smartphone_banner':{criteo:{params:{networkId:3261}}}},'+hgtv':{'+dfp_top_banner':{criteo:{params:{networkId:3261}}},'+dfp_leaderboard':{criteo:{params:{networkId:3261}}},'+dfp_bigbox':{criteo:{params:{networkId:3261}}},'+dfp_sponsorship_module':{criteo:{params:{networkId:3261}}},'+dfp_smartphone_banner':{criteo:{params:{networkId:3261}}}}}}}}]

/***/ }),

/***/ 162:
/***/ (function(module, exports) {

module.exports = [{channel:'standard',action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_top_banner':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:216826,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:216827,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:216826,size:[970,250]}}},'+dfp_leaderboard':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:216826,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:216827,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:216826,size:[970,250]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:192694,size:[300,250]}},ix300x600:{bidder:'ix',sizes:['300,600'],params:{siteId:192693,size:[300,600]}},ix300x1050:{bidder:'ix',sizes:['300,1050'],params:{siteId:197530,size:[300,1050]}}},'+dfp_sponsorship_module':{ix:{params:{siteId:'213345',size:[300,150]}}}},'+travel':{'+dfp_top_banner':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:216832,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:216833,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:213350,size:[970,250]}}},'+dfp_leaderboard':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:216832,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:216833,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:213350,size:[970,250]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:192701,size:[300,250]}},ix300x600:{bidder:'ix',sizes:['300,600'],params:{siteId:197528,size:[300,600]}},ix300x1050:{bidder:'ix',sizes:['300,1050'],params:{siteId:197528,size:[300,1050]}}},'+dfp_sponsorship_module':{ix:{params:{siteId:213351,size:[300,150]}}}},'+dsc/discovery':{'+dfp_top_banner':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:'354805',size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:'402131',size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:'402132',size:[970,250]}}},'+dfp_leaderboard':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:'354805',size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:'402131',size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:'402132',size:[970,250]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:'197526',size:[300,250]}},ix300x600:{bidder:'ix',sizes:['300,600'],params:{siteId:'402129',size:[300,600]}},ix300x1050:{bidder:'ix',sizes:['300,1050'],params:{siteId:'402130',size:[300,1050]}}},'+dfp_after_component':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:'197526',size:[300,250]}},ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:'354805',size:[728,90]}}},'+dfp_smartphone_banner':{ix320x50:{bidder:'ix',sizes:['320,50'],params:{siteId:'402133',size:[320,50]}}}},'+gac':{'+dfp_top_banner':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:216824,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:216825,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:213342,size:[970,250]}}},'+dfp_leaderboard':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:216824,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:216825,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:213342,size:[970,250]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:192811,size:[300,250]}},ix300x600:{bidder:'ix',sizes:['300,600'],params:{siteId:192810,size:[300,600]}},ix300x1050:{bidder:'ix',sizes:['300,1050'],params:{siteId:197526,size:[300,1050]}}},'+dfp_sponsorship_module':{ix:{params:{siteId:213343,size:[300,150]}}}},'+investigationdiscovery':{'+dfp_top_banner':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:'354818',size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:'402138',size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:'402139',size:[970,250]}}},'+dfp_leaderboard':{sonobi728x90:{bidder:'sonobi',sizes:['728,90'],params:{placement_id:'83dccf4e191ec02fe0cc'}},sonobi970x90:{bidder:'sonobi',sizes:['970,90'],params:{placement_id:'61eb4bbb30de0273fade'}},sonobi970x250:{bidder:'sonobi',sizes:['970,250'],params:{placement_id:'f47ef1f14180d62e2285'}},ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:'354818',size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:'402138',size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:'402139',size:[970,250]}}},'+dfp_bigbox':{sonobi300x250:{bidder:'sonobi',sizes:['300,250'],params:{placement_id:'b283a21ea000b1a6ccc1'}},sonobi300x600:{bidder:'sonobi',sizes:['300,600'],params:{placement_id:'b8810a41ed7b18c65b5c'}},sonobi300x1050:{bidder:'sonobi',sizes:['300,1050'],params:{placement_id:'e19ab491829ad8805a8d'}},ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:'354816',size:[300,250]}},ix300x600:{bidder:'ix',sizes:['300,600'],params:{siteId:'402136',size:[300,600]}},ix300x1050:{bidder:'ix',sizes:['300,1050'],params:{siteId:'402137',size:[300,1050]}}},'+dfp_smartphone_banner':{sonobi320x50:{bidder:'sonobi',sizes:['320x50'],params:{placement_id:'3d85d77fa5a972997ae6'}},ix320x50:{bidder:'ix',sizes:['320,50'],params:{siteId:'402140',size:[320,50]}}}},'+diy':{'+dfp_top_banner':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:216817,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:216818,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:213336,size:[970,250]}}},'+dfp_leaderboard':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:216817,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:216818,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:213336,size:[970,250]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:192639,size:[300,250]}},ix300x600:{bidder:'ix',sizes:['300,600'],params:{siteId:192638,size:[300,600]}},ix300x1050:{bidder:'ix',sizes:['300,1050'],params:{siteId:197524,size:[300,1050]}}},'+dfp_sponsorship_module':{ix:{params:{siteId:213337,size:[300,150]}}}},'+tlc':{'+dfp_top_banner':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:354831,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:402144,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:402145,size:[970,250]}}},'+dfp_leaderboard':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:354831,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:402144,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:402145,size:[970,250]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:354829,size:[300,250]}},ix300x600:{bidder:'ix',sizes:['300,600'],params:{siteId:402142,size:[300,600]}},ix300x1050:{bidder:'ix',sizes:['300,1050'],params:{siteId:402143,size:[300,1050]}}}},'+food':{'+dfp_top_banner':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:216819,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:216820,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:213338,size:[970,250]}}},'+dfp_leaderboard':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:216819,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:216820,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:213338,size:[970,250]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:192680,size:[300,250]}},ix300x600:{bidder:'ix',sizes:['300,600'],params:{siteId:192679,size:[300,600]}},ix300x1050:{bidder:'ix',sizes:['300,1050'],params:{siteId:197519,size:[300,1050]}}},'+dfp_sponsorship_module':{ix:{params:{siteId:213339,size:[300,150]}}}},'+hgtv':{'+dfp_top_banner':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:216826,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:216827,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:213344,size:[970,250]}}},'+dfp_leaderboard':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:216826,size:[728,90]}},ix970x90:{bidder:'ix',sizes:['970,90'],params:{siteId:216827,size:[970,90]}},ix970x250:{bidder:'ix',sizes:['970,250'],params:{siteId:213344,size:[970,250]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:192694,size:[300,250]}},ix300x600:{bidder:'ix',sizes:['300,600'],params:{siteId:192693,size:[300,600]}},ix300x1050:{bidder:'ix',sizes:['300,1050'],params:{siteId:197530,size:[300,1050]}}},'+dfp_sponsorship_module':{ix:{params:{siteId:213345,size:[300,150]}}}}}}}},{channel:'standard',condition:{key:'page.delivery_channel',test:'web'},action:{'+prebid':{'+slotMap':{'+dsc/discovery':{'+dfp_after_component':{ix728x90:{bidder:'ix',sizes:['728,90'],params:{siteId:'382670',size:[728,90]}}}}}}}},{channel:'standard',condition:{key:'page.delivery_channel',test:'mobile'},action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_smartphone_banner':{ix320x50:{bidder:'ix',sizes:['320,50'],params:{siteId:'182863',size:[320,50]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:'192691',size:[300,250]}}}},'+travel':{'+dfp_smartphone_banner':{ix:{params:{siteId:182855,size:[320,50]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:192698,size:[300,250]}}}},'+gac':{'+dfp_smartphone_banner':{ix320x50:{bidder:'ix',sizes:['320,50'],params:{siteId:'192812',size:[320,50]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:'192809',size:[300,250]}}}},'+diy':{'+dfp_smartphone_banner':{ix:{params:{siteId:182187,size:[320,50]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:192636,size:[300,250]}}}},'+tlc':{'+dfp_smartphone_banner':{ix:{params:{siteId:402140,size:[320,50]}}}},'+food':{'+dfp_smartphone_banner':{ix:{params:{siteId:182171,size:[320,50]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:192677,size:[300,250]}}}},'+hgtv':{'+dfp_smartphone_banner':{ix:{params:{siteId:182863,size:[320,50]}}},'+dfp_bigbox':{ix300x250:{bidder:'ix',sizes:['300,250'],params:{siteId:192691,size:[300,250]}}}}}}}}]

/***/ }),

/***/ 163:
/***/ (function(module, exports) {

module.exports = [{channel:'standard',action:{'+prebid':{'+slotMap':{'+gac':{'+dfp_bigbox':{kargo300x250:{sizes:['300,250'],params:{placementId:'_dcATA3C9RG'}}}},'+diy':{'+dfp_bigbox':{kargo300x250:{bidder:'kargo',sizes:['300,250'],params:{placementId:'_zEAESiJLNP'}}}},'+cook':{'+dfp_bigbox':{kargo300x250:{bidder:'kargo',sizes:['300,250'],params:{placementId:'_tVQ4Bzfzjn'}}}},'+travel':{'+dfp_bigbox':{kargo300x250:{bidder:'kargo',sizes:['300,250'],params:{placementId:'_cZKFMbOcpv'}}}},'+food':{'+dfp_bigbox':{kargo300x250:{bidder:'kargo',sizes:['300,250'],params:{placementId:'_hnqx9rOLpk'}}},'+dfp_native':{kargo:{params:{placementId:'_qedZGaYExv'}}}},'+hgtv':{'+dfp_bigbox':{kargo300x250:{bidder:'kargo',sizes:['300,250'],params:{placementId:'_y0W5RaDERx'}}},'+dfp_native':{kargo:{params:{placementId:'_aCiEFrCDFx'}}}}}}}},{channel:'standard',condition:{key:'page.delivery_channel',test:'mobile'},action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_smartphone_banner':{kargo:{params:{placementId:'_jK-5scKWwsA'}}},'+dfp_bigbox':{kargo300x250:{bidder:'kargo',sizes:['300,250'],params:{placementId:'_jK-5scKWwsQ'}}}},'+travel':{'+dfp_smartphone_banner':{kargo:{params:{placementId:'_jK9-ZqSWna4'}}},'+dfp_bigbox':{kargo300x250:{bidder:'kargo',sizes:['300,250'],params:{placementId:'_jK9-ZqSWncg'}}}},'+gac':{'+dfp_smartphone_banner':{kargo:{params:{placementId:'_jK-5nZmVnafP'}}},'+dfp_bigbox':{kargo300x250:{bidder:'kargo',sizes:['300,250'],params:{placementId:'_jK-5nZmVnafS'}}}},'+diy':{'+dfp_smartphone_banner':{kargo:{params:{placementId:'_jK-5nZmV2NHU'}}},'+dfp_bigbox':{kargo300x250:{bidder:'kargo',sizes:['300,250'],params:{placementId:'_jK-5nZmV2NHV'}}}},'+food':{'+dfp_smartphone_banner':{kargo:{params:{placementId:'_jK-5pqWV2MA'}}},'+dfp_bigbox':{kargo300x250:{bidder:'kargo',sizes:['300,250'],params:{placementId:'_jK-5pqWV2Mg'}}},'+dfp_leaderboard_body':{kargo:{params:{placementId:'_qedZGaYExv'}}}},'+hgtv':{'+dfp_smartphone_banner':{kargo:{params:{placementId:'_jK-5scKW2NA'}}},'+dfp_bigbox':{kargo300x250:{bidder:'kargo',sizes:['300,250'],params:{placementId:'_jK-5scKWnaY'}}},'+dfp_leaderboard_body':{kargo:{params:{placementId:'_aCiEFrCDFx'}}}}}}}}]

/***/ }),

/***/ 164:
/***/ (function(module, exports) {

module.exports = [{channel:'standard',action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_top_banner':{rubicon:{params:{accountId:11166,siteId:239078,zoneId:1179710,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_leaderboard':{rubicon:{params:{accountId:11166,siteId:239078,zoneId:1179710,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:239078,zoneId:1179708,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_sponsorship_module':{rubicon:{params:{accountId:11166,siteId:239078,zoneId:1179696,visitor:'##data.visitor##',inventory:'##data.inventory##'}}}},'+travel':{'+dfp_top_banner':{rubicon:{params:{accountId:11166,siteId:247144,zoneId:1223318,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_leaderboard':{rubicon:{params:{accountId:11166,siteId:247144,zoneId:1223318,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:247144,zoneId:1223322,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_sponsorship_module':{rubicon:{params:{accountId:11166,siteId:247144,zoneId:1223314,visitor:'##data.visitor##',inventory:'##data.inventory##'}}}},'+dsc/discovery':{'+dfp_top_banner':{rubicon:{params:{accountId:11166,siteId:252596,zoneId:1309860,visitor:'##data.visitor##',inventory:'##data.inventory##',pos:'atf'}}},'+dfp_leaderboard':{rubicon:{params:{accountId:11166,siteId:252596,zoneId:1309860,visitor:'##data.visitor##',inventory:'##data.inventory##',pos:'atf'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:252596,zoneId:1309860,visitor:'##data.visitor##',inventory:'##data.inventory##',pos:'atf'}}},'+dfp_after_component':{rubicon:{params:{accountId:11166,siteId:252596,zoneId:1309860,visitor:'##data.visitor##',inventory:'##data.inventory##',pos:'atf'}}},'+dfp_smartphone_banner':{rubicon:{params:{accountId:11166,siteId:252596,zoneId:1309860,visitor:'##data.visitor##',inventory:'##data.inventory##',pos:'atf'}}}},'+gac':{'+dfp_top_banner':{rubicon:{params:{accountId:11166,siteId:239078,zoneId:1179710,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_leaderboard':{rubicon:{params:{accountId:11166,siteId:239078,zoneId:1179710,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:247148,zoneId:1223334,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_sponsorship_module':{rubicon:{params:{accountId:11166,siteId:247148,zoneId:1223326,visitor:'##data.visitor##',inventory:'##data.inventory##'}}}},'+investigationdiscovery':{'+dfp_top_banner':{rubicon:{params:{accountId:11166,siteId:252598,zoneId:1311092,visitor:'##data.visitor##',inventory:'##data.inventory##',pos:'atf'}}},'+dfp_leaderboard':{rubicon:{params:{accountId:11166,siteId:252598,zoneId:1311092,visitor:'##data.visitor##',inventory:'##data.inventory##',pos:'atf'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:252598,zoneId:1311092,visitor:'##data.visitor##',inventory:'##data.inventory##',pos:'atf'}}},'+dfp_smartphone_banner':{rubicon:{params:{accountId:11166,siteId:252598,zoneId:1311092,visitor:'##data.visitor##',inventory:'##data.inventory##',pos:'atf'}}}},'+diy':{'+dfp_top_banner':{rubicon:{params:{accountId:11166,siteId:247124,zoneId:1223278,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_leaderboard':{rubicon:{params:{accountId:11166,siteId:247124,zoneId:1223278,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:247124,zoneId:1223282,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_sponsorship_module':{rubicon:{params:{accountId:11166,siteId:247124,zoneId:1223274,visitor:'##data.visitor##',inventory:'##data.inventory##'}}}},'+food':{'+dfp_top_banner':{rubicon:{params:{accountId:11166,siteId:247128,zoneId:1223290,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_leaderboard':{rubicon:{params:{accountId:11166,siteId:247128,zoneId:1223290,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:247128,zoneId:1223294,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_sponsorship_module':{rubicon:{params:{accountId:11166,siteId:247128,zoneId:1223286,visitor:'##data.visitor##',inventory:'##data.inventory##'}}}},'+tlc':{'+dfp_top_banner':{rubicon:{params:{accountId:11166,siteId:252600,zoneId:1311076,visitor:'##data.visitor##',inventory:'##data.inventory##',pos:'atf'}}},'+dfp_leaderboard':{rubicon:{params:{accountId:11166,siteId:252600,zoneId:1311076,visitor:'##data.visitor##',inventory:'##data.inventory##',pos:'atf'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:252600,zoneId:1311076,visitor:'##data.visitor##',inventory:'##data.inventory##',pos:'atf'}}},'+dfp_smartphone_banner':{rubicon:{params:{accountId:11166,siteId:252600,zoneId:1311076,visitor:'##data.visitor##',inventory:'##data.inventory##',pos:'atf'}}}},'+hgtv':{'+dfp_top_banner':{rubicon:{params:{accountId:11166,siteId:243566,zoneId:1223272,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_leaderboard':{rubicon:{params:{accountId:11166,siteId:243566,zoneId:1223272,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:243566,zoneId:1204700,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_sponsorship_module':{rubicon:{params:{accountId:11166,siteId:243566,zoneId:1204686,visitor:'##data.visitor##',inventory:'##data.inventory##'}}}}}}}},{channel:'standard',condition:{key:'page.delivery_channel',test:'mobile'},action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_smartphone_banner':{rubicon:{params:{accountId:11166,siteId:239080,zoneId:1179718,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:239080,zoneId:1225786,visitor:'##data.visitor##',inventory:'##data.inventory##'}}}},'+travel':{'+dfp_smartphone_banner':{rubicon:{params:{accountId:11166,siteId:247146,zoneId:1223324,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:247146,zoneId:1225798,visitor:'##data.visitor##',inventory:'##data.inventory##'}}}},'+gac':{'+dfp_smartphone_banner':{rubicon:{params:{accountId:11166,siteId:247150,zoneId:1223336,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:247150,zoneId:1225792,visitor:'##data.visitor##',inventory:'##data.inventory##'}}}},'+diy':{'+dfp_smartphone_banner':{rubicon:{params:{accountId:11166,siteId:247126,zoneId:1223284,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:247126,zoneId:1225788,visitor:'##data.visitor##',inventory:'##data.inventory##'}}}},'+food':{'+dfp_smartphone_banner':{rubicon:{params:{accountId:11166,siteId:247130,zoneId:1223298,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:247130,zoneId:1225790,visitor:'##data.visitor##',inventory:'##data.inventory##'}}}},'+hgtv':{'+dfp_smartphone_banner':{rubicon:{params:{accountId:11166,siteId:243572,zoneId:1204716,visitor:'##data.visitor##',inventory:'##data.inventory##'}}},'+dfp_bigbox':{rubicon:{params:{accountId:11166,siteId:243572,zoneId:1225796,visitor:'##data.visitor##',inventory:'##data.inventory##'}}}}}}}}]

/***/ }),

/***/ 165:
/***/ (function(module, exports) {

module.exports = [{channel:'standard',action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_top_banner':{'triplelift728x90,970x90':{bidder:'triplelift',sizes:['728,90','970,90'],params:{inventoryCode:'CookingChannel_desktop_728x90_HDX'}},triplelift970x250:{bidder:'triplelift',sizes:['970,250'],params:{inventoryCode:'CookingChannel_desktop_leaderboard'}}},'+dfp_leaderboard':{triplelift728x90:{bidder:'triplelift',sizes:['728,90'],params:{inventoryCode:'CookingChannel_desktop_728x90_HDX'}},triplelift970x90:{bidder:'triplelift',sizes:['970,90'],params:{inventoryCode:'CookingChannel_desktop_728x90_HDX'}},triplelift970x250:{bidder:'triplelift',sizes:['970,250'],params:{inventoryCode:'CookingChannel_desktop_leaderboard'}}},'+dfp_bigbox':{triplelift300x250:{bidder:'triplelift',sizes:['300,250'],params:{inventoryCode:'CookingChannel_desktop_small_rectangle'}},'triplelift300x600,300x1050':{bidder:'triplelift',sizes:['300,600','300,1050'],params:{inventoryCode:'CookingChannel_desktop_large_rectangle'}}},'+dfp_sponsorship_module':{},'+dfp_native':{triplelift:{params:{inventoryCode:'CookingChannel_native_infeed'}}}},'+travel':{'+dfp_top_banner':{'triplelift728x90,970x90':{bidder:'triplelift',sizes:['728,90','970,90'],params:{inventoryCode:'TravelChannel_desktop_728x90_HDX'}},triplelift970x250:{bidder:'triplelift',sizes:['970,250'],params:{inventoryCode:'TravelChannel_desktop_leaderboard'}}},'+dfp_leaderboard':{'triplelift728x90,970x90':{bidder:'triplelift',sizes:['728,90','970,90'],params:{inventoryCode:'TravelChannel_desktop_728x90_HDX'}},triplelift970x250:{bidder:'triplelift',sizes:['970,250'],params:{inventoryCode:'TravelChannel_desktop_leaderboard'}}},'+dfp_bigbox':{triplelift300x250:{bidder:'triplelift',sizes:['300,250'],params:{inventoryCode:'TravelChannel_desktop_small_rectangle'}},'triplelift300x600,300x1050':{bidder:'triplelift',sizes:['300,600','300,1050'],params:{inventoryCode:'TravelChannel_desktop_large_rectangle'}}},'+dfp_sponsorship_module':{},'+dfp_native':{triplelift:{params:{inventoryCode:'TravelChannel_native_infeed'}}},'+dfp_rsi_result':{triplelift:{params:{inventoryCode:'TravelChannel_native_search'}}}},'+gac':{'+dfp_top_banner':{'triplelift728x90,970x90':{bidder:'triplelift',sizes:['728,90','970,90'],params:{inventoryCode:'GreatAmericanCountry_desktop_728x90_HDX'}},triplelift970x250:{bidder:'triplelift',sizes:['970,250'],params:{inventoryCode:'GreatAmericanCountry_desktop_leaderboard'}}},'+dfp_leaderboard':{'triplelift728x90,970x90':{bidder:'triplelift',sizes:['728,90','970,90'],params:{inventoryCode:'GreatAmericanCountry_desktop_728x90_HDX'}},triplelift970x250:{bidder:'triplelift',sizes:['970,250'],params:{inventoryCode:'GreatAmericanCountry_desktop_leaderboard'}}},'+dfp_bigbox':{triplelift300x250:{bidder:'triplelift',sizes:['300,250'],params:{inventoryCode:'GreatAmericanCountry_desktop_small_rectangle'}},'triplelift300x600,300x1050':{bidder:'triplelift',sizes:['300,600','300,1050'],params:{inventoryCode:'GreatAmericanCountry_desktop_large_rectangle'}}},'+dfp_sponsorship_module':{},'+dfp_native':{triplelift:{params:{inventoryCode:'GreatAmericanCountry_native_infeed'}}},'+dfp_rsi_result':{triplelift:{params:{inventoryCode:'TravelChannel_native_search'}}}},'+diy':{'+dfp_top_banner':{'triplelift728x90,970x90':{bidder:'triplelift',sizes:['728,90','970,90'],params:{inventoryCode:'DIY_desktop_728x90_HDX'}},triplelift970x250:{bidder:'triplelift',sizes:['970,250'],params:{inventoryCode:'DIY_desktop_leaderboard'}}},'+dfp_leaderboard':{'triplelift728x90,970x90':{bidder:'triplelift',sizes:['728,90','970,90'],params:{inventoryCode:'DIY_desktop_728x90_HDX'}},triplelift970x250:{bidder:'triplelift',sizes:['970,250'],params:{inventoryCode:'DIY_desktop_leaderboard'}}},'+dfp_bigbox':{triplelift300x250:{bidder:'triplelift',sizes:['300,250'],params:{inventoryCode:'DIY_desktop_small_rectangle'}},'triplelift300x600,300x1050':{bidder:'triplelift',sizes:['300,600','300,1050'],params:{inventoryCode:'DIY_desktop_large_rectangle'}}},'+dfp_sponsorship_module':{},'+dfp_native':{triplelift:{params:{inventoryCode:'DIY_native_infeed'}}}},'+food':{'+dfp_top_banner':{'triplelift728x90,970x90':{bidder:'triplelift',sizes:['728,90','970,90'],params:{inventoryCode:'foodnetwork_desktop_728x90_HDX'}},triplelift970x250:{bidder:'triplelift',sizes:['970,250'],params:{inventoryCode:'foodnetwork_desktop_leaderboard1'}}},'+dfp_leaderboard':{'triplelift728x90,970x90':{bidder:'triplelift',sizes:['728,90','970,90'],params:{inventoryCode:'foodnetwork_desktop_728x90_HDX'}},triplelift970x250:{bidder:'triplelift',sizes:['970,250'],params:{inventoryCode:'foodnetwork_desktop_leaderboard1'}}},'+dfp_bigbox':{triplelift300x250:{bidder:'triplelift',sizes:['300,250'],params:{inventoryCode:'foodnetwork_desktop_small_rectangle'}},'triplelift300x600,300x1050':{bidder:'triplelift',sizes:['300,600','300,1050'],params:{inventoryCode:'foodnetwork_desktop_large_rectangle'}}},'+dfp_native':{triplelift:{params:{inventoryCode:'foodnetwork_desktop_infeed'}}}},'+hgtv':{'+dfp_top_banner':{'triplelift728x90,970x90':{bidder:'triplelift',sizes:['728,90','970,90'],params:{inventoryCode:'HGTV_desktop_728x90_HDX'}},triplelift970x250:{bidder:'triplelift',sizes:['970,250'],params:{inventoryCode:'HGTV_desktop_leaderboard'}}},'+dfp_leaderboard':{'triplelift728x90,970x90':{bidder:'triplelift',sizes:['728,90','970,90'],params:{inventoryCode:'HGTV_desktop_728x90_HDX'}},triplelift970x250:{bidder:'triplelift',sizes:['970,250'],params:{inventoryCode:'HGTV_desktop_leaderboard'}}},'+dfp_bigbox':{triplelift300x250:{bidder:'triplelift',sizes:['300,250'],params:{inventoryCode:'HGTV_desktop_small_rectangle'}},'triplelift300x600,300x1050':{bidder:'triplelift',sizes:['300,600','300,1050'],params:{inventoryCode:'HGTV_desktop_large_rectangle'}}},'+dfp_native':{triplelift:{params:{inventoryCode:'HGTV_native_infeed'}}}}}}}},{channel:'standard',condition:{key:'page.delivery_channel',test:'web'},action:{'+prebid':{'+slotMap':{'+dsc/discovery':{'+dfp_after_component':{}}}}}},{channel:'standard',condition:{key:'page.delivery_channel',test:'mobile'},action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_smartphone_banner':{triplelift:{params:{inventoryCode:'CookingChannel_mobile_320x50_HDX'}}},'+dfp_bigbox':{triplelift300x250:{bidder:'triplelift',sizes:['300,250'],params:{inventoryCode:'CookingChannel_mobile_rectangle'}}}},'+travel':{'+dfp_smartphone_banner':{triplelift:{params:{inventoryCode:'TravelChannel_mobile_320x50_HDX'}}},'+dfp_bigbox':{triplelift300x250:{bidder:'triplelift',sizes:['300,250'],params:{inventoryCode:'TravelChannel_mobile_rectangle'}}}},'+gac':{'+dfp_smartphone_banner':{triplelift:{params:{inventoryCode:'GreatAmericanCountry_mobile_320x50_HDX'}}},'+dfp_bigbox':{triplelift300x250:{bidder:'triplelift',sizes:['300,250'],params:{inventoryCode:'GreatAmericanCountry_mobile_rectangle'}}}},'+diy':{'+dfp_smartphone_banner':{triplelift320x50:{bidder:'triplelift',sizes:['320,50'],params:{inventoryCode:'DIY_mobile_320x50_HDX'}}},'+dfp_bigbox':{triplelift300x250:{bidder:'triplelift',sizes:['300,250'],params:{inventoryCode:'DIY_mobile_rectangle'}}}},'+food':{'+dfp_smartphone_banner':{triplelift320x50:{bidder:'triplelift',sizes:['320,50'],params:{inventoryCode:'FoodNetwork_mobile_320x50_HDX'}}},'+dfp_bigbox':{triplelift300x250:{bidder:'triplelift',sizes:['300,250'],params:{inventoryCode:'foodnetwork_mobile_rectangle1'}}}},'+hgtv':{'+dfp_smartphone_banner':{triplelift320x50:{bidder:'triplelift',sizes:['320,50'],params:{inventoryCode:'HGTV_mobile_320x50_HDX'}}},'+dfp_bigbox':{triplelift300x250:{bidder:'triplelift',sizes:['300,250'],params:{inventoryCode:'HGTV_mobile_rectangle'}}}}}}}}]

/***/ }),

/***/ 166:
/***/ (function(module, exports) {

module.exports = [{channel:'standard',action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_top_banner':{aol728x90:{bidder:'aol',sizes:['728,90'],params:{placement:5064340,network:'10171.1'}},aol970x90:{bidder:'aol',sizes:['970,90'],params:{placement:4528466,network:'10171.1'}},aol970x250:{bidder:'aol',sizes:['970,250'],params:{placement:5064341,network:'10171.1'}}},'+dfp_leaderboard':{aol728x90:{bidder:'aol',sizes:['728,90'],params:{placement:5064340,network:'10171.1'}},aol970x90:{bidder:'aol',sizes:['970,90'],params:{placement:4528466,network:'10171.1'}},aol970x250:{bidder:'aol',sizes:['970,250'],params:{placement:5064341,network:'10171.1'}}},'+dfp_bigbox':{aol300x250:{bidder:'aol',sizes:['300,250'],params:{placement:4528464,network:'10171.1'}},aol300x600:{bidder:'aol',sizes:['300,600'],params:{placement:5064344,network:'10171.1'}},aol300x1050:{bidder:'aol',sizes:['300,1050'],params:{placement:4799552,network:'10171.1'}}},'+dfp_sponsorship_module':{aol:{params:{placement:4675865,network:'10171.1'}}}},'+travel':{'+dfp_top_banner':{aol728x90:{bidder:'aol',sizes:['728,90'],params:{placement:4688187,network:'10171.1'}},aol970x90:{bidder:'aol',sizes:['970,90'],params:{placement:4528430,network:'10171.1'}},aol970x250:{bidder:'aol',sizes:['970,250'],params:{placement:4688186,network:'10171.1'}}},'+dfp_leaderboard':{aol728x90:{bidder:'aol',sizes:['728,90'],params:{placement:4688187,network:'10171.1'}},aol970x90:{bidder:'aol',sizes:['970,90'],params:{placement:4528430,network:'10171.1'}},aol970x250:{bidder:'aol',sizes:['970,250'],params:{placement:4688186,network:'10171.1'}}},'+dfp_bigbox':{aol300x250:{bidder:'aol',sizes:['300,250'],params:{placement:4528432,network:'10171.1'}},aol300x600:{bidder:'aol',sizes:['300,600'],params:{placement:4528431,network:'10171.1'}},aol300x1050:{bidder:'aol',sizes:['300,1050'],params:{placement:4528448,network:'10171.1'}}},'+dfp_sponsorship_module':{aol:{params:{placement:4675872,network:'10171.1'}}}},'+gac':{'+dfp_top_banner':{aol728x90:{bidder:'aol',sizes:['728,90'],params:{placement:5180425,network:'10171.1'}},aol970x90:{bidder:'aol',sizes:['970,90'],params:{placement:5180426,network:'10171.1'}},aol970x250:{bidder:'aol',sizes:['970,250'],params:{placement:5180424,network:'10171.1'}}},'+dfp_leaderboard':{aol728x90:{bidder:'aol',sizes:['728,90'],params:{placement:5180425,network:'10171.1'}},aol970x90:{bidder:'aol',sizes:['970,90'],params:{placement:5180426,network:'10171.1'}},aol970x250:{bidder:'aol',sizes:['970,250'],params:{placement:5180424,network:'10171.1'}}},'+dfp_bigbox':{aol300x250:{bidder:'aol',sizes:['300,250'],params:{placement:4528527,network:'10171.1'}},aol300x600:{bidder:'aol',sizes:['300,600'],params:{placement:4528530,network:'10171.1'}},aol300x1050:{bidder:'aol',sizes:['300,1050'],params:{placement:4799556,network:'10171.1'}}},'+dfp_sponsorship_module':{aol:{params:{placement:4675871,network:'10171.1'}}}},'+diy':{'+dfp_top_banner':{aol728x90:{bidder:'aol',sizes:['728,90'],params:{placement:5064465,network:'10171.1'}},aol970x90:{bidder:'aol',sizes:['970,90'],params:{placement:5064464,network:'10171.1'}},aol970x250:{bidder:'aol',sizes:['970,250'],params:{placement:5064463,network:'10171.1'}}},'+dfp_leaderboard':{aol728x90:{bidder:'aol',sizes:['728,90'],params:{placement:5064465,network:'10171.1'}},aol970x90:{bidder:'aol',sizes:['970,90'],params:{placement:5064464,network:'10171.1'}},aol970x250:{bidder:'aol',sizes:['970,250'],params:{placement:5064463,network:'10171.1'}}},'+dfp_bigbox':{aol300x250:{bidder:'aol',sizes:['300,250'],params:{placement:4528557,network:'10171.1'}},aol300x600:{bidder:'aol',sizes:['300,600'],params:{placement:5064467,network:'10171.1'}},aol300x1050:{bidder:'aol',sizes:['300,1050'],params:{placement:5064468,network:'10171.1'}}},'+dfp_sponsorship_module':{aol:{params:{placement:4675866,network:'10171.1'}}}},'+food':{'+dfp_top_banner':{aol728x90:{bidder:'aol',sizes:['728,90'],params:{placement:5064392,network:'10171.1'}},aol970x90:{bidder:'aol',sizes:['970,90'],params:{placement:4528549,network:'10171.1'}},aol970x250:{bidder:'aol',sizes:['970,250'],params:{placement:5064388,network:'10171.1'}}},'+dfp_leaderboard':{aol728x90:{bidder:'aol',sizes:['728,90'],params:{placement:5064392,network:'10171.1'}},aol970x90:{bidder:'aol',sizes:['970,90'],params:{placement:4528549,network:'10171.1'}},aol970x250:{bidder:'aol',sizes:['970,250'],params:{placement:5064388,network:'10171.1'}}},'+dfp_bigbox':{aol300x250:{bidder:'aol',sizes:['300,250'],params:{placement:4528543,network:'10171.1'}},aol300x600:{bidder:'aol',sizes:['300,600'],params:{placement:4528548,network:'10171.1'}},aol300x1050:{bidder:'aol',sizes:['300,1050'],params:{placement:4799554,network:'10171.1'}}},'+dfp_sponsorship_module':{aol:{params:{placement:4675870,network:'10171.1'}}}},'+hgtv':{'+dfp_top_banner':{aol728x90:{bidder:'aol',sizes:['728,90'],params:{placement:4528506,network:'10171.1'}},aol970x90:{bidder:'aol',sizes:['970,90'],params:{placement:4528508,network:'10171.1'}},aol970x250:{bidder:'aol',sizes:['970,250'],params:{placement:5064375,network:'10171.1'}}},'+dfp_leaderboard':{aol728x90:{bidder:'aol',sizes:['728,90'],params:{placement:4528506,network:'10171.1'}},aol970x90:{bidder:'aol',sizes:['970,90'],params:{placement:4528508,network:'10171.1'}},aol970x250:{bidder:'aol',sizes:['970,250'],params:{placement:5064375,network:'10171.1'}}},'+dfp_bigbox':{aol300x250:{bidder:'aol',sizes:['300,250'],params:{placement:5180431,network:'10171.1'}},aol300x600:{bidder:'aol',sizes:['300,600'],params:{placement:5180432,network:'10171.1'}},aol300x1050:{bidder:'aol',sizes:['300,1050'],params:{placement:5180433,network:'10171.1'}}},'+dfp_sponsorship_module':{aol:{params:{placement:4675864,network:'10171.1'}}}}}}}},{channel:'standard',condition:{key:'page.delivery_channel',test:'mobile'},action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_smartphone_banner':{aol:{params:{placement:4528473,network:'10171.1'}}},'+dfp_bigbox':{aol300x250:{bidder:'aol',sizes:['300,250'],params:{placement:4528476,network:'10171.1'}}}},'+travel':{'+dfp_smartphone_banner':{aol:{params:{placement:4528455,network:'10171.1'}}},'+dfp_bigbox':{aol300x250:{bidder:'aol',sizes:['300,250'],params:{placement:4528454,network:'10171.1'}}}},'+gac':{'+dfp_smartphone_banner':{aol:{params:{placement:4528537,network:'10171.1'}}},'+dfp_bigbox':{aol300x250:{bidder:'aol',sizes:['300,250'],params:{placement:4528536,network:'10171.1'}}}},'+diy':{'+dfp_smartphone_banner':{aol:{params:{placement:4528571,network:'10171.1'}}},'+dfp_bigbox':{aol300x250:{bidder:'aol',sizes:['300,250'],params:{placement:4528569,network:'10171.1'}}}},'+food':{'+dfp_smartphone_banner':{aol:{params:{placement:4528554,network:'10171.1'}}},'+dfp_bigbox':{aol300x250:{bidder:'aol',sizes:['300,250'],params:{placement:4528540,network:'10171.1'}}}},'+hgtv':{'+dfp_smartphone_banner':{aol:{params:{placement:4528520,network:'10171.1'}}},'+dfp_bigbox':{aol300x250:{bidder:'aol',sizes:['300,250'],params:{placement:4528518,network:'10171.1'}}}}}}}}]

/***/ }),

/***/ 167:
/***/ (function(module, exports) {

module.exports = [{channel:'standard',action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_top_banner':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_leaderboard':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}},pubmatic300x600:{bidder:'pubmatic',sizes:['300,600'],params:{publisherId:'159094',adSlot:'2620156'}},pubmatic300x1050:{bidder:'pubmatic',sizes:['300,1050'],params:{publisherId:'159094',adSlot:'2620154'}}},'+dfp_sponsorship_module':{pubmatic:{params:{publisherId:'159094',adSlot:'2620153'}}}},'+travel':{'+dfp_top_banner':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_leaderboard':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}},pubmatic300x600:{bidder:'pubmatic',sizes:['300,600'],params:{publisherId:'159094',adSlot:'2620156'}},pubmatic300x1050:{bidder:'pubmatic',sizes:['300,1050'],params:{publisherId:'159094',adSlot:'2620154'}}},'+dfp_sponsorship_module':{pubmatic:{params:{publisherId:'159094',adSlot:'2620153'}}}},'+gac':{'+dfp_top_banner':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_leaderboard':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}},pubmatic300x600:{bidder:'pubmatic',sizes:['300,600'],params:{publisherId:'159094',adSlot:'2620156'}},pubmatic300x1050:{bidder:'pubmatic',sizes:['300,1050'],params:{publisherId:'159094',adSlot:'2620154'}}},'+dfp_sponsorship_module':{pubmatic:{params:{publisherId:'159094',adSlot:'2620153'}}}},'+diy':{'+dfp_top_banner':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_leaderboard':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}},pubmatic300x600:{bidder:'pubmatic',sizes:['300,600'],params:{publisherId:'159094',adSlot:'2620156'}},pubmatic300x1050:{bidder:'pubmatic',sizes:['300,1050'],params:{publisherId:'159094',adSlot:'2620154'}}},'+dfp_sponsorship_module':{pubmatic:{params:{publisherId:'159094',adSlot:'2620153'}}}},'+food':{'+dfp_top_banner':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_leaderboard':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}},pubmatic300x600:{bidder:'pubmatic',sizes:['300,600'],params:{publisherId:'159094',adSlot:'2620156'}},pubmatic300x1050:{bidder:'pubmatic',sizes:['300,1050'],params:{publisherId:'159094',adSlot:'2620154'}}},'+dfp_sponsorship_module':{pubmatic:{params:{publisherId:'159094',adSlot:'2620153'}}}},'+hgtv':{'+dfp_top_banner':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_leaderboard':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}},pubmatic300x600:{bidder:'pubmatic',sizes:['300,600'],params:{publisherId:'159094',adSlot:'2620156'}},pubmatic300x1050:{bidder:'pubmatic',sizes:['300,1050'],params:{publisherId:'159094',adSlot:'2620154'}}},'+dfp_sponsorship_module':{pubmatic:{params:{publisherId:'159094',adSlot:'2620153'}}}},'+dsc/discovery':{'+dfp_top_banner':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_leaderboard':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}},pubmatic300x600:{bidder:'pubmatic',sizes:['300,600'],params:{publisherId:'159094',adSlot:'2620156'}},pubmatic300x1050:{bidder:'pubmatic',sizes:['300,1050'],params:{publisherId:'159094',adSlot:'2620154'}}},'+dfp_after_component':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}}},'+dfp_smartphone_banner':{pubmatic:{params:{publisherId:'159094',adSlot:'2620157'}}}},'+tlc':{'+dfp_top_banner':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_leaderboard':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}},pubmatic300x600:{bidder:'pubmatic',sizes:['300,600'],params:{publisherId:'159094',adSlot:'2620156'}},pubmatic300x1050:{bidder:'pubmatic',sizes:['300,1050'],params:{publisherId:'159094',adSlot:'2620154'}}},'+dfp_smartphone_banner':{pubmatic:{params:{publisherId:'159094',adSlot:'2620157'}}}},'+investigationdiscovery':{'+dfp_top_banner':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_leaderboard':{pubmatic728x90:{bidder:'pubmatic',sizes:['728,90'],params:{publisherId:'159094',adSlot:'2620150'}},pubmatic970x90:{bidder:'pubmatic',sizes:['970,90'],params:{publisherId:'159094',adSlot:'2620151'}},pubmatic970x250:{bidder:'pubmatic',sizes:['970,250'],params:{publisherId:'159094',adSlot:'2620152'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}},pubmatic300x600:{bidder:'pubmatic',sizes:['300,600'],params:{publisherId:'159094',adSlot:'2620156'}},pubmatic300x1050:{bidder:'pubmatic',sizes:['300,1050'],params:{publisherId:'159094',adSlot:'2620154'}}},'+dfp_smartphone_banner':{pubmatic:{params:{publisherId:'159094',adSlot:'2620157'}}}}}}}},{channel:'standard',condition:{key:'page.delivery_channel',test:'mobile'},action:{'+prebid':{'+slotMap':{'+cook':{'+dfp_smartphone_banner':{pubmatic:{params:{publisherId:'159094',adSlot:'2620157'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}}}},'+travel':{'+dfp_smartphone_banner':{pubmatic:{params:{publisherId:'159094',adSlot:'2620157'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}}}},'+gac':{'+dfp_smartphone_banner':{pubmatic:{params:{publisherId:'159094',adSlot:'2620157'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}}}},'+diy':{'+dfp_smartphone_banner':{pubmatic:{params:{publisherId:'159094',adSlot:'2620157'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}}}},'+food':{'+dfp_smartphone_banner':{pubmatic:{params:{publisherId:'159094',adSlot:'2620157'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620155'}}}},'+hgtv':{'+dfp_smartphone_banner':{pubmatic:{params:{publisherId:'159094',adSlot:'2620157'}}},'+dfp_bigbox':{pubmatic300x250:{bidder:'pubmatic',sizes:['300,250'],params:{publisherId:'159094',adSlot:'2620158'}}}}}}}}]

/***/ }),

/***/ 168:
/***/ (function(module, exports) {

module.exports = [{channel:'golf',action:{amazonA9:{enabled:true,pubID:'3578',timeout:3000,failsafeTimeout:5000,slots:{theloop_banner_top:{sizes:['300,50','320,50','300,150','320,150','728,90']},golfworld_banner_top:{sizes:['300,50','320,50','300,150','320,150','728,90']},banner_top:{sizes:['300,50','320,50','300,150','320,150','300,250','728,90']},banner_top_listicle:{sizes:['300,50','320,50','300,150','320,150','300,250','728,90']},box_top:{sizes:['300,250','300,600']},box_top_listicle:{sizes:['300,50','320,50','300,150','320,150','300,250','300,600']},box_top_mobile:{sizes:['300,50','320,50','300,150','320,150','300,250']},box_top_slideshow:{sizes:['300,250']},theloop_banner_recirc:{sizes:['300,50','320,50','300,250','728,90']},banner_bottom:{sizes:['300,50','320,50','300,150','320,150','300,250','728,90']},banner_instream:{sizes:['300,50','320,50','300,150','320,150','300,250','728,90']},banner_instream_golfworld1:{sizes:['300,50','320,50','300,150','300,250','320,150','728,90']},banner_instream_golfworld2:{sizes:['300,50','320,50','300,150','300,250','320,150','728,90']},banner_instream_golfworld3:{sizes:['300,50','320,50','300,150','300,250','320,150','728,90']},banner_instream_golfworld4:{sizes:['300,50','320,50','300,150','300,250','320,150','728,90']},banner_instream_golfworld5:{sizes:['300,50','320,50','300,150','300,250','320,150','728,90']},banner_instream_golfworld6:{sizes:['300,50','320,50','300,150','300,250','320,150','728,90']},banner_instream_listicle:{sizes:['300,50','320,50','300,150','320,150','300,250','728,90']},banner_midboard:{sizes:['300,50','320,50','300,150','320,150','300,250','728,90']},banner_top_slideshow:{sizes:['300,50','320,50','300,150','320,150','300,250','728,90']}}}}}]

/***/ }),

/***/ 169:
/***/ (function(module, exports) {

module.exports = [{channel:'golf',action:{indexExchange:{enabled:true,timeout:1000,failsafeTimeout:3000,slots:['theloop_banner_top','golfworld_banner_top','banner_top','banner_top_listicle','box_top','box_top_listicle','box_top_mobile','box_top_slideshow','theloop_banner_recirc','banner_bottom','banner_instream','banner_instream_golfworld1','banner_instream_golfworld2','banner_instream_golfworld3','banner_instream_golfworld4','banner_instream_listicle','banner_midboard','banner_top_slideshow']}}},{channel:'golf',condition:[{key:'device.type',test:'mobile'}],action:{'+indexExchange':{timeout:1500}}}]

/***/ }),

/***/ 170:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (str) {
  return encodeURIComponent(str).replace(/[!'()*]/g, function (x) {
    return "%".concat(x.charCodeAt(0).toString(16).toUpperCase());
  });
};

/***/ }),

/***/ 171:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var token = '%[a-f0-9]{2}';
var singleMatcher = new RegExp(token, 'gi');
var multiMatcher = new RegExp('(' + token + ')+', 'gi');

function decodeComponents(components, split) {
  try {
    // Try to decode the entire string first
    return decodeURIComponent(components.join(''));
  } catch (err) {// Do nothing
  }

  if (components.length === 1) {
    return components;
  }

  split = split || 1; // Split the array in 2 parts

  var left = components.slice(0, split);
  var right = components.slice(split);
  return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
}

function decode(input) {
  try {
    return decodeURIComponent(input);
  } catch (err) {
    var tokens = input.match(singleMatcher);

    for (var i = 1; i < tokens.length; i++) {
      input = decodeComponents(tokens, i).join('');
      tokens = input.match(singleMatcher);
    }

    return input;
  }
}

function customDecodeURIComponent(input) {
  // Keep track of all the replacements and prefill the map with the `BOM`
  var replaceMap = {
    '%FE%FF': "\uFFFD\uFFFD",
    '%FF%FE': "\uFFFD\uFFFD"
  };
  var match = multiMatcher.exec(input);

  while (match) {
    try {
      // Decode as big chunks as possible
      replaceMap[match[0]] = decodeURIComponent(match[0]);
    } catch (err) {
      var result = decode(match[0]);

      if (result !== match[0]) {
        replaceMap[match[0]] = result;
      }
    }

    match = multiMatcher.exec(input);
  } // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else


  replaceMap['%C2'] = "\uFFFD";
  var entries = Object.keys(replaceMap);

  for (var i = 0; i < entries.length; i++) {
    // Replace all decoded components
    var key = entries[i];
    input = input.replace(new RegExp(key, 'g'), replaceMap[key]);
  }

  return input;
}

module.exports = function (encodedURI) {
  if (typeof encodedURI !== 'string') {
    throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + _typeof(encodedURI) + '`');
  }

  try {
    encodedURI = encodedURI.replace(/\+/g, ' '); // Try the built in decoder first

    return decodeURIComponent(encodedURI);
  } catch (err) {
    // Fallback to a more advanced decoder
    return customDecodeURIComponent(encodedURI);
  }
};

/***/ }),

/***/ 172:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (string, separator) {
  if (!(typeof string === 'string' && typeof separator === 'string')) {
    throw new TypeError('Expected the arguments to be of type `string`');
  }

  if (separator === '') {
    return [string];
  }

  var separatorIndex = string.indexOf(separator);

  if (separatorIndex === -1) {
    return [string];
  }

  return [string.slice(0, separatorIndex), string.slice(separatorIndex + separator.length)];
};

/***/ }),

/***/ 173:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var keysShim;

if (!Object.keys) {
  // modified from https://github.com/es-shims/es5-shim
  var has = Object.prototype.hasOwnProperty;
  var toStr = Object.prototype.toString;

  var isArgs = __webpack_require__(105); // eslint-disable-line global-require


  var isEnumerable = Object.prototype.propertyIsEnumerable;
  var hasDontEnumBug = !isEnumerable.call({
    toString: null
  }, 'toString');
  var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
  var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];

  var equalsConstructorPrototype = function equalsConstructorPrototype(o) {
    var ctor = o.constructor;
    return ctor && ctor.prototype === o;
  };

  var excludedKeys = {
    $applicationCache: true,
    $console: true,
    $external: true,
    $frame: true,
    $frameElement: true,
    $frames: true,
    $innerHeight: true,
    $innerWidth: true,
    $onmozfullscreenchange: true,
    $onmozfullscreenerror: true,
    $outerHeight: true,
    $outerWidth: true,
    $pageXOffset: true,
    $pageYOffset: true,
    $parent: true,
    $scrollLeft: true,
    $scrollTop: true,
    $scrollX: true,
    $scrollY: true,
    $self: true,
    $webkitIndexedDB: true,
    $webkitStorageInfo: true,
    $window: true
  };

  var hasAutomationEqualityBug = function () {
    /* global window */
    if (typeof window === 'undefined') {
      return false;
    }

    for (var k in window) {
      try {
        if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && _typeof(window[k]) === 'object') {
          try {
            equalsConstructorPrototype(window[k]);
          } catch (e) {
            return true;
          }
        }
      } catch (e) {
        return true;
      }
    }

    return false;
  }();

  var equalsConstructorPrototypeIfNotBuggy = function equalsConstructorPrototypeIfNotBuggy(o) {
    /* global window */
    if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
      return equalsConstructorPrototype(o);
    }

    try {
      return equalsConstructorPrototype(o);
    } catch (e) {
      return false;
    }
  };

  keysShim = function keys(object) {
    var isObject = object !== null && _typeof(object) === 'object';
    var isFunction = toStr.call(object) === '[object Function]';
    var isArguments = isArgs(object);
    var isString = isObject && toStr.call(object) === '[object String]';
    var theKeys = [];

    if (!isObject && !isFunction && !isArguments) {
      throw new TypeError('Object.keys called on a non-object');
    }

    var skipProto = hasProtoEnumBug && isFunction;

    if (isString && object.length > 0 && !has.call(object, 0)) {
      for (var i = 0; i < object.length; ++i) {
        theKeys.push(String(i));
      }
    }

    if (isArguments && object.length > 0) {
      for (var j = 0; j < object.length; ++j) {
        theKeys.push(String(j));
      }
    } else {
      for (var name in object) {
        if (!(skipProto && name === 'prototype') && has.call(object, name)) {
          theKeys.push(String(name));
        }
      }
    }

    if (hasDontEnumBug) {
      var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

      for (var k = 0; k < dontEnums.length; ++k) {
        if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
          theKeys.push(dontEnums[k]);
        }
      }
    }

    return theKeys;
  };
}

module.exports = keysShim;

/***/ }),

/***/ 174:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var has = __webpack_require__(53);

var toPrimitive = __webpack_require__(176);

var keys = __webpack_require__(104);

var GetIntrinsic = __webpack_require__(71);

var $TypeError = GetIntrinsic('%TypeError%');
var $SyntaxError = GetIntrinsic('%SyntaxError%');
var $Array = GetIntrinsic('%Array%');
var $String = GetIntrinsic('%String%');
var $Object = GetIntrinsic('%Object%');
var $Number = GetIntrinsic('%Number%');
var $Symbol = GetIntrinsic('%Symbol%', true);
var $RegExp = GetIntrinsic('%RegExp%');
var hasSymbols = !!$Symbol;

var assertRecord = __webpack_require__(108);

var $isNaN = __webpack_require__(109);

var $isFinite = __webpack_require__(110);

var MAX_SAFE_INTEGER = $Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;

var assign = __webpack_require__(182);

var sign = __webpack_require__(111);

var mod = __webpack_require__(112);

var isPrimitive = __webpack_require__(183);

var parseInteger = parseInt;

var bind = __webpack_require__(68);

var arraySlice = bind.call(Function.call, $Array.prototype.slice);
var strSlice = bind.call(Function.call, $String.prototype.slice);
var isBinary = bind.call(Function.call, $RegExp.prototype.test, /^0b[01]+$/i);
var isOctal = bind.call(Function.call, $RegExp.prototype.test, /^0o[0-7]+$/i);
var regexExec = bind.call(Function.call, $RegExp.prototype.exec);
var nonWS = ["\x85", "\u200B", "\uFFFE"].join('');
var nonWSregex = new $RegExp('[' + nonWS + ']', 'g');
var hasNonWS = bind.call(Function.call, $RegExp.prototype.test, nonWSregex);
var invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;
var isInvalidHexLiteral = bind.call(Function.call, $RegExp.prototype.test, invalidHexLiteral);
var $charCodeAt = bind.call(Function.call, $String.prototype.charCodeAt);
var toStr = bind.call(Function.call, Object.prototype.toString);
var $NumberValueOf = bind.call(Function.call, GetIntrinsic('%NumberPrototype%').valueOf);
var $BooleanValueOf = bind.call(Function.call, GetIntrinsic('%BooleanPrototype%').valueOf);
var $StringValueOf = bind.call(Function.call, GetIntrinsic('%StringPrototype%').valueOf);
var $DateValueOf = bind.call(Function.call, GetIntrinsic('%DatePrototype%').valueOf);
var $floor = Math.floor;
var $abs = Math.abs;
var $ObjectCreate = Object.create;
var $gOPD = $Object.getOwnPropertyDescriptor;
var $isExtensible = $Object.isExtensible;
var $defineProperty = $Object.defineProperty; // whitespace from: http://es5.github.io/#x15.5.4.20
// implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324

var ws = ["\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003", "\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028", "\u2029\uFEFF"].join('');
var trimRegex = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');
var replace = bind.call(Function.call, $String.prototype.replace);

var trim = function trim(value) {
  return replace(value, trimRegex, '');
};

var ES5 = __webpack_require__(184);

var hasRegExpMatcher = __webpack_require__(186); // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-abstract-operations


var ES6 = assign(assign({}, ES5), {
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args
  Call: function Call(F, V) {
    var args = arguments.length > 2 ? arguments[2] : [];

    if (!this.IsCallable(F)) {
      throw new $TypeError(F + ' is not a function');
    }

    return F.apply(V, args);
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toprimitive
  ToPrimitive: toPrimitive,
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toboolean
  // ToBoolean: ES5.ToBoolean,
  // https://ecma-international.org/ecma-262/6.0/#sec-tonumber
  ToNumber: function ToNumber(argument) {
    var value = isPrimitive(argument) ? argument : toPrimitive(argument, $Number);

    if (_typeof(value) === 'symbol') {
      throw new $TypeError('Cannot convert a Symbol value to a number');
    }

    if (typeof value === 'string') {
      if (isBinary(value)) {
        return this.ToNumber(parseInteger(strSlice(value, 2), 2));
      } else if (isOctal(value)) {
        return this.ToNumber(parseInteger(strSlice(value, 2), 8));
      } else if (hasNonWS(value) || isInvalidHexLiteral(value)) {
        return NaN;
      } else {
        var trimmed = trim(value);

        if (trimmed !== value) {
          return this.ToNumber(trimmed);
        }
      }
    }

    return $Number(value);
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tointeger
  // ToInteger: ES5.ToNumber,
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint32
  // ToInt32: ES5.ToInt32,
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint32
  // ToUint32: ES5.ToUint32,
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint16
  ToInt16: function ToInt16(argument) {
    var int16bit = this.ToUint16(argument);
    return int16bit >= 0x8000 ? int16bit - 0x10000 : int16bit;
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint16
  // ToUint16: ES5.ToUint16,
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint8
  ToInt8: function ToInt8(argument) {
    var int8bit = this.ToUint8(argument);
    return int8bit >= 0x80 ? int8bit - 0x100 : int8bit;
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8
  ToUint8: function ToUint8(argument) {
    var number = this.ToNumber(argument);

    if ($isNaN(number) || number === 0 || !$isFinite(number)) {
      return 0;
    }

    var posInt = sign(number) * $floor($abs(number));
    return mod(posInt, 0x100);
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8clamp
  ToUint8Clamp: function ToUint8Clamp(argument) {
    var number = this.ToNumber(argument);

    if ($isNaN(number) || number <= 0) {
      return 0;
    }

    if (number >= 0xFF) {
      return 0xFF;
    }

    var f = $floor(argument);

    if (f + 0.5 < number) {
      return f + 1;
    }

    if (number < f + 0.5) {
      return f;
    }

    if (f % 2 !== 0) {
      return f + 1;
    }

    return f;
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tostring
  ToString: function ToString(argument) {
    if (_typeof(argument) === 'symbol') {
      throw new $TypeError('Cannot convert a Symbol value to a string');
    }

    return $String(argument);
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toobject
  ToObject: function ToObject(value) {
    this.RequireObjectCoercible(value);
    return $Object(value);
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey
  ToPropertyKey: function ToPropertyKey(argument) {
    var key = this.ToPrimitive(argument, $String);
    return _typeof(key) === 'symbol' ? key : this.ToString(key);
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
  ToLength: function ToLength(argument) {
    var len = this.ToInteger(argument);

    if (len <= 0) {
      return 0;
    } // includes converting -0 to +0


    if (len > MAX_SAFE_INTEGER) {
      return MAX_SAFE_INTEGER;
    }

    return len;
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-canonicalnumericindexstring
  CanonicalNumericIndexString: function CanonicalNumericIndexString(argument) {
    if (toStr(argument) !== '[object String]') {
      throw new $TypeError('must be a string');
    }

    if (argument === '-0') {
      return -0;
    }

    var n = this.ToNumber(argument);

    if (this.SameValue(this.ToString(n), argument)) {
      return n;
    }

    return void 0;
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-requireobjectcoercible
  RequireObjectCoercible: ES5.CheckObjectCoercible,
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray
  IsArray: $Array.isArray || function IsArray(argument) {
    return toStr(argument) === '[object Array]';
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iscallable
  // IsCallable: ES5.IsCallable,
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor
  IsConstructor: function IsConstructor(argument) {
    return typeof argument === 'function' && !!argument.prototype; // unfortunately there's no way to truly check this without try/catch `new argument`
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isextensible-o
  IsExtensible: Object.preventExtensions ? function IsExtensible(obj) {
    if (isPrimitive(obj)) {
      return false;
    }

    return $isExtensible(obj);
  } : function isExtensible(obj) {
    return true;
  },
  // eslint-disable-line no-unused-vars
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isinteger
  IsInteger: function IsInteger(argument) {
    if (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {
      return false;
    }

    var abs = $abs(argument);
    return $floor(abs) === abs;
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ispropertykey
  IsPropertyKey: function IsPropertyKey(argument) {
    return typeof argument === 'string' || _typeof(argument) === 'symbol';
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-isregexp
  IsRegExp: function IsRegExp(argument) {
    if (!argument || _typeof(argument) !== 'object') {
      return false;
    }

    if (hasSymbols) {
      var isRegExp = argument[$Symbol.match];

      if (typeof isRegExp !== 'undefined') {
        return ES5.ToBoolean(isRegExp);
      }
    }

    return hasRegExpMatcher(argument);
  },
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevalue
  // SameValue: ES5.SameValue,
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero
  SameValueZero: function SameValueZero(x, y) {
    return x === y || $isNaN(x) && $isNaN(y);
  },

  /**
   * 7.3.2 GetV (V, P)
   * 1. Assert: IsPropertyKey(P) is true.
   * 2. Let O be ToObject(V).
   * 3. ReturnIfAbrupt(O).
   * 4. Return O.[[Get]](P, V).
   */
  GetV: function GetV(V, P) {
    // 7.3.2.1
    if (!this.IsPropertyKey(P)) {
      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');
    } // 7.3.2.2-3


    var O = this.ToObject(V); // 7.3.2.4

    return O[P];
  },

  /**
   * 7.3.9 - https://ecma-international.org/ecma-262/6.0/#sec-getmethod
   * 1. Assert: IsPropertyKey(P) is true.
   * 2. Let func be GetV(O, P).
   * 3. ReturnIfAbrupt(func).
   * 4. If func is either undefined or null, return undefined.
   * 5. If IsCallable(func) is false, throw a TypeError exception.
   * 6. Return func.
   */
  GetMethod: function GetMethod(O, P) {
    // 7.3.9.1
    if (!this.IsPropertyKey(P)) {
      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');
    } // 7.3.9.2


    var func = this.GetV(O, P); // 7.3.9.4

    if (func == null) {
      return void 0;
    } // 7.3.9.5


    if (!this.IsCallable(func)) {
      throw new $TypeError(P + 'is not a function');
    } // 7.3.9.6


    return func;
  },

  /**
   * 7.3.1 Get (O, P) - https://ecma-international.org/ecma-262/6.0/#sec-get-o-p
   * 1. Assert: Type(O) is Object.
   * 2. Assert: IsPropertyKey(P) is true.
   * 3. Return O.[[Get]](P, O).
   */
  Get: function Get(O, P) {
    // 7.3.1.1
    if (this.Type(O) !== 'Object') {
      throw new $TypeError('Assertion failed: Type(O) is not Object');
    } // 7.3.1.2


    if (!this.IsPropertyKey(P)) {
      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');
    } // 7.3.1.3


    return O[P];
  },
  Type: function Type(x) {
    if (_typeof(x) === 'symbol') {
      return 'Symbol';
    }

    return ES5.Type(x);
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-speciesconstructor
  SpeciesConstructor: function SpeciesConstructor(O, defaultConstructor) {
    if (this.Type(O) !== 'Object') {
      throw new $TypeError('Assertion failed: Type(O) is not Object');
    }

    var C = O.constructor;

    if (typeof C === 'undefined') {
      return defaultConstructor;
    }

    if (this.Type(C) !== 'Object') {
      throw new $TypeError('O.constructor is not an Object');
    }

    var S = hasSymbols && $Symbol.species ? C[$Symbol.species] : void 0;

    if (S == null) {
      return defaultConstructor;
    }

    if (this.IsConstructor(S)) {
      return S;
    }

    throw new $TypeError('no constructor found');
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-completepropertydescriptor
  CompletePropertyDescriptor: function CompletePropertyDescriptor(Desc) {
    assertRecord(this, 'Property Descriptor', 'Desc', Desc);

    if (this.IsGenericDescriptor(Desc) || this.IsDataDescriptor(Desc)) {
      if (!has(Desc, '[[Value]]')) {
        Desc['[[Value]]'] = void 0;
      }

      if (!has(Desc, '[[Writable]]')) {
        Desc['[[Writable]]'] = false;
      }
    } else {
      if (!has(Desc, '[[Get]]')) {
        Desc['[[Get]]'] = void 0;
      }

      if (!has(Desc, '[[Set]]')) {
        Desc['[[Set]]'] = void 0;
      }
    }

    if (!has(Desc, '[[Enumerable]]')) {
      Desc['[[Enumerable]]'] = false;
    }

    if (!has(Desc, '[[Configurable]]')) {
      Desc['[[Configurable]]'] = false;
    }

    return Desc;
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-set-o-p-v-throw
  Set: function Set(O, P, V, Throw) {
    if (this.Type(O) !== 'Object') {
      throw new $TypeError('O must be an Object');
    }

    if (!this.IsPropertyKey(P)) {
      throw new $TypeError('P must be a Property Key');
    }

    if (this.Type(Throw) !== 'Boolean') {
      throw new $TypeError('Throw must be a Boolean');
    }

    if (Throw) {
      O[P] = V;
      return true;
    } else {
      try {
        O[P] = V;
      } catch (e) {
        return false;
      }
    }
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-hasownproperty
  HasOwnProperty: function HasOwnProperty(O, P) {
    if (this.Type(O) !== 'Object') {
      throw new $TypeError('O must be an Object');
    }

    if (!this.IsPropertyKey(P)) {
      throw new $TypeError('P must be a Property Key');
    }

    return has(O, P);
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-hasproperty
  HasProperty: function HasProperty(O, P) {
    if (this.Type(O) !== 'Object') {
      throw new $TypeError('O must be an Object');
    }

    if (!this.IsPropertyKey(P)) {
      throw new $TypeError('P must be a Property Key');
    }

    return P in O;
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable
  IsConcatSpreadable: function IsConcatSpreadable(O) {
    if (this.Type(O) !== 'Object') {
      return false;
    }

    if (hasSymbols && _typeof($Symbol.isConcatSpreadable) === 'symbol') {
      var spreadable = this.Get(O, Symbol.isConcatSpreadable);

      if (typeof spreadable !== 'undefined') {
        return this.ToBoolean(spreadable);
      }
    }

    return this.IsArray(O);
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-invoke
  Invoke: function Invoke(O, P) {
    if (!this.IsPropertyKey(P)) {
      throw new $TypeError('P must be a Property Key');
    }

    var argumentsList = arraySlice(arguments, 2);
    var func = this.GetV(O, P);
    return this.Call(func, O, argumentsList);
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-getiterator
  GetIterator: function GetIterator(obj, method) {
    if (!hasSymbols) {
      throw new SyntaxError('ES.GetIterator depends on native iterator support.');
    }

    var actualMethod = method;

    if (arguments.length < 2) {
      actualMethod = this.GetMethod(obj, $Symbol.iterator);
    }

    var iterator = this.Call(actualMethod, obj);

    if (this.Type(iterator) !== 'Object') {
      throw new $TypeError('iterator must return an object');
    }

    return iterator;
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-iteratornext
  IteratorNext: function IteratorNext(iterator, value) {
    var result = this.Invoke(iterator, 'next', arguments.length < 2 ? [] : [value]);

    if (this.Type(result) !== 'Object') {
      throw new $TypeError('iterator next must return an object');
    }

    return result;
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorcomplete
  IteratorComplete: function IteratorComplete(iterResult) {
    if (this.Type(iterResult) !== 'Object') {
      throw new $TypeError('Assertion failed: Type(iterResult) is not Object');
    }

    return this.ToBoolean(this.Get(iterResult, 'done'));
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorvalue
  IteratorValue: function IteratorValue(iterResult) {
    if (this.Type(iterResult) !== 'Object') {
      throw new $TypeError('Assertion failed: Type(iterResult) is not Object');
    }

    return this.Get(iterResult, 'value');
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorstep
  IteratorStep: function IteratorStep(iterator) {
    var result = this.IteratorNext(iterator);
    var done = this.IteratorComplete(result);
    return done === true ? false : result;
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorclose
  IteratorClose: function IteratorClose(iterator, completion) {
    if (this.Type(iterator) !== 'Object') {
      throw new $TypeError('Assertion failed: Type(iterator) is not Object');
    }

    if (!this.IsCallable(completion)) {
      throw new $TypeError('Assertion failed: completion is not a thunk for a Completion Record');
    }

    var completionThunk = completion;
    var iteratorReturn = this.GetMethod(iterator, 'return');

    if (typeof iteratorReturn === 'undefined') {
      return completionThunk();
    }

    var completionRecord;

    try {
      var innerResult = this.Call(iteratorReturn, iterator, []);
    } catch (e) {
      // if we hit here, then "e" is the innerResult completion that needs re-throwing
      // if the completion is of type "throw", this will throw.
      completionRecord = completionThunk();
      completionThunk = null; // ensure it's not called twice.
      // if not, then return the innerResult completion

      throw e;
    }

    completionRecord = completionThunk(); // if innerResult worked, then throw if the completion does

    completionThunk = null; // ensure it's not called twice.

    if (this.Type(innerResult) !== 'Object') {
      throw new $TypeError('iterator .return must return an object');
    }

    return completionRecord;
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-createiterresultobject
  CreateIterResultObject: function CreateIterResultObject(value, done) {
    if (this.Type(done) !== 'Boolean') {
      throw new $TypeError('Assertion failed: Type(done) is not Boolean');
    }

    return {
      value: value,
      done: done
    };
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-regexpexec
  RegExpExec: function RegExpExec(R, S) {
    if (this.Type(R) !== 'Object') {
      throw new $TypeError('R must be an Object');
    }

    if (this.Type(S) !== 'String') {
      throw new $TypeError('S must be a String');
    }

    var exec = this.Get(R, 'exec');

    if (this.IsCallable(exec)) {
      var result = this.Call(exec, R, [S]);

      if (result === null || this.Type(result) === 'Object') {
        return result;
      }

      throw new $TypeError('"exec" method must return `null` or an Object');
    }

    return regexExec(R, S);
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-arrayspeciescreate
  ArraySpeciesCreate: function ArraySpeciesCreate(originalArray, length) {
    if (!this.IsInteger(length) || length < 0) {
      throw new $TypeError('Assertion failed: length must be an integer >= 0');
    }

    var len = length === 0 ? 0 : length;
    var C;
    var isArray = this.IsArray(originalArray);

    if (isArray) {
      C = this.Get(originalArray, 'constructor'); // TODO: figure out how to make a cross-realm normal Array, a same-realm Array
      // if (this.IsConstructor(C)) {
      // 	if C is another realm's Array, C = undefined
      // 	Object.getPrototypeOf(Object.getPrototypeOf(Object.getPrototypeOf(Array))) === null ?
      // }

      if (this.Type(C) === 'Object' && hasSymbols && $Symbol.species) {
        C = this.Get(C, $Symbol.species);

        if (C === null) {
          C = void 0;
        }
      }
    }

    if (typeof C === 'undefined') {
      return $Array(len);
    }

    if (!this.IsConstructor(C)) {
      throw new $TypeError('C must be a constructor');
    }

    return new C(len); // this.Construct(C, len);
  },
  CreateDataProperty: function CreateDataProperty(O, P, V) {
    if (this.Type(O) !== 'Object') {
      throw new $TypeError('Assertion failed: Type(O) is not Object');
    }

    if (!this.IsPropertyKey(P)) {
      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');
    }

    var oldDesc = $gOPD(O, P);
    var extensible = oldDesc || typeof $isExtensible !== 'function' || $isExtensible(O);
    var immutable = oldDesc && (!oldDesc.writable || !oldDesc.configurable);

    if (immutable || !extensible) {
      return false;
    }

    var newDesc = {
      configurable: true,
      enumerable: true,
      value: V,
      writable: true
    };
    $defineProperty(O, P, newDesc);
    return true;
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-createdatapropertyorthrow
  CreateDataPropertyOrThrow: function CreateDataPropertyOrThrow(O, P, V) {
    if (this.Type(O) !== 'Object') {
      throw new $TypeError('Assertion failed: Type(O) is not Object');
    }

    if (!this.IsPropertyKey(P)) {
      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');
    }

    var success = this.CreateDataProperty(O, P, V);

    if (!success) {
      throw new $TypeError('unable to create data property');
    }

    return success;
  },
  // https://www.ecma-international.org/ecma-262/6.0/#sec-objectcreate
  ObjectCreate: function ObjectCreate(proto, internalSlotsList) {
    if (proto !== null && this.Type(proto) !== 'Object') {
      throw new $TypeError('Assertion failed: proto must be null or an object');
    }

    var slots = arguments.length < 2 ? [] : internalSlotsList;

    if (slots.length > 0) {
      throw new $SyntaxError('es-abstract does not yet support internal slots');
    }

    if (proto === null && !$ObjectCreate) {
      throw new $SyntaxError('native Object.create support is required to create null objects');
    }

    return $ObjectCreate(proto);
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-advancestringindex
  AdvanceStringIndex: function AdvanceStringIndex(S, index, unicode) {
    if (this.Type(S) !== 'String') {
      throw new $TypeError('S must be a String');
    }

    if (!this.IsInteger(index) || index < 0 || index > MAX_SAFE_INTEGER) {
      throw new $TypeError('Assertion failed: length must be an integer >= 0 and <= 2**53');
    }

    if (this.Type(unicode) !== 'Boolean') {
      throw new $TypeError('Assertion failed: unicode must be a Boolean');
    }

    if (!unicode) {
      return index + 1;
    }

    var length = S.length;

    if (index + 1 >= length) {
      return index + 1;
    }

    var first = $charCodeAt(S, index);

    if (first < 0xD800 || first > 0xDBFF) {
      return index + 1;
    }

    var second = $charCodeAt(S, index + 1);

    if (second < 0xDC00 || second > 0xDFFF) {
      return index + 1;
    }

    return index + 2;
  },
  // https://www.ecma-international.org/ecma-262/6.0/#sec-createmethodproperty
  CreateMethodProperty: function CreateMethodProperty(O, P, V) {
    if (this.Type(O) !== 'Object') {
      throw new $TypeError('Assertion failed: Type(O) is not Object');
    }

    if (!this.IsPropertyKey(P)) {
      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');
    }

    var newDesc = {
      configurable: true,
      enumerable: false,
      value: V,
      writable: true
    };
    return !!$defineProperty(O, P, newDesc);
  },
  // https://www.ecma-international.org/ecma-262/6.0/#sec-definepropertyorthrow
  DefinePropertyOrThrow: function DefinePropertyOrThrow(O, P, desc) {
    if (this.Type(O) !== 'Object') {
      throw new $TypeError('Assertion failed: Type(O) is not Object');
    }

    if (!this.IsPropertyKey(P)) {
      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');
    }

    return !!$defineProperty(O, P, desc);
  },
  // https://www.ecma-international.org/ecma-262/6.0/#sec-deletepropertyorthrow
  DeletePropertyOrThrow: function DeletePropertyOrThrow(O, P) {
    if (this.Type(O) !== 'Object') {
      throw new $TypeError('Assertion failed: Type(O) is not Object');
    }

    if (!this.IsPropertyKey(P)) {
      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');
    }

    var success = delete O[P];

    if (!success) {
      throw new TypeError('Attempt to delete property failed.');
    }

    return success;
  },
  // https://www.ecma-international.org/ecma-262/6.0/#sec-enumerableownnames
  EnumerableOwnNames: function EnumerableOwnNames(O) {
    if (this.Type(O) !== 'Object') {
      throw new $TypeError('Assertion failed: Type(O) is not Object');
    }

    return keys(O);
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-number-prototype-object
  thisNumberValue: function thisNumberValue(value) {
    if (this.Type(value) === 'Number') {
      return value;
    }

    return $NumberValueOf(value);
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-boolean-prototype-object
  thisBooleanValue: function thisBooleanValue(value) {
    if (this.Type(value) === 'Boolean') {
      return value;
    }

    return $BooleanValueOf(value);
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-string-prototype-object
  thisStringValue: function thisStringValue(value) {
    if (this.Type(value) === 'String') {
      return value;
    }

    return $StringValueOf(value);
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-date-prototype-object
  thisTimeValue: function thisTimeValue(value) {
    return $DateValueOf(value);
  }
});
delete ES6.CheckObjectCoercible; // renamed in ES6 to RequireObjectCoercible

module.exports = ES6;

/***/ }),

/***/ 175:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
  var target = this;

  if (typeof target !== 'function' || toStr.call(target) !== funcType) {
    throw new TypeError(ERROR_MESSAGE + target);
  }

  var args = slice.call(arguments, 1);
  var bound;

  var binder = function binder() {
    if (this instanceof bound) {
      var result = target.apply(this, args.concat(slice.call(arguments)));

      if (Object(result) === result) {
        return result;
      }

      return this;
    } else {
      return target.apply(that, args.concat(slice.call(arguments)));
    }
  };

  var boundLength = Math.max(0, target.length - args.length);
  var boundArgs = [];

  for (var i = 0; i < boundLength; i++) {
    boundArgs.push('$' + i);
  }

  bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

  if (target.prototype) {
    var Empty = function Empty() {};

    Empty.prototype = target.prototype;
    bound.prototype = new Empty();
    Empty.prototype = null;
  }

  return bound;
};

/***/ }),

/***/ 176:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(177);

/***/ }),

/***/ 177:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var hasSymbols = typeof Symbol === 'function' && _typeof(Symbol.iterator) === 'symbol';

var isPrimitive = __webpack_require__(107);

var isCallable = __webpack_require__(69);

var isDate = __webpack_require__(178);

var isSymbol = __webpack_require__(179);

var ordinaryToPrimitive = function OrdinaryToPrimitive(O, hint) {
  if (typeof O === 'undefined' || O === null) {
    throw new TypeError('Cannot call method on ' + O);
  }

  if (typeof hint !== 'string' || hint !== 'number' && hint !== 'string') {
    throw new TypeError('hint must be "string" or "number"');
  }

  var methodNames = hint === 'string' ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
  var method, result, i;

  for (i = 0; i < methodNames.length; ++i) {
    method = O[methodNames[i]];

    if (isCallable(method)) {
      result = method.call(O);

      if (isPrimitive(result)) {
        return result;
      }
    }
  }

  throw new TypeError('No default value');
};

var GetMethod = function GetMethod(O, P) {
  var func = O[P];

  if (func !== null && typeof func !== 'undefined') {
    if (!isCallable(func)) {
      throw new TypeError(func + ' returned for property ' + P + ' of object ' + O + ' is not a function');
    }

    return func;
  }

  return void 0;
}; // http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive


module.exports = function ToPrimitive(input) {
  if (isPrimitive(input)) {
    return input;
  }

  var hint = 'default';

  if (arguments.length > 1) {
    if (arguments[1] === String) {
      hint = 'string';
    } else if (arguments[1] === Number) {
      hint = 'number';
    }
  }

  var exoticToPrim;

  if (hasSymbols) {
    if (Symbol.toPrimitive) {
      exoticToPrim = GetMethod(input, Symbol.toPrimitive);
    } else if (isSymbol(input)) {
      exoticToPrim = Symbol.prototype.valueOf;
    }
  }

  if (typeof exoticToPrim !== 'undefined') {
    var result = exoticToPrim.call(input, hint);

    if (isPrimitive(result)) {
      return result;
    }

    throw new TypeError('unable to convert exotic object to primitive');
  }

  if (hint === 'default' && (isDate(input) || isSymbol(input))) {
    hint = 'string';
  }

  return ordinaryToPrimitive(input, hint === 'default' ? 'number' : hint);
};

/***/ }),

/***/ 178:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var getDay = Date.prototype.getDay;

var tryDateObject = function tryDateObject(value) {
  try {
    getDay.call(value);
    return true;
  } catch (e) {
    return false;
  }
};

var toStr = Object.prototype.toString;
var dateClass = '[object Date]';
var hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';

module.exports = function isDateObject(value) {
  if (_typeof(value) !== 'object' || value === null) {
    return false;
  }

  return hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;
};

/***/ }),

/***/ 179:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var toStr = Object.prototype.toString;

var hasSymbols = __webpack_require__(180)();

if (hasSymbols) {
  var symToStr = Symbol.prototype.toString;
  var symStringRegex = /^Symbol\(.*\)$/;

  var isSymbolObject = function isRealSymbolObject(value) {
    if (_typeof(value.valueOf()) !== 'symbol') {
      return false;
    }

    return symStringRegex.test(symToStr.call(value));
  };

  module.exports = function isSymbol(value) {
    if (_typeof(value) === 'symbol') {
      return true;
    }

    if (toStr.call(value) !== '[object Symbol]') {
      return false;
    }

    try {
      return isSymbolObject(value);
    } catch (e) {
      return false;
    }
  };
} else {
  module.exports = function isSymbol(value) {
    // this environment does not support Symbols.
    return  false && false;
  };
}

/***/ }),

/***/ 180:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var origSymbol = global.Symbol;

var hasSymbolSham = __webpack_require__(181);

module.exports = function hasNativeSymbols() {
  if (typeof origSymbol !== 'function') {
    return false;
  }

  if (typeof Symbol !== 'function') {
    return false;
  }

  if (_typeof(origSymbol('foo')) !== 'symbol') {
    return false;
  }

  if (_typeof(Symbol('bar')) !== 'symbol') {
    return false;
  }

  return hasSymbolSham();
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(70)))

/***/ }),

/***/ 181:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* eslint complexity: [2, 17], max-statements: [2, 33] */

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

module.exports = function hasSymbols() {
  if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') {
    return false;
  }

  if (_typeof(Symbol.iterator) === 'symbol') {
    return true;
  }

  var obj = {};
  var sym = Symbol('test');
  var symObj = Object(sym);

  if (typeof sym === 'string') {
    return false;
  }

  if (Object.prototype.toString.call(sym) !== '[object Symbol]') {
    return false;
  }

  if (Object.prototype.toString.call(symObj) !== '[object Symbol]') {
    return false;
  } // temp disabled per https://github.com/ljharb/object.assign/issues/17
  // if (sym instanceof Symbol) { return false; }
  // temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
  // if (!(symObj instanceof Symbol)) { return false; }
  // if (typeof Symbol.prototype.toString !== 'function') { return false; }
  // if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }


  var symVal = 42;
  obj[sym] = symVal;

  for (sym in obj) {
    return false;
  } // eslint-disable-line no-restricted-syntax


  if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) {
    return false;
  }

  if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) {
    return false;
  }

  var syms = Object.getOwnPropertySymbols(obj);

  if (syms.length !== 1 || syms[0] !== sym) {
    return false;
  }

  if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
    return false;
  }

  if (typeof Object.getOwnPropertyDescriptor === 'function') {
    var descriptor = Object.getOwnPropertyDescriptor(obj, sym);

    if (descriptor.value !== symVal || descriptor.enumerable !== true) {
      return false;
    }
  }

  return true;
};

/***/ }),

/***/ 182:
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__(68);

var has = bind.call(Function.call, Object.prototype.hasOwnProperty);
var $assign = Object.assign;

module.exports = function assign(target, source) {
  if ($assign) {
    return $assign(target, source);
  }

  for (var key in source) {
    if (has(source, key)) {
      target[key] = source[key];
    }
  }

  return target;
};

/***/ }),

/***/ 183:
/***/ (function(module, exports) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

module.exports = function isPrimitive(value) {
  return value === null || typeof value !== 'function' && _typeof(value) !== 'object';
};

/***/ }),

/***/ 184:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var GetIntrinsic = __webpack_require__(71);

var $Object = GetIntrinsic('%Object%');
var $TypeError = GetIntrinsic('%TypeError%');
var $String = GetIntrinsic('%String%');

var assertRecord = __webpack_require__(108);

var $isNaN = __webpack_require__(109);

var $isFinite = __webpack_require__(110);

var sign = __webpack_require__(111);

var mod = __webpack_require__(112);

var IsCallable = __webpack_require__(69);

var toPrimitive = __webpack_require__(185);

var has = __webpack_require__(53); // https://es5.github.io/#x9


var ES5 = {
  ToPrimitive: toPrimitive,
  ToBoolean: function ToBoolean(value) {
    return !!value;
  },
  ToNumber: function ToNumber(value) {
    return +value; // eslint-disable-line no-implicit-coercion
  },
  ToInteger: function ToInteger(value) {
    var number = this.ToNumber(value);

    if ($isNaN(number)) {
      return 0;
    }

    if (number === 0 || !$isFinite(number)) {
      return number;
    }

    return sign(number) * Math.floor(Math.abs(number));
  },
  ToInt32: function ToInt32(x) {
    return this.ToNumber(x) >> 0;
  },
  ToUint32: function ToUint32(x) {
    return this.ToNumber(x) >>> 0;
  },
  ToUint16: function ToUint16(value) {
    var number = this.ToNumber(value);

    if ($isNaN(number) || number === 0 || !$isFinite(number)) {
      return 0;
    }

    var posInt = sign(number) * Math.floor(Math.abs(number));
    return mod(posInt, 0x10000);
  },
  ToString: function ToString(value) {
    return $String(value);
  },
  ToObject: function ToObject(value) {
    this.CheckObjectCoercible(value);
    return $Object(value);
  },
  CheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {
    /* jshint eqnull:true */
    if (value == null) {
      throw new $TypeError(optMessage || 'Cannot call method on ' + value);
    }

    return value;
  },
  IsCallable: IsCallable,
  SameValue: function SameValue(x, y) {
    if (x === y) {
      // 0 === -0, but they are not identical.
      if (x === 0) {
        return 1 / x === 1 / y;
      }

      return true;
    }

    return $isNaN(x) && $isNaN(y);
  },
  // https://www.ecma-international.org/ecma-262/5.1/#sec-8
  Type: function Type(x) {
    if (x === null) {
      return 'Null';
    }

    if (typeof x === 'undefined') {
      return 'Undefined';
    }

    if (typeof x === 'function' || _typeof(x) === 'object') {
      return 'Object';
    }

    if (typeof x === 'number') {
      return 'Number';
    }

    if (typeof x === 'boolean') {
      return 'Boolean';
    }

    if (typeof x === 'string') {
      return 'String';
    }
  },
  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type
  IsPropertyDescriptor: function IsPropertyDescriptor(Desc) {
    if (this.Type(Desc) !== 'Object') {
      return false;
    }

    var allowed = {
      '[[Configurable]]': true,
      '[[Enumerable]]': true,
      '[[Get]]': true,
      '[[Set]]': true,
      '[[Value]]': true,
      '[[Writable]]': true
    };

    for (var key in Desc) {
      // eslint-disable-line
      if (has(Desc, key) && !allowed[key]) {
        return false;
      }
    }

    var isData = has(Desc, '[[Value]]');
    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');

    if (isData && IsAccessor) {
      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');
    }

    return true;
  },
  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.1
  IsAccessorDescriptor: function IsAccessorDescriptor(Desc) {
    if (typeof Desc === 'undefined') {
      return false;
    }

    assertRecord(this, 'Property Descriptor', 'Desc', Desc);

    if (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {
      return false;
    }

    return true;
  },
  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.2
  IsDataDescriptor: function IsDataDescriptor(Desc) {
    if (typeof Desc === 'undefined') {
      return false;
    }

    assertRecord(this, 'Property Descriptor', 'Desc', Desc);

    if (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {
      return false;
    }

    return true;
  },
  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.3
  IsGenericDescriptor: function IsGenericDescriptor(Desc) {
    if (typeof Desc === 'undefined') {
      return false;
    }

    assertRecord(this, 'Property Descriptor', 'Desc', Desc);

    if (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {
      return true;
    }

    return false;
  },
  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.4
  FromPropertyDescriptor: function FromPropertyDescriptor(Desc) {
    if (typeof Desc === 'undefined') {
      return Desc;
    }

    assertRecord(this, 'Property Descriptor', 'Desc', Desc);

    if (this.IsDataDescriptor(Desc)) {
      return {
        value: Desc['[[Value]]'],
        writable: !!Desc['[[Writable]]'],
        enumerable: !!Desc['[[Enumerable]]'],
        configurable: !!Desc['[[Configurable]]']
      };
    } else if (this.IsAccessorDescriptor(Desc)) {
      return {
        get: Desc['[[Get]]'],
        set: Desc['[[Set]]'],
        enumerable: !!Desc['[[Enumerable]]'],
        configurable: !!Desc['[[Configurable]]']
      };
    } else {
      throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');
    }
  },
  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.5
  ToPropertyDescriptor: function ToPropertyDescriptor(Obj) {
    if (this.Type(Obj) !== 'Object') {
      throw new $TypeError('ToPropertyDescriptor requires an object');
    }

    var desc = {};

    if (has(Obj, 'enumerable')) {
      desc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);
    }

    if (has(Obj, 'configurable')) {
      desc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);
    }

    if (has(Obj, 'value')) {
      desc['[[Value]]'] = Obj.value;
    }

    if (has(Obj, 'writable')) {
      desc['[[Writable]]'] = this.ToBoolean(Obj.writable);
    }

    if (has(Obj, 'get')) {
      var getter = Obj.get;

      if (typeof getter !== 'undefined' && !this.IsCallable(getter)) {
        throw new TypeError('getter must be a function');
      }

      desc['[[Get]]'] = getter;
    }

    if (has(Obj, 'set')) {
      var setter = Obj.set;

      if (typeof setter !== 'undefined' && !this.IsCallable(setter)) {
        throw new $TypeError('setter must be a function');
      }

      desc['[[Set]]'] = setter;
    }

    if ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {
      throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');
    }

    return desc;
  }
};
module.exports = ES5;

/***/ }),

/***/ 185:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toStr = Object.prototype.toString;

var isPrimitive = __webpack_require__(107);

var isCallable = __webpack_require__(69); // http://ecma-international.org/ecma-262/5.1/#sec-8.12.8


var ES5internalSlots = {
  '[[DefaultValue]]': function DefaultValue(O) {
    var actualHint;

    if (arguments.length > 1) {
      actualHint = arguments[1];
    } else {
      actualHint = toStr.call(O) === '[object Date]' ? String : Number;
    }

    if (actualHint === String || actualHint === Number) {
      var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
      var value, i;

      for (i = 0; i < methods.length; ++i) {
        if (isCallable(O[methods[i]])) {
          value = O[methods[i]]();

          if (isPrimitive(value)) {
            return value;
          }
        }
      }

      throw new TypeError('No default value');
    }

    throw new TypeError('invalid [[DefaultValue]] hint supplied');
  }
}; // http://ecma-international.org/ecma-262/5.1/#sec-9.1

module.exports = function ToPrimitive(input) {
  if (isPrimitive(input)) {
    return input;
  }

  if (arguments.length > 1) {
    return ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);
  }

  return ES5internalSlots['[[DefaultValue]]'](input);
};

/***/ }),

/***/ 186:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var has = __webpack_require__(53);

var regexExec = RegExp.prototype.exec;
var gOPD = Object.getOwnPropertyDescriptor;

var tryRegexExecCall = function tryRegexExec(value) {
  try {
    var lastIndex = value.lastIndex;
    value.lastIndex = 0;
    regexExec.call(value);
    return true;
  } catch (e) {
    return false;
  } finally {
    value.lastIndex = lastIndex;
  }
};

var toStr = Object.prototype.toString;
var regexClass = '[object RegExp]';
var hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';

module.exports = function isRegex(value) {
  if (!value || _typeof(value) !== 'object') {
    return false;
  }

  if (!hasToStringTag) {
    return toStr.call(value) === regexClass;
  }

  var descriptor = gOPD(value, 'lastIndex');
  var hasLastIndexDataProperty = descriptor && has(descriptor, 'value');

  if (!hasLastIndexDataProperty) {
    return false;
  }

  return tryRegexExecCall(value);
};

/***/ }),

/***/ 187:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(103);

var getPolyfill = __webpack_require__(114);

module.exports = function shimArrayPrototypeIncludes() {
  var polyfill = getPolyfill();
  define(Array.prototype, {
    includes: polyfill
  }, {
    includes: function includes() {
      return Array.prototype.includes !== polyfill;
    }
  });
  return polyfill;
};

/***/ }),

/***/ 188:
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(72),
    now = __webpack_require__(189),
    toNumber = __webpack_require__(191);
/** Error message constants. */


var FUNC_ERROR_TEXT = 'Expected a function';
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeMax = Math.max,
    nativeMin = Math.min;
/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */

function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  wait = toNumber(wait) || 0;

  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;
    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time; // Start the timer for the trailing edge.

    timerId = setTimeout(timerExpired, wait); // Invoke the leading edge.

    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.

    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }

  function timerExpired() {
    var time = now();

    if (shouldInvoke(time)) {
      return trailingEdge(time);
    } // Restart the timer.


    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.

    if (trailing && lastArgs) {
      return invokeFunc(time);
    }

    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }

    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }

      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }

    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }

    return result;
  }

  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;

/***/ }),

/***/ 189:
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(115);
/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */


var now = function now() {
  return root.Date.now();
};

module.exports = now;

/***/ }),

/***/ 190:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/** Detect free variable `global` from Node.js. */
var freeGlobal = (typeof global === "undefined" ? "undefined" : _typeof(global)) == 'object' && global && global.Object === Object && global;
module.exports = freeGlobal;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(70)))

/***/ }),

/***/ 191:
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(72),
    isSymbol = __webpack_require__(192);
/** Used as references for various `Number` constants. */


var NAN = 0 / 0;
/** Used to match leading and trailing whitespace. */

var reTrim = /^\s+|\s+$/g;
/** Used to detect bad signed hexadecimal string values. */

var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
/** Used to detect binary string values. */

var reIsBinary = /^0b[01]+$/i;
/** Used to detect octal string values. */

var reIsOctal = /^0o[0-7]+$/i;
/** Built-in method references without a dependency on `root`. */

var freeParseInt = parseInt;
/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */

function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }

  if (isSymbol(value)) {
    return NAN;
  }

  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? other + '' : other;
  }

  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }

  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}

module.exports = toNumber;

/***/ }),

/***/ 192:
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var baseGetTag = __webpack_require__(193),
    isObjectLike = __webpack_require__(196);
/** `Object#toString` result references. */


var symbolTag = '[object Symbol]';
/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */

function isSymbol(value) {
  return _typeof(value) == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
}

module.exports = isSymbol;

/***/ }),

/***/ 193:
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(116),
    getRawTag = __webpack_require__(194),
    objectToString = __webpack_require__(195);
/** `Object#toString` result references. */


var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';
/** Built-in value references. */

var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;
/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */

function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }

  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}

module.exports = baseGetTag;

/***/ }),

/***/ 194:
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(116);
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

var nativeObjectToString = objectProto.toString;
/** Built-in value references. */

var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;
/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */

function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);

  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }

  return result;
}

module.exports = getRawTag;

/***/ }),

/***/ 195:
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

var nativeObjectToString = objectProto.toString;
/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */

function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;

/***/ }),

/***/ 196:
/***/ (function(module, exports) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && _typeof(value) == 'object';
}

module.exports = isObjectLike;

/***/ }),

/***/ 197:
/***/ (function(module, exports) {

module.exports = parse; //following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo
//[ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?

var re_nthElement = /^([+\-]?\d*n)?\s*(?:([+\-]?)\s*(\d+))?$/;
/*
	parses a nth-check formula, returns an array of two numbers
*/

function parse(formula) {
  formula = formula.trim().toLowerCase();

  if (formula === "even") {
    return [2, 0];
  } else if (formula === "odd") {
    return [2, 1];
  } else {
    var parsed = formula.match(re_nthElement);

    if (!parsed) {
      throw new SyntaxError("n-th rule couldn't be parsed ('" + formula + "')");
    }

    var a;

    if (parsed[1]) {
      a = parseInt(parsed[1], 10);

      if (isNaN(a)) {
        if (parsed[1].charAt(0) === "-") a = -1;else a = 1;
      }
    } else a = 0;

    return [a, parsed[3] ? parseInt((parsed[2] || "") + parsed[3], 10) : 0];
  }
}

/***/ }),

/***/ 198:
/***/ (function(module, exports, __webpack_require__) {

module.exports = compile;

var BaseFuncs = __webpack_require__(199),
    trueFunc = BaseFuncs.trueFunc,
    falseFunc = BaseFuncs.falseFunc;
/*
	returns a function that checks if an elements index matches the given rule
	highly optimized to return the fastest solution
*/


function compile(parsed) {
  var a = parsed[0],
      b = parsed[1] - 1; //when b <= 0, a*n won't be possible for any matches when a < 0
  //besides, the specification says that no element is matched when a and b are 0

  if (b < 0 && a <= 0) return falseFunc; //when a is in the range -1..1, it matches any element (so only b is checked)

  if (a === -1) return function (pos) {
    return pos <= b;
  };
  if (a === 0) return function (pos) {
    return pos === b;
  }; //when b <= 0 and a === 1, they match any element

  if (a === 1) return b < 0 ? trueFunc : function (pos) {
    return pos >= b;
  }; //when a > 0, modulo can be used to check if there is a match

  var bMod = b % a;
  if (bMod < 0) bMod += a;

  if (a > 1) {
    return function (pos) {
      return pos >= b && pos % a === bMod;
    };
  }

  a *= -1; //make `a` positive

  return function (pos) {
    return pos <= b && pos % a === bMod;
  };
}

/***/ }),

/***/ 199:
/***/ (function(module, exports) {

module.exports = {
  trueFunc: function trueFunc() {
    return true;
  },
  falseFunc: function falseFunc() {
    return false;
  }
};

/***/ }),

/***/ 28:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var strictUriEncode = __webpack_require__(170);

var decodeComponent = __webpack_require__(171);

var splitOnFirst = __webpack_require__(172);

function encoderForArrayFormat(options) {
  switch (options.arrayFormat) {
    case 'index':
      return function (key) {
        return function (result, value) {
          var index = result.length;

          if (value === undefined) {
            return result;
          }

          if (value === null) {
            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);
          }

          return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);
        };
      };

    case 'bracket':
      return function (key) {
        return function (result, value) {
          if (value === undefined) {
            return result;
          }

          if (value === null) {
            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);
          }

          return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);
        };
      };

    case 'comma':
      return function (key) {
        return function (result, value, index) {
          if (value === null || value === undefined || value.length === 0) {
            return result;
          }

          if (index === 0) {
            return [[encode(key, options), '=', encode(value, options)].join('')];
          }

          return [[result, encode(value, options)].join(',')];
        };
      };

    default:
      return function (key) {
        return function (result, value) {
          if (value === undefined) {
            return result;
          }

          if (value === null) {
            return [].concat(_toConsumableArray(result), [encode(key, options)]);
          }

          return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);
        };
      };
  }
}

function parserForArrayFormat(options) {
  var result;

  switch (options.arrayFormat) {
    case 'index':
      return function (key, value, accumulator) {
        result = /\[(\d*)\]$/.exec(key);
        key = key.replace(/\[\d*\]$/, '');

        if (!result) {
          accumulator[key] = value;
          return;
        }

        if (accumulator[key] === undefined) {
          accumulator[key] = {};
        }

        accumulator[key][result[1]] = value;
      };

    case 'bracket':
      return function (key, value, accumulator) {
        result = /(\[\])$/.exec(key);
        key = key.replace(/\[\]$/, '');

        if (!result) {
          accumulator[key] = value;
          return;
        }

        if (accumulator[key] === undefined) {
          accumulator[key] = [value];
          return;
        }

        accumulator[key] = [].concat(accumulator[key], value);
      };

    case 'comma':
      return function (key, value, accumulator) {
        var isArray = typeof value === 'string' && value.split('').indexOf(',') > -1;
        var newValue = isArray ? value.split(',') : value;
        accumulator[key] = newValue;
      };

    default:
      return function (key, value, accumulator) {
        if (accumulator[key] === undefined) {
          accumulator[key] = value;
          return;
        }

        accumulator[key] = [].concat(accumulator[key], value);
      };
  }
}

function encode(value, options) {
  if (options.encode) {
    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
  }

  return value;
}

function decode(value, options) {
  if (options.decode) {
    return decodeComponent(value);
  }

  return value;
}

function keysSorter(input) {
  if (Array.isArray(input)) {
    return input.sort();
  }

  if (_typeof(input) === 'object') {
    return keysSorter(Object.keys(input)).sort(function (a, b) {
      return Number(a) - Number(b);
    }).map(function (key) {
      return input[key];
    });
  }

  return input;
}

function removeHash(input) {
  var hashStart = input.indexOf('#');

  if (hashStart !== -1) {
    input = input.slice(0, hashStart);
  }

  return input;
}

function extract(input) {
  input = removeHash(input);
  var queryStart = input.indexOf('?');

  if (queryStart === -1) {
    return '';
  }

  return input.slice(queryStart + 1);
}

function parse(input, options) {
  options = Object.assign({
    decode: true,
    sort: true,
    arrayFormat: 'none',
    parseNumbers: false,
    parseBooleans: false
  }, options);
  var formatter = parserForArrayFormat(options); // Create an object with no prototype

  var ret = Object.create(null);

  if (typeof input !== 'string') {
    return ret;
  }

  input = input.trim().replace(/^[?#&]/, '');

  if (!input) {
    return ret;
  }

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = input.split('&')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var param = _step.value;

      var _splitOnFirst = splitOnFirst(param.replace(/\+/g, ' '), '='),
          _splitOnFirst2 = _slicedToArray(_splitOnFirst, 2),
          key = _splitOnFirst2[0],
          value = _splitOnFirst2[1]; // Missing `=` should be `null`:
      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters


      value = value === undefined ? null : decode(value, options);

      if (options.parseNumbers && !Number.isNaN(Number(value))) {
        value = Number(value);
      } else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {
        value = value.toLowerCase() === 'true';
      }

      formatter(decode(key, options), value, ret);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator["return"] != null) {
        _iterator["return"]();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  if (options.sort === false) {
    return ret;
  }

  return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce(function (result, key) {
    var value = ret[key];

    if (Boolean(value) && _typeof(value) === 'object' && !Array.isArray(value)) {
      // Sort object keys, not values
      result[key] = keysSorter(value);
    } else {
      result[key] = value;
    }

    return result;
  }, Object.create(null));
}

exports.extract = extract;
exports.parse = parse;

exports.stringify = function (object, options) {
  if (!object) {
    return '';
  }

  options = Object.assign({
    encode: true,
    strict: true,
    arrayFormat: 'none'
  }, options);
  var formatter = encoderForArrayFormat(options);
  var keys = Object.keys(object);

  if (options.sort !== false) {
    keys.sort(options.sort);
  }

  return keys.map(function (key) {
    var value = object[key];

    if (value === undefined) {
      return '';
    }

    if (value === null) {
      return encode(key, options);
    }

    if (Array.isArray(value)) {
      return value.reduce(formatter(key), []).join('&');
    }

    return encode(key, options) + '=' + encode(value, options);
  }).filter(function (x) {
    return x.length > 0;
  }).join('&');
};

exports.parseUrl = function (input, options) {
  return {
    url: removeHash(input).split('?')[0] || '',
    query: parse(extract(input), options)
  };
};

/***/ }),

/***/ 29:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _EventClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }


/**
 * This class adds an interval that will call the tick function every X milliseconds.
 */

var TickClass =
/*#__PURE__*/
function (_EventClass) {
  _inherits(TickClass, _EventClass);

  function TickClass(config) {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, TickClass);

    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      params[_key - 1] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TickClass)).call.apply(_getPrototypeOf2, [this, config].concat(params)));
    _assertThisInitialized(_this).startTicker = _this.startTicker.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this).stopTicker = _this.stopTicker.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this).tick = _this.tick.bind(_assertThisInitialized(_this));
    _this._config = _objectSpread({}, _this._config, {
      frequency: 1000,
      autoStartTicker: true
    }, config);
    _this._intervalRef = null;
    if (_this._config.autoStartTicker) _this.startTicker();
    return _this;
  }
  /**
   * Creates the interval that will trigger the tick function each time it's executed
   */


  _createClass(TickClass, [{
    key: "startTicker",
    value: function startTicker() {
      this._intervalRef = window.setInterval(this.tick, this._config.frequency || 1000);
    }
    /**
     * Clears the tick interval
     */

  }, {
    key: "stopTicker",
    value: function stopTicker() {
      window.clearInterval(this._intervalRef);
      this._intervalRef = null;
    }
    /**
     * A function meant to be replaced by dependent class that will be triggered
     */

  }, {
    key: "tick",
    value: function tick() {
      /* eslint-disable no-console */
      console.warn('Tick method needs to be overridden in for this class to do anything.');
      /* eslint-enable no-console */

      this.stopTicker();
    }
    /**
     * Stops interval and unloads parent class
     * @param  {array} params - a list of parameters passed to this function
     */

  }, {
    key: "unload",
    value: function unload() {
      var _get2;

      this.stopTicker();

      for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        params[_key2] = arguments[_key2];
      }

      (_get2 = _get(_getPrototypeOf(TickClass.prototype), "unload", this)).call.apply(_get2, [this].concat(params));
    }
  }]);

  return TickClass;
}(_EventClass__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]);

/* harmony default export */ __webpack_exports__["a"] = (TickClass);

/***/ }),

/***/ 30:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var EventClass =
/*#__PURE__*/
function () {
  function EventClass() {
    _classCallCheck(this, EventClass);

    _defineProperty(this, "_eventCallbacks", {});

    this.addEventListener = this.addEventListener.bind(this);
    this.removeEventListener = this.removeEventListener.bind(this);
    this.dispatchEvent = this.dispatchEvent.bind(this);
    this.unload = this.unload.bind(this);
  }
  /**
   * Add an event callback similar to the way you'd do it for DOM elements
   * @param {string} eventType - the type of event to attach the callback to
   * @param {function} callbackRef - a callback function to call when this event is triggered
   */


  _createClass(EventClass, [{
    key: "addEventListener",
    value: function addEventListener(eventType, callbackRef) {
      // Make sure an event array exists before trying to add callback to it
      if (typeof eventType !== 'string' && typeof callbackRef !== 'function') return false;

      if (!this._eventCallbacks[eventType] || !Array.isArray(this._eventCallbacks[eventType])) {
        this._eventCallbacks[eventType] = [];
      }

      this._eventCallbacks[eventType].push(callbackRef);

      return true;
    }
    /**
     * This function removes an attached callback function from the list of callbacks.
     * It removes the last in the in, if for some reason there is more than one reference
     * to the same function attached
     * @param  {string} eventType - type of event that the callback is attached to
     * @param  {function} callbackRef - the callback to be removed from the callback array
     * @return {[type]}
     */

  }, {
    key: "removeEventListener",
    value: function removeEventListener(eventType, callbackRef) {
      if (!this._eventCallbacks[eventType] || !Array.isArray(this._eventCallbacks[eventType])) return false;

      for (var i = this._eventCallbacks[eventType].length - 1; i >= 0; i -= 1) {
        if (this._eventCallbacks[eventType][i] === callbackRef) {
          // Create new array without the matching callback
          this._eventCallbacks[eventType] = [].concat(_toConsumableArray(this._eventCallbacks[eventType].slice(0, i)), _toConsumableArray(this._eventCallbacks[eventType].slice(i + 1)));
          return true;
        }
      }

      return false;
    }
    /**
     * Dispatches an event to registered callbacks
     * @param  {string} eventType - the type of event that's being triggered
     * @param  {object} eventData - some kind of payload for the action that is being triggered
     * @return {boolean} - returns whether this event triggered a callback
     */

  }, {
    key: "dispatchEvent",
    value: function dispatchEvent(eventType, eventData) {
      if (!this._eventCallbacks[eventType] || !Array.isArray(this._eventCallbacks[eventType])) {
        return {
          defaultPrevented: false
        };
      } // Events and settings that are set by the listener callbacks


      var shouldPreventDefault = false;
      var shouldHaltListenerChain = false;
      var parameters = {};
      var asyncEvents = []; // Functions exposed to the listener callback

      var listenerActions = {
        preventDefault: function preventDefault() {
          shouldPreventDefault = true;
        },
        haltListenerChain: function haltListenerChain() {
          shouldHaltListenerChain = true;
        },
        setParameter: function setParameter(key, value) {
          parameters[key] = value;
        },
        addAsyncEvent: function addAsyncEvent(promise) {
          if (promise instanceof Promise) asyncEvents.push(promise);
        }
      }; // The event data that is passed to the callback function

      var callbackEventData = _objectSpread({}, eventData, {}, listenerActions); // Loop over each callback and break out of loop if listener chain gets halted


      for (var i = 0; i < this._eventCallbacks[eventType].length; i += 1) {
        var callback = this._eventCallbacks[eventType][i];
        callback(callbackEventData);
        if (shouldHaltListenerChain) break;
      }

      return {
        defaultPrevented: shouldPreventDefault,
        listenerChainHalted: shouldHaltListenerChain,
        asyncEvents: Promise.all(asyncEvents),
        parameters: parameters
      };
    } // Releases any variable references so that it can be cleaned up gracefully when no longer needed

  }, {
    key: "unload",
    value: function unload() {
      this._eventCallbacks = {};
    }
  }]);

  return EventClass;
}();

/* harmony default export */ __webpack_exports__["a"] = (EventClass);

/***/ }),

/***/ 386:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/query-string/index.js
var query_string = __webpack_require__(28);
var query_string_default = /*#__PURE__*/__webpack_require__.n(query_string);

// EXTERNAL MODULE: ./node_modules/promise-rat-race/rat-race.js
var rat_race = __webpack_require__(150);
var rat_race_default = /*#__PURE__*/__webpack_require__.n(rat_race);

// EXTERNAL MODULE: ./node_modules/ua-parser-js/src/ua-parser.js
var ua_parser = __webpack_require__(101);
var ua_parser_default = /*#__PURE__*/__webpack_require__.n(ua_parser);

// CONCATENATED MODULE: ./src/lib/SourceOfTruth.js
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* flow */


window.UAParser = ua_parser_default.a;

/**
 * Manages the source of the meta data that is used for the ad library
 */
// TODO: Potentially make this dynamic, so any changes are reflected immediately
var SourceOfTruth_SourceOfTruth =
/*#__PURE__*/
function () {
  function SourceOfTruth(pageMetaFn) {
    _classCallCheck(this, SourceOfTruth);

    _defineProperty(this, "isReady", false);

    _defineProperty(this, "ready", void 0);

    _defineProperty(this, "_meta", {
      page: {},
      device: {},
      location: {}
    });

    _defineProperty(this, "_pageMetaFn", void 0);

    this.updatePageMetaFunction = this.updatePageMetaFunction.bind(this);
    this.refresh = this.refresh.bind(this);
    this.initialize = this.initialize.bind(this);
    this._pageMetaFn = pageMetaFn;
    this.ready = this.initialize();
  }

  _createClass(SourceOfTruth, [{
    key: "updatePageMetaFunction",
    value: function updatePageMetaFunction(pageMetaFn) {
      this._pageMetaFn = pageMetaFn;
    }
  }, {
    key: "refresh",
    value: function refresh() {
      this._meta.page = {};
      this._meta.device = {};
      this._meta.location = {};
      this._meta.env = {};
      this.isReady = false;
      this.ready = this.initialize();
      return this.ready;
    }
  }, {
    key: "initialize",
    value: function () {
      var _initialize = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee() {
        var _window$location, host, hostname, href, origin, pathname, protocol, search, query, _getResult, device, os, ua, browser, orientation, page;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _window$location = window.location, host = _window$location.host, hostname = _window$location.hostname, href = _window$location.href, origin = _window$location.origin, pathname = _window$location.pathname, protocol = _window$location.protocol, search = _window$location.search;
                query = query_string_default.a.parse(search);
                _getResult = new ua_parser_default.a().getResult(), device = _getResult.device, os = _getResult.os, ua = _getResult.ua, browser = _getResult.browser;
                orientation = window.innerHeight > window.innerWidth ? 'portrait' : 'landscape';
                _context.next = 6;
                return this._pageMetaFn();

              case 6:
                page = _context.sent;
                this._meta.page = page;
                this._meta.device = _objectSpread({}, device, {
                  type: device.type || 'desktop',
                  orientation: orientation,
                  os: os,
                  ua: ua,
                  browser: browser
                });
                this._meta.location = {
                  host: host,
                  hostname: hostname,
                  href: href,
                  origin: origin,
                  pathname: pathname,
                  protocol: protocol,
                  search: search,
                  query: query
                };
                this._meta.env = {"NODE_ENV":"production","version":"3.24.1","libraryName":"Master Control Program","endpoints":{"configuration":"https://code.adsales.snidigital.com/datmcp/3/mcp-configuration.json"},"dfpEnvironment":"staging","dfpNetworks":{"production":"109359770","staging":"201823409","golf-prod":"21849421099"},"slotConfigurationEndpoint":"https://bmxocid8k6.execute-api.us-east-1.amazonaws.com/v1/{lineItemId}/","libraryRemotePath":"code.adsales.snidigital.com/datmcp"};
                this.isReady = true;
                return _context.abrupt("return", this);

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function initialize() {
        return _initialize.apply(this, arguments);
      }

      return initialize;
    }()
  }, {
    key: "meta",
    get: function get() {
      return this._meta;
    }
  }, {
    key: "env",
    get: function get() {
      return this._meta.env;
    }
  }, {
    key: "page",
    get: function get() {
      return this._meta.page;
    }
  }, {
    key: "device",
    get: function get() {
      return this._meta.device;
    }
  }, {
    key: "location",
    get: function get() {
      return this._meta.location;
    }
  }]);

  return SourceOfTruth;
}();


// CONCATENATED MODULE: ./src/lib/errorReporter.js
function reportException(exception) {
  var name = exception.name,
      message = exception.message,
      stack = exception.stack,
      fileName = exception.fileName,
      lineNumber = exception.lineNumber,
      columnNumber = exception.columnNumber;
  var options = {
    method: 'post',
    headers: {
      Accept: 'application/json',
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      name: name,
      message: message,
      stack: stack,
      fileName: fileName,
      lineNumber: lineNumber,
      columnNumber: columnNumber
    }, null, 4)
  };
  var shouldReport = Math.round(Math.random() * 100 <= 10);
  if (shouldReport) fetch('https://api-beacons.sni-dat.com/error_report/mcp', options);
} // export default function () {
//   window.addEventListener('error', (exception) => {
//     reportException(exception);
//   });
// }
// CONCATENATED MODULE: ./src/lib/consolv.js
var consolv_window;



var sessionStorage = (consolv_window = window) === null || consolv_window === void 0 ? void 0 : consolv_window.sessionStorage;
function shouldWriteToConsole() {
  var shouldWrite = sessionStorage && sessionStorage.consolv || typeof query_string_default.a.parse(window.location.search).consolv !== 'undefined' || {"NODE_ENV":"production","version":"3.24.1","libraryName":"Master Control Program","endpoints":{"configuration":"https://code.adsales.snidigital.com/datmcp/3/mcp-configuration.json"},"dfpEnvironment":"staging","dfpNetworks":{"production":"109359770","staging":"201823409","golf-prod":"21849421099"},"slotConfigurationEndpoint":"https://bmxocid8k6.execute-api.us-east-1.amazonaws.com/v1/{lineItemId}/","libraryRemotePath":"code.adsales.snidigital.com/datmcp"} && {"NODE_ENV":"production","version":"3.24.1","libraryName":"Master Control Program","endpoints":{"configuration":"https://code.adsales.snidigital.com/datmcp/3/mcp-configuration.json"},"dfpEnvironment":"staging","dfpNetworks":{"production":"109359770","staging":"201823409","golf-prod":"21849421099"},"slotConfigurationEndpoint":"https://bmxocid8k6.execute-api.us-east-1.amazonaws.com/v1/{lineItemId}/","libraryRemotePath":"code.adsales.snidigital.com/datmcp"}.NODE_ENV === 'development';
  if (sessionStorage && shouldWrite) sessionStorage.consolv = true;
  return shouldWrite;
}
/* eslint-disable no-console */

function log() {
  var _console;

  if (console.log && shouldWriteToConsole()) (_console = console).log.apply(_console, arguments);
}

function error() {
  var _console2;

  /* Cannot get final name for export "default" in "./src/lib/errorReporter.js" (known exports: reportException, known reexports: ) */ undefined(arguments.length <= 0 ? undefined : arguments[0]);
  if (console.error && shouldWriteToConsole()) (_console2 = console).error.apply(_console2, arguments);
}
/* eslint-enable no-console */


/* harmony default export */ var consolv = ({
  log: log,
  error: error
});
// CONCATENATED MODULE: ./src/siteAdapters/dtcWebPageAdapter.js
function dtcWebPageAdapter_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function dtcWebPageAdapter_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { dtcWebPageAdapter_ownKeys(source, true).forEach(function (key) { dtcWebPageAdapter_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { dtcWebPageAdapter_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function dtcWebPageAdapter_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function dtcWebPageAdapter_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function dtcWebPageAdapter_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { dtcWebPageAdapter_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { dtcWebPageAdapter_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

/* flow */

/**
 * Creates a promise that resolves when mdManager becomes available
 * @param  {Number} timeout             How long to wait before rejecting promise
 * @return {Promise<mdManager, Error>}  Reference to mdManager
 */
function waitForMetaData() {
  var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5000;
  return new Promise(function (resolve, reject) {
    var duration = 0;
    var intervalId;

    function finish(response) {
      window.clearInterval(intervalId);
      resolve(response);
    }

    intervalId = window.setInterval(function () {
      duration += 100;
      if (duration > 0 && duration > timeout) reject(new Error('metadata not found'));
      if (window.metadata !== undefined) finish(window.metadata);
    }, 100);
  });
}
/**
 * Retrieves meta data from mdManager and returns it
 * @return {Object} Meta data from mdManager
 */

function getDtcWebMetaData() {
  return _getDtcWebMetaData.apply(this, arguments);
}

function _getDtcWebMetaData() {
  _getDtcWebMetaData = dtcWebPageAdapter_asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee() {
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            return _context.abrupt("return", dtcWebPageAdapter_objectSpread({}, window.metadata, {
              config_channel: 'dtc-web'
            }));

          case 4:
            _context.prev = 4;
            _context.t0 = _context["catch"](0);
            throw new Error(_context.t0);

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 4]]);
  }));
  return _getDtcWebMetaData.apply(this, arguments);
}

function dtcWebPageAdapter() {
  return waitForMetaData().then(function () {
    return getDtcWebMetaData;
  })["catch"](function () {
    throw new Error('dtc-web adapter error');
  });
}
// EXTERNAL MODULE: ./node_modules/cookie/index.js
var cookie = __webpack_require__(66);
var cookie_default = /*#__PURE__*/__webpack_require__.n(cookie);

// CONCATENATED MODULE: ./src/lib/gptSanitizeString.js
/**
 * Sanitizes key based on GPT documentation
 * @param  {string} value Unsanitized key
 * @return {string}       Sanitized key
 */
function sanitizeKey(value) {
  /* eslint-disable no-useless-escape */
  return value.replace(/[ -]/g, '_').replace(/[\"\'\,\=\!\+\#\*\~\;\^\(\)\<\>\[\]]/g, '') // As per GPT docs
  .toLowerCase();
  /* eslint-enable no-useless-escape */
}
/**
 * Sanitizes value based on GPT documentation
 * @param  {string} value Unsanitized value
 * @return {string}       Sanitized value
 */

function sanitizeValue(value) {
  var replaceDashes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  /* eslint-disable no-useless-escape */
  var output = value.replace(/[\"\'\,\=\!\+\#\*\~\;\^\(\)\<\>\[\]]/g, ''); // As per GPT docs

  if (replaceDashes) output.replace(/-/g, '_');
  return output;
  /* eslint-enable no-useless-escape */
}
// CONCATENATED MODULE: ./src/siteAdapters/standardCoreAdapter.js
function standardCoreAdapter_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function standardCoreAdapter_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { standardCoreAdapter_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { standardCoreAdapter_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function standardCoreAdapter_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function standardCoreAdapter_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { standardCoreAdapter_ownKeys(source, true).forEach(function (key) { standardCoreAdapter_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { standardCoreAdapter_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function standardCoreAdapter_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

/* flow */


/**
 * List of keys to remap different keys for SourceOfTruth
 * @type {Array}
 */

var keyValueMap = {
  topic: 'sponsorship',
  category: 'categorydspname'
};
/**
 * List of keys that can be carried over from mdManager
 * @type {Array}
 */

var validKeys = ['pagetype', 'uniqueid', 'topic', 'keyterm', 'adkey1', 'talentName', 'showName', 'keyword', 'contenttag1', 'contenttag2', 'category', 'categorydspname', 'photocount', 'vgncontent', 'show_abbr', 'sniads_regression_test', 'ing', 'scripps160', 'scripps250', 'scripps600', 'scripps728', 'scripps320', 'scripps250btf', 'scripps250m', 'cs_debug', 'sponsorship', 'subsection', 'subsection1', 'subsection2', 'subsctn1', 'subsctn2', 'source', 'livingsource', 'orntn', 'version', 'sbi_apoc', 'sbi_size', 'sbi_dozer', 'glist', 'mcid', 'aam_fw', 'main_ing', 'site', // 'page_uniqueid',
'strnativekey', 'classification', 'abkey', 'intl_enviro', 'intl_path', 'intl_refresh', 'intl_sponsor', 'intl_keywords', 'intl_w_temp', 'intl_w_type', 'intl_has_sponsor', 'intl_section', 'intl_amp', 'kuid', 'ksg', 'light_mode', 'ar_da', 'delivery_channel', 'sctndspname'];
/**
 * List of multi-value keys and how to parse them
 * @type {Array}
 */

var multiValueKeys = [{
  site: '*',
  key: 'uniqueid',
  separator: '|',
  dfpKey: 'page_uniqueid',
  clean: false
}, {
  site: 'food',
  key: 'MAININGREDIENT',
  separator: ';',
  dfpKey: 'main_ing',
  clean: true
}, {
  site: 'food',
  key: 'TargetedTerms',
  separator: ';',
  dfpKey: 'ing',
  clean: true
}];
/**
 * Standardizes the site value to the base site value (example: hgtv-photos -> hgtv)
 * @param  {string} siteValue Unmodified site value
 * @return {string}           Modified site value
 */

function standardizeSiteValue(siteValue) {
  var siteValueMap = [{
    test: /^(golden-)?hgtv([-_]\w+)?$/i,
    value: 'hgtv'
  }, {
    test: /^(golden-)?cook([-_]\w+)?$/i,
    value: 'cook'
  }, {
    test: /^(golden-)?gac([-_]\w+)?$/i,
    value: 'gac'
  }, {
    test: /^(golden-)?diy([-_]\w+)?$/i,
    value: 'diy'
  }, {
    test: /^(golden-)?food([-_]\w+)?$/i,
    value: 'food'
  }, {
    test: /^(golden-)?travel([-_]\w+)?$/i,
    value: 'travel'
  }, {
    test: /^(golden-)?tlc([-_]\w+)?$/i,
    value: 'tlc'
  }, {
    test: /^(golden-)?discovery([-_]\w+)?$/i,
    value: 'dsc/discovery'
  }, {
    test: /^(golden-)?investigationdiscovery([-_]\w+)?$/i,
    value: 'investigationdiscovery'
  }];
  var match = siteValueMap.find(function (item) {
    return item.test instanceof RegExp && item.test.exec(siteValue);
  });
  return match ? match.value : siteValue;
}
function getCookieValues() {
  var cookies = cookie_default.a.parse(window.document.cookie);
  var validCookies = {};

  if (cookies.aam_fw) {
    validCookies.aam_fw = cookies.aam_fw.split(';').map(function (i) {
      return i.split('=')[1];
    });
  }

  if (cookies['AMCV_BC501253513148ED0A490D45%40AdobeOrg']) {
    var adobeCookie = ['id'].concat(_toConsumableArray(cookies['AMCV_BC501253513148ED0A490D45%40AdobeOrg'].split('|'))).reduce(function (prev, current, index, array) {
      return index % 2 === 0 ? standardCoreAdapter_objectSpread({}, prev, standardCoreAdapter_defineProperty({}, current, array[index + 1])) : prev;
    }, {});
    validCookies.mcid = adobeCookie.MCMID;
  }

  return validCookies;
}
/**
 * Retrieves meta data from mdManager and returns it
 * @return {Object} Meta data from mdManager
 */

function standardCoreMetaData() {
  return _standardCoreMetaData.apply(this, arguments);
}

function _standardCoreMetaData() {
  _standardCoreMetaData = standardCoreAdapter_asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee() {
    var _window, mdManager, site, matchingMultiValueKeys, keyValues, cookieValues, pagetype;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _window = window, mdManager = _window.mdManager;
            site = standardizeSiteValue(mdManager.getParameterString('site'));
            matchingMultiValueKeys = multiValueKeys.filter(function (item) {
              return item.site === site || item.site === '*';
            });
            keyValues = {};
            validKeys.forEach(function (key) {
              var sanitizedKey = sanitizeKey(key);
              var sanitizedValue = sanitizeValue(mdManager.getParameterString(key), true);
              keyValues[sanitizedKey] = sanitizedValue; // Multi value keys can replace existing raw KVP above, or write to a new key

              var matchingMultiValueKey = matchingMultiValueKeys.find(function (item) {
                return item.key === key;
              });

              if (matchingMultiValueKey) {
                var rawValue = mdManager.getParameterString(key);
                var sanitizedMultiValue = rawValue.split(matchingMultiValueKey.separator).map(function (v) {
                  return sanitizeValue(v, true);
                });
                keyValues[matchingMultiValueKey.dfpKey || sanitizedKey] = sanitizedMultiValue;
              }

              Object.keys(keyValueMap).forEach(function (newKey) {
                if (keyValues[keyValueMap[newKey]]) keyValues[newKey] = keyValues[keyValueMap[newKey]];
              });
            });
            cookieValues = getCookieValues(); // Some pages use TYPE instead of PAGETYPE in mdManager

            pagetype = keyValues.pagetype || mdManager.getParameterString('TYPE');
            keyValues.config_channel = 'standard';
            return _context.abrupt("return", standardCoreAdapter_objectSpread({}, keyValues, {}, cookieValues, {
              site: site,
              pagetype: pagetype
            }));

          case 12:
            _context.prev = 12;
            _context.t0 = _context["catch"](0);
            throw new Error(_context.t0);

          case 15:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 12]]);
  }));
  return _standardCoreMetaData.apply(this, arguments);
}
// CONCATENATED MODULE: ./src/siteAdapters/golfCoreAdapter.js
function golfCoreAdapter_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function golfCoreAdapter_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { golfCoreAdapter_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { golfCoreAdapter_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function golfCoreAdapter_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function golfCoreAdapter_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { golfCoreAdapter_ownKeys(source, true).forEach(function (key) { golfCoreAdapter_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { golfCoreAdapter_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function golfCoreAdapter_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function golfCoreAdapter_toConsumableArray(arr) { return golfCoreAdapter_arrayWithoutHoles(arr) || golfCoreAdapter_iterableToArray(arr) || golfCoreAdapter_nonIterableSpread(); }

function golfCoreAdapter_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function golfCoreAdapter_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function golfCoreAdapter_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

/* flow */



/**
 * List of keys to remap different keys for SourceOfTruth
 * @type {Array}
 */

var golfCoreAdapter_keyValueMap = {
  ctx_page_sub_channel: 'sctndspname',
  ctx_page_channel: 'categorydspname',
  uniqueid: 'detailid'
};
/**
 * List of keys that can be carried over from mdManager
 * @type {Array}
 */

var golfCoreAdapter_validKeys = ['site', 'partner', 'keyword', 'env_device_type', 'ctx_template', // 'ctx_slot_type',
// 'ctx_slot_rn',
'ctx_page_slug', 'ctx_page_channel', 'ctx_page_sub_channel', 'cnt_tags', 'cnt_copilotid', 'series', 'pos_instance', 'pagetype', 'categorydspname', 'sctndspname', 'detailid', 'userid'];

function getContentType(template) {
  var contentTypeMap = {
    bundle: /^(index(_[\w_]+)?|subindex(_[\w_]+)?|bundle(_[\w_]+)?|hotlist(_[\w_]+)?|topic)$/i,
    article: /^(article(_[\w_]+)?|desktop_article(_[\w_]+)?|hotlist)$/i,
    contributor: /^contributor$/i,
    search: /^search$/i,
    gallery: /^gallery(_[\w_]+)$/i,
    'site-info': /^error|sitemap|static$/i
  };
  var match = Object.keys(contentTypeMap).find(function (key) {
    return contentTypeMap[key] instanceof RegExp && contentTypeMap[key].exec(template);
  });
  return match || template;
}
/**
 * List of multi-value keys and how to parse them
 * @type {Array}
 */


var golfCoreAdapter_multiValueKeys = [{
  site: '*',
  key: 'cnt_tags',
  separator: ',',
  dfpKey: 'cnt_tags',
  clean: false
}];
function golfCoreAdapter_getCookieValues() {
  var cookies = cookie_default.a.parse(window.document.cookie);
  var validCookies = {};

  if (cookies.aam_fw) {
    validCookies.aam_fw = cookies.aam_fw.split(';').map(function (i) {
      return i.split('=')[1];
    });
  }

  if (cookies['AMCV_BC501253513148ED0A490D45%40AdobeOrg']) {
    var adobeCookie = ['id'].concat(golfCoreAdapter_toConsumableArray(cookies['AMCV_BC501253513148ED0A490D45%40AdobeOrg'].split('|'))).reduce(function (prev, current, index, array) {
      return index % 2 === 0 ? golfCoreAdapter_objectSpread({}, prev, golfCoreAdapter_defineProperty({}, current, array[index + 1])) : prev;
    }, {});
    validCookies.mcid = adobeCookie.MCMID;
  }

  return validCookies;
}
/**
 * Retrieves meta data from mdManager and returns it
 * @return {Object} Meta data from mdManager
 */

function golfCoreMetaData() {
  return _golfCoreMetaData.apply(this, arguments);
}

function _golfCoreMetaData() {
  _golfCoreMetaData = golfCoreAdapter_asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee() {
    var _window, mdManager, search, site, _queryString$parse, ao_test, matchingMultiValueKeys, keyValues, cookieValues, pagetype;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _window = window, mdManager = _window.mdManager;
            search = window.location.search;
            site = 'golfdigest';
            /* eslint-disable-next-line camelcase */

            _queryString$parse = query_string_default.a.parse(search), ao_test = _queryString$parse.ao_test;
            matchingMultiValueKeys = golfCoreAdapter_multiValueKeys.filter(function (item) {
              return item.site === site || item.site === '*';
            });
            keyValues = {};
            golfCoreAdapter_validKeys.forEach(function (key) {
              var sanitizedKey = sanitizeKey(key);
              var sanitizedValue = sanitizeValue(mdManager.getParameterString(key));
              keyValues[sanitizedKey] = sanitizedValue; // Multi value keys can replace existing raw KVP above, or write to a new key

              var matchingMultiValueKey = matchingMultiValueKeys.find(function (item) {
                return item.key === key;
              });

              if (matchingMultiValueKey) {
                var rawValue = mdManager.getParameterString(key);
                var sanitizedMultiValue = rawValue.split(matchingMultiValueKey.separator).map(sanitizeValue);
                keyValues[matchingMultiValueKey.dfpKey || sanitizedKey] = sanitizedMultiValue;
              }

              Object.keys(golfCoreAdapter_keyValueMap).forEach(function (newKey) {
                if (keyValues[golfCoreAdapter_keyValueMap[newKey]]) keyValues[newKey] = keyValues[golfCoreAdapter_keyValueMap[newKey]];
              });
            });
            cookieValues = golfCoreAdapter_getCookieValues();
            /* eslint-disable camelcase */

            if (ao_test !== undefined) {
              keyValues.ao_test = ao_test;
            }
            /* eslint-enable camelcase */


            keyValues.contentType = getContentType(keyValues.ctx_template); // Some weird inconsistency with this value
            // if (keyValues.ctx_page_channel === 'homepage') keyValues.ctx_page_channel = 'home';
            // Some pages use TYPE instead of PAGETYPE in mdManager

            pagetype = keyValues.pagetype || mdManager.getParameterString('TYPE');
            keyValues.config_channel = 'golf';
            return _context.abrupt("return", golfCoreAdapter_objectSpread({}, keyValues, {}, cookieValues, {
              pagetype: pagetype
            }));

          case 16:
            _context.prev = 16;
            _context.t0 = _context["catch"](0);
            throw new Error(_context.t0);

          case 19:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 16]]);
  }));
  return _golfCoreMetaData.apply(this, arguments);
}
// CONCATENATED MODULE: ./src/siteAdapters/mdManagerAdapter.js
/* flow */


var adapters = {
  golfdigest: golfCoreMetaData,
  '*': standardCoreMetaData
};
/**
 * Creates a promise that resolves when mdManager becomes available
 * @param  {Number} timeout             How long to wait before rejecting promise
 * @return {Promise<mdManager, Error>}  Reference to mdManager
 */

function waitForMdManager() {
  var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5000;
  return new Promise(function (resolve, reject) {
    var duration = 0;
    var intervalId;

    function finish(response) {
      window.clearInterval(intervalId);

      if (response) {
        resolve(response);
      } else {
        reject(new Error('mdManager not found'));
      }
    }

    intervalId = window.setInterval(function () {
      duration += 100;

      if (duration > 0 && duration > timeout) {
        finish();
        return;
      }

      if (window.mdManager !== undefined) finish(window.mdManager);
    }, 100);
  });
}
function mdManagerAdapter() {
  return waitForMdManager().then(function (mdManager) {
    var site = mdManager.getSite();
    /* eslint-disable-next-line no-restricted-syntax */

    for (var key in adapters) {
      if ((key === site || key === '*') && adapters[key]) return adapters[key];
    }

    throw new Error('MCPxxx: No configured adapter for this site');
  })["catch"](function () {
    throw new Error('MCPxxx: mdManager not found');
  });
}
// EXTERNAL MODULE: ./src/config/rules.json
var config_rules = __webpack_require__(151);
var rules_default = /*#__PURE__*/__webpack_require__.n(config_rules);

// EXTERNAL MODULE: ./src/config/kronosRules.json
var kronosRules = __webpack_require__(152);
var kronosRules_default = /*#__PURE__*/__webpack_require__.n(kronosRules);

// EXTERNAL MODULE: ./src/config/targetingWhitelist.json
var config_targetingWhitelist = __webpack_require__(153);
var targetingWhitelist_default = /*#__PURE__*/__webpack_require__.n(config_targetingWhitelist);

// EXTERNAL MODULE: ./src/config/slotDefinitions.json
var config_slotDefinitions = __webpack_require__(154);
var slotDefinitions_default = /*#__PURE__*/__webpack_require__.n(config_slotDefinitions);

// EXTERNAL MODULE: ./src/config/configuration.json
var config_configuration = __webpack_require__(155);
var configuration_default = /*#__PURE__*/__webpack_require__.n(config_configuration);

// EXTERNAL MODULE: ./src/config/dfpEnvironment.json
var config_dfpEnvironment = __webpack_require__(156);
var dfpEnvironment_default = /*#__PURE__*/__webpack_require__.n(config_dfpEnvironment);

// EXTERNAL MODULE: ./src/lib/EventClass.js
var EventClass = __webpack_require__(30);

// CONCATENATED MODULE: ./src/lib/evaluateFn.js
/* harmony default export */ var evaluateFn = (function (fn) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return typeof fn === 'function' ? fn.apply(void 0, args) : fn;
});
// CONCATENATED MODULE: ./src/lib/loadGPTLibrary.js
function loadGPTLibrary() {
  if (!window.googletag || !window.googletag.getVersion) {
    window.googletag = window.googletag || {
      cmd: []
    };
    var tag = document.createElement('script');
    tag.id = 'gpt-library';
    tag.async = true;
    tag.type = 'text/javascript';
    tag.src = '//www.googletagservices.com/tag/js/gpt.js';
    document.head.appendChild(tag);
  }

  return window.googletag;
}
function pubadsReady() {
  var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5000;
  var frequency = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;
  return new Promise(function (resolve, reject) {
    var duration = 0;
    var timerId = window.setInterval(function () {
      duration += frequency;

      if (window.googletag && window.googletag.pubadsReady) {
        window.clearInterval(timerId);
        resolve();
      } else if (duration > timeout) {
        window.clearInterval(timerId);
        reject();
      }
    }, frequency);
  });
}
// EXTERNAL MODULE: ./node_modules/array-includes/index.js
var array_includes = __webpack_require__(47);
var array_includes_default = /*#__PURE__*/__webpack_require__.n(array_includes);

// EXTERNAL MODULE: ./node_modules/object-path/index.js
var object_path = __webpack_require__(157);
var object_path_default = /*#__PURE__*/__webpack_require__.n(object_path);

// CONCATENATED MODULE: ./src/lib/testRules.js


/**
 * Flow Definitions
 */

// const isNullOrUndefined = value => (value === null) || (value === undefined);

/**
 * @typedef   {RuleTest}  rule
 * @property  {MetaMap}   values Object of key-values to test rules against
 * @returns   {boolean}          Whether the rule matches the provided meta values
 */
function testRule(rule, values) {
  var _rule$compare = rule.compare,
      compare = _rule$compare === void 0 ? '=' : _rule$compare,
      key = rule.key,
      test = rule.test;
  var value = object_path_default.a.get(values, key);

  switch (compare.toLowerCase()) {
    case '<':
    case 'lessthan':
      {
        return typeof test === 'number' && typeof value === 'number' && value < test;
      }

    case '>':
    case 'greaterthan':
      {
        return typeof test === 'number' && typeof value === 'number' && value > test;
      }

    case '!=':
    case 'not':
      {
        return test !== value;
      }

    case 'in':
    case 'includes':
      {
        if (Array.isArray(test)) {
          return array_includes_default()(test, value);
        }

        return String(value).indexOf(test) >= 0;
      }

    case 'regex':
      {
        return !!String(value).match(new RegExp(String(test), 'gi'));
      }

    case 'startswith':
    case '^':
      {
        return String(value).slice(0, String(test).length) === String(test);
      }

    case 'endswith':
    case '$':
      {
        return String(value).slice(0 - String(test).length) === String(test);
      }

    case 'undefined':
      {
        return value === undefined;
      }

    case 'notundefined':
      {
        return value !== undefined;
      }

    case 'and':
    case 'or':
    case 'xor':
      {
        /* eslint-disable no-use-before-define */
        return testRules(rule.test, values, rule.compare);
        /* eslint-enable no-use-before-define */
      }

    case '=':
    case 'equals':
    default:
      {
        return test === value;
      }
  }
}
/**
 * Does value comparison between a test value and a target value.
 * @param  {Array<TestRule>}  rules   The string to test against
 * @param  {Object}           value   The target string to test
 * @param  {String}           compare The type of comparison to do
 * @return {boolean}                  Whether the value matches the test
 */

function testRules(rules, values) {
  var compare = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'and';
  if (!Array.isArray(rules)) return testRule(rules, values);
  if (rules.length === 0) return true;

  switch (compare) {
    case 'and':
      return rules.every(function (rule) {
        return testRule(rule, values);
      });

    case 'or':
      return rules.some(function (rule) {
        return testRule(rule, values);
      });

    case 'xor':
      {
        var res = rules.map(function (rule) {
          return testRule(rule, values);
        });
        return res.length === 2 && array_includes_default()(res, true) && array_includes_default()(res, false);
      }

    default:
      return false;
  }
}
// CONCATENATED MODULE: ./src/lib/advancedMerge.js
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function advancedMerge_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function advancedMerge_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { advancedMerge_ownKeys(source, true).forEach(function (key) { advancedMerge_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { advancedMerge_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function advancedMerge_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function advancedMerge_toConsumableArray(arr) { return advancedMerge_arrayWithoutHoles(arr) || advancedMerge_iterableToArray(arr) || advancedMerge_nonIterableSpread(); }

function advancedMerge_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function advancedMerge_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function advancedMerge_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * Manipulates plain objects and arrays using key prefixes
 * @param  {Object|Array} previousValue Initial object/array
 * @param  {Object|Array} nextValue     Object/array to merge
 * @param  {string}       mergeType     The type of comparison to do
 * @return {Object|Array}               Merged object or array
 */
function advancedMerge(previousValue, nextValue) {
  var mergeType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'r';
  var isArray = Array.isArray(previousValue) && Array.isArray(nextValue);
  var isObject = _typeof(previousValue) === 'object' && _typeof(nextValue) === 'object' && !isArray;
  if (!isArray && !isObject) return nextValue;

  if (isArray) {
    switch (mergeType) {
      case '+':
        {
          return [].concat(advancedMerge_toConsumableArray(previousValue), advancedMerge_toConsumableArray(nextValue));
        }

      case '-':
        {
          return previousValue.filter(function (item) {
            return !nextValue.includes(item);
          });
        }

      default:
        {
          return nextValue;
        }
    }
  }

  var mergedValues = advancedMerge_objectSpread({}, previousValue);

  Object.keys(nextValue).forEach(function (key) {
    var _$exec$slice = /^([+-]?)(.+)/g.exec(key).slice(1),
        _$exec$slice2 = _slicedToArray(_$exec$slice, 2),
        modifier = _$exec$slice2[0],
        name = _$exec$slice2[1];

    switch (modifier) {
      case '+':
        {
          mergedValues[name] = advancedMerge(previousValue[name], nextValue[key], modifier);
          break;
        }

      case '-':
        {
          if (Array.isArray(previousValue[name]) && Array.isArray(nextValue[key])) {
            mergedValues[name] = advancedMerge(previousValue[name], nextValue[key], modifier);
          } else {
            delete mergedValues[name];
          }

          break;
        }

      default:
        {
          mergedValues[name] = nextValue[key];
        }
    }
  });
  return mergedValues;
}
// CONCATENATED MODULE: ./src/lib/Configurator.js
function Configurator_toConsumableArray(arr) { return Configurator_arrayWithoutHoles(arr) || Configurator_iterableToArray(arr) || Configurator_nonIterableSpread(); }

function Configurator_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function Configurator_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function Configurator_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function Configurator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function Configurator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function Configurator_createClass(Constructor, protoProps, staticProps) { if (protoProps) Configurator_defineProperties(Constructor.prototype, protoProps); if (staticProps) Configurator_defineProperties(Constructor, staticProps); return Constructor; }

function Configurator_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function Configurator_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Configurator_ownKeys(source, true).forEach(function (key) { Configurator_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Configurator_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function Configurator_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




/**
 * Flow Definitions
 */

/**
 * Validates rules by checking that they actually have actions, sets a default priority of 5, and
 * sorts the rules based on their priority
 * @param  {Array<Rule>}  rules List of rules to be processed
 * @return {Array<Rule>}  List of processed rules
 */
function processRules() {
  var rules = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return rules.filter(function (rule) {
    return rule.action;
  }).map(function (rule) {
    return rule.priority ? rule : Configurator_objectSpread({}, rule, {
      priority: 5
    });
  }).sort(function (a, b) {
    return a.priority - b.priority;
  });
}
/**
 * A general configuration manager for handling version independent rules and settings
 */

var Configurator_Configurator =
/*#__PURE__*/
function () {
  /**
   * @param {Array<Rule>}       configuration Configuration to test against
   * @param {MetaMap|function}  meta          Initially set meta values to test
   * @param {ActionMap}         defaultProps  Default props set before being overridden by
   *   explicit rules
   */
  function Configurator() {
    var configuration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var defaultProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    Configurator_classCallCheck(this, Configurator);

    Configurator_defineProperty(this, "_configuration", void 0);

    Configurator_defineProperty(this, "_meta", void 0);

    Configurator_defineProperty(this, "_defaultProps", void 0);

    this.updateConfiguration = this.updateConfiguration.bind(this);
    this.appendConfiguration = this.appendConfiguration.bind(this);
    this.updateMeta = this.updateMeta.bind(this);
    this.getConfiguration = this.getConfiguration.bind(this);
    this._configuration = processRules(configuration);
    this._meta = meta;
    this._defaultProps = defaultProps;
  }
  /**
   * Updates the configuration in the Configurator instance
   * @param {Array<Rule>} configuration Configuration to test against
   */


  Configurator_createClass(Configurator, [{
    key: "updateConfiguration",
    value: function updateConfiguration(configuration) {
      this._configuration = processRules(configuration);
    }
    /**
     * Appends the configuration in the Configurator instance
     * @param {Array<Rule>} configuration Configuration to append to existing rules
     */

  }, {
    key: "appendConfiguration",
    value: function appendConfiguration(configuration) {
      this._configuration = processRules([].concat(Configurator_toConsumableArray(this._configuration), Configurator_toConsumableArray(configuration)));
    }
  }, {
    key: "updateMeta",
    value: function updateMeta() {
      var meta = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this._meta = meta;
    }
  }, {
    key: "getConfiguration",

    /**
     * Updates the configuration in the Configurator instance
     * @param {ActionMap} defaults A default set of actions to start from in this context
     * @param {MetaMap|function} meta Additional meta to use against rules
     * @returns {ActionMap} Object of actions that are returned from matching rules
     */
    value: function getConfiguration() {
      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref$defaults = _ref.defaults,
          defaults = _ref$defaults === void 0 ? {} : _ref$defaults,
          _ref$meta = _ref.meta,
          meta = _ref$meta === void 0 ? {} : _ref$meta;

      var action = Configurator_objectSpread({}, this._defaultProps, {}, defaults);

      var combinedMetaData = Configurator_objectSpread({}, evaluateFn(this._meta), {}, evaluateFn(meta));

      var matchingRules = this._configuration.filter(function (rule) {
        if (!rule.condition) return true;
        return testRules(!Array.isArray(rule.condition) ? [rule.condition] : rule.condition, combinedMetaData, 'and');
      });

      matchingRules.forEach(function (matchingRule) {
        action = advancedMerge(action, matchingRule.action);
      });
      return action;
    }
  }, {
    key: "meta",
    get: function get() {
      return this._meta;
    }
  }]);

  return Configurator;
}();

/* harmony default export */ var lib_Configurator = (Configurator_Configurator);
// CONCATENATED MODULE: ./src/lib/slotUtilities/resizeSlotIFrame.js
function resizeSlotIFrame(slotId, width, height) {
  var slot = typeof slotId === 'string' ? window.document.getElementById(slotId) : slotId;
  var iframe = slot.tagName === 'IFRAME' ? slot : slot.querySelector('iframe');

  if (iframe) {
    if (width) iframe.width = width;
    if (height) iframe.height = height;
  }

  return iframe || false;
}
// CONCATENATED MODULE: ./src/lib/slotUtilities/index.js

/* harmony default export */ var slotUtilities = ({
  resizeSlotIFrame: resizeSlotIFrame
});
// CONCATENATED MODULE: ./src/lib/uniqueId.js
var idCounts = {};
function uniqueId(id) {
  if (idCounts[id] === undefined) {
    idCounts[id] = 0;
    return id;
  }
  /* eslint-disable no-plusplus */


  return "".concat(id, "_").concat(++idCounts[id]);
  /* eslint-enable no-plusplus */
}
// CONCATENATED MODULE: ./src/lib/instanceCount.js
var instanceCounts = {};
function instanceCount(slotType) {
  if (instanceCounts[slotType] === undefined) {
    instanceCounts[slotType] = 0;
  }
  /* eslint-disable no-plusplus */


  return ++instanceCounts[slotType];
  /* eslint-enable no-plusplus */
}
// CONCATENATED MODULE: ./src/getPageTargeting.js
/* flow */
// import objectPath from 'object-path';

/**
 * @access private
 */
/* harmony default export */ var src_getPageTargeting = (function () {
  var whitelist = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var metaData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var targeting = {};
  var pageMeta = metaData.page;
  Object.keys(pageMeta).forEach(function (key) {
    if (whitelist.includes(key)) {
      targeting[key] = pageMeta[key];
    }
  });
  return targeting;
});
// CONCATENATED MODULE: ./src/lib/elementVisibility.js
/**
 * Calculates how much of an element is in the vertical range of the viewport, and how close it
 * is, if it's outside of the viewport.
 * @param {Element|string} element - An element or query string to reference the target element
 * @return {Object}
 */
function verticalVisibility(element) {
  var DOMElement = typeof element === 'string' ? document.querySelector(element) : element;
  var rect = DOMElement.getBoundingClientRect();
  var viewport = {
    width: window.innerWidth,
    height: window.innerHeight
  };

  if (rect.top > viewport.height) {
    return {
      visibility: 0,
      state: 'BELOW_VIEW',
      distance: rect.top - viewport.height
    };
  }

  if (rect.bottom <= 0) {
    return {
      visibility: 0,
      state: 'ABOVE_VIEW',
      distance: Math.abs(rect.bottom)
    };
  }

  if (rect.top >= 0 && rect.bottom <= viewport.height) {
    return {
      visibility: 1,
      state: 'IN_VERTICAL_VIEW',
      distance: 0
    };
  }

  if (rect.top < 0 && rect.bottom > viewport.height) {
    return {
      visibility: viewport.height / rect.height,
      state: 'TOP_AND_BOTTOM_TRUNCATED',
      distance: 0
    };
  }

  if (rect.top < 0 && rect.bottom <= viewport.height) {
    return {
      visibility: rect.bottom / rect.height,
      state: 'TOP_TRUNCATED',
      distance: 0
    };
  }

  if (rect.top >= 0 && rect.bottom > viewport.height) {
    return {
      visibility: (viewport.height - rect.top) / rect.height,
      state: 'BOTTOM_TRUNCATED',
      distance: 0
    };
  }

  return {
    visibility: 0,
    state: 'NOT_IN_VERTICAL_VIEW',
    distance: Infinity
  };
}
/**
 * Calculates how much of an element is in the horizontal range of the viewport, and how close it
 * is, if it's outside of the viewport.
 * @param {Element|string} element - An element or query string to reference the target element
 * @return {Object}
 */

function horizontalVisibility(element) {
  var DOMElement = typeof element === 'string' ? document.querySelector(element) : element;
  var rect = DOMElement.getBoundingClientRect();
  var viewport = {
    width: window.innerWidth,
    height: window.innerHeight
  };

  if (rect.left > viewport.width) {
    return {
      visibility: 0,
      state: 'RIGHT_OF_VIEW',
      distance: rect.left - viewport.width
    };
  }

  if (rect.right <= 0) {
    return {
      visibility: 0,
      state: 'LEFT_OF_VIEW',
      distance: Math.abs(rect.right)
    };
  }

  if (rect.left >= 0 && rect.right <= viewport.width) {
    return {
      visibility: 1,
      state: 'IN_HORIZONTAL_VIEW',
      distance: 0
    };
  }

  if (rect.left < 0 && rect.right > viewport.width) {
    return {
      visibility: viewport.width / rect.width,
      state: 'LEFT_AND_RIGHT_TRUNCATED',
      distance: 0
    };
  }

  if (rect.left < 0 && rect.right <= viewport.width) {
    return {
      visibility: rect.right / viewport.width,
      state: 'LEFT_TRUNCATED',
      distance: 0
    };
  }

  if (rect.left >= 0 && rect.right > viewport.width) {
    return {
      visibility: (viewport.width - rect.left) / rect.width,
      state: 'RIGHT_TRUNCATED',
      distance: 0
    };
  }

  return {
    visibility: 0,
    state: 'NOT_IN_HORIZONTAL_VIEW',
    distance: Infinity
  };
}
/**
 * Calculates how much of an element is in the visible range of the viewport, and how close it
 * is, if it's outside of the viewport.
 * @param {Element|string} element - An element or query string to reference the target element
 * @return {Object}
 */

function elementVisibility(element) {
  var DOMElement = typeof element === 'string' ? document.querySelector(element) : element;
  var vertical = verticalVisibility(DOMElement);
  var horizontal = horizontalVisibility(DOMElement);
  return {
    visibility: vertical.visibility * horizontal.visibility,
    state: [vertical.state, horizontal.state],
    distance: Math.max(vertical.distance, horizontal.distance)
  };
}
// CONCATENATED MODULE: ./src/lib/getBreakpointSize.js
/* harmony default export */ var getBreakpointSize = (function (window, breakpoints) {
  var height = window.innerHeight;
  var width = window.innerWidth;
  var currentBreakpoint = 'small';

  for (var _i = 0, _Object$keys = Object.keys(breakpoints); _i < _Object$keys.length; _i++) {
    var breakpoint = _Object$keys[_i];

    if (breakpoints[breakpoint][0] > 0 && width < breakpoints[breakpoint][0]) {
      return currentBreakpoint;
    }

    if (breakpoints[breakpoint][1] > 0 && height < breakpoints[breakpoint][1]) {
      return currentBreakpoint;
    }

    currentBreakpoint = breakpoint;
  }

  return currentBreakpoint;
});
// CONCATENATED MODULE: ./src/DFPAdSlot.js
function DFPAdSlot_toConsumableArray(arr) { return DFPAdSlot_arrayWithoutHoles(arr) || DFPAdSlot_iterableToArray(arr) || DFPAdSlot_nonIterableSpread(); }

function DFPAdSlot_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function DFPAdSlot_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function DFPAdSlot_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function DFPAdSlot_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function DFPAdSlot_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { DFPAdSlot_ownKeys(source, true).forEach(function (key) { DFPAdSlot_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { DFPAdSlot_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function DFPAdSlot_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { DFPAdSlot_typeof = function _typeof(obj) { return typeof obj; }; } else { DFPAdSlot_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return DFPAdSlot_typeof(obj); }

function DFPAdSlot_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function DFPAdSlot_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function DFPAdSlot_createClass(Constructor, protoProps, staticProps) { if (protoProps) DFPAdSlot_defineProperties(Constructor.prototype, protoProps); if (staticProps) DFPAdSlot_defineProperties(Constructor, staticProps); return Constructor; }

function DFPAdSlot_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var renderKeys = ['isEmpty', 'serviceName', 'slotContentChanged', 'size', 'advertiserId', 'campaignId', 'creativeId', 'labelIds', 'lineItemId', 'sourceAgnosticCreativeId', 'sourceAgnosticLineItemId', 'isBackfill', 'yieldGroupIds', 'companyIds'];
var slotFunctions = ['getAdUnitPath', 'getTargeting', 'setTargeting', 'getTargetingMap', 'clearTargeting'];

function getIFrameVisibility(element) {
  var iframe = element && element.getElementsByTagName('iframe')[0];
  if (iframe) return elementVisibility(iframe);
  return null;
}
/**
 * A custom wrapper for the a DFP ad slot that exposes additional information and functionality.
 */


var DFPAdSlot_DFPAdSlot =
/*#__PURE__*/
function () {
  function DFPAdSlot(_ref) {
    var _this = this;

    var MCP = _ref.MCP,
        googleTagSlot = _ref.slot,
        element = _ref.element,
        type = _ref.type,
        meta = _ref.meta;

    DFPAdSlot_classCallCheck(this, DFPAdSlot);

    DFPAdSlot_defineProperty(this, "_MCP", void 0);

    DFPAdSlot_defineProperty(this, "_DFPSlot", void 0);

    DFPAdSlot_defineProperty(this, "_type", void 0);

    DFPAdSlot_defineProperty(this, "_id", void 0);

    DFPAdSlot_defineProperty(this, "_element", void 0);

    DFPAdSlot_defineProperty(this, "_creative", {
      isEmpty: true
    });

    DFPAdSlot_defineProperty(this, "_impressionViewable", false);

    DFPAdSlot_defineProperty(this, "_meta", {
      stale: false,
      loaded: false
    });

    DFPAdSlot_defineProperty(this, "_inViewPercentage", 0);

    DFPAdSlot_defineProperty(this, "_clearTargetingAfterRefresh", []);

    this.handleSlotRenderEnded = this.handleSlotRenderEnded.bind(this);
    this.handleSlotVisibilityChanged = this.handleSlotVisibilityChanged.bind(this);
    this.handleImpressionViewable = this.handleImpressionViewable.bind(this);
    this.toPlainObject = this.toPlainObject.bind(this);
    this.clearTargetingAfterRefresh = this.clearTargetingAfterRefresh.bind(this);
    this.refresh = this.refresh.bind(this);
    this.resetSlot = this.resetSlot.bind(this);
    this.destroy = this.destroy.bind(this);
    this.getMetaData = this.getMetaData.bind(this);
    this.setMetaData = this.setMetaData.bind(this);
    this.removeMetaData = this.removeMetaData.bind(this);

    if (DFPAdSlot_typeof(googleTagSlot) !== 'object') {
      throw new Error('This must be constructed with a DFP Slot object');
    }

    this._MCP = MCP;
    this._DFPSlot = googleTagSlot;
    this._id = this._DFPSlot.getSlotElementId();
    this._element = element;
    this._type = type;
    this._meta = DFPAdSlot_objectSpread({}, meta, {}, this._meta);
    slotFunctions.forEach(function (property) {
      _this[property] = googleTagSlot[property].bind(googleTagSlot);
    });
  }
  /**
   * @private
   */


  DFPAdSlot_createClass(DFPAdSlot, [{
    key: "handleSlotRenderEnded",
    value: function handleSlotRenderEnded(e) {
      var _this2 = this;

      if (e.slot !== this._DFPSlot) return;
      renderKeys.forEach(function (key) {
        _this2._creative[key] = e[key];
      });
      this.setMetaData('creativeLoaded', true);
      this.setMetaData('renderedAt', new Date());
      this.setMetaData('loaded', true);
      this.setMetaData('stale', false);

      this._clearTargetingAfterRefresh.forEach(function (key) {
        _this2.clearTargeting(key);
      });

      this._clearTargetingAfterRefresh = [];
    }
    /**
     * @private
     */

  }, {
    key: "handleSlotVisibilityChanged",
    value: function handleSlotVisibilityChanged(e) {
      if (e.slot !== this._DFPSlot) return;
      this._inViewPercentage = e.inViewPercentage * 0.01;
    }
    /**
     * @private
     */

  }, {
    key: "handleImpressionViewable",
    value: function handleImpressionViewable(e) {
      if (e.slot !== this._DFPSlot) return;
      this._impressionViewable = true;
    }
  }, {
    key: "toPlainObject",
    value: function toPlainObject() {
      var visibilityResults = elementVisibility(this.element);
      return {
        meta: this._meta,
        creative: this.creative,
        id: this.id,
        type: this.type,
        targeting: this.targeting,
        inViewPercentage: this.inViewPercentage,
        visibility: visibilityResults.visibility || 0,
        distance: visibilityResults.distance || Infinity,
        sizes: this.sizes
      };
    }
  }, {
    key: "setMetaData",
    value: function setMetaData(key, value) {
      this._meta[key] = value;
    }
  }, {
    key: "getMetaData",
    value: function getMetaData(key) {
      return this._meta[key];
    }
  }, {
    key: "removeMetaData",
    value: function removeMetaData(key) {
      delete this._meta[key];
    }
  }, {
    key: "clearTargetingAfterRefresh",
    value: function clearTargetingAfterRefresh(arrayOfKeys) {
      var _this$_clearTargeting;

      if (!Array.isArray(arrayOfKeys)) return;

      (_this$_clearTargeting = this._clearTargetingAfterRefresh).push.apply(_this$_clearTargeting, DFPAdSlot_toConsumableArray(arrayOfKeys));
    }
  }, {
    key: "resetSlot",
    value: function resetSlot() {
      this.removeMetaData('creativeLoaded');
      this._creative = {};
      this._inViewPercentage = 0;
      this._impressionViewable = false;
    }
  }, {
    key: "refresh",
    value: function refresh() {
      var additionalTargeting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var _window = window,
          googletag = _window.googletag;
      var DFPSlot = this._DFPSlot;
      var oldTargeting = DFPSlot.getTargetingMap();
      Object.keys(additionalTargeting).forEach(function (key) {
        DFPSlot.setTargeting(key, additionalTargeting[key]);
      });
      consolv.log('DFP: Direct Slot Refresh', this);
      googletag.pubads().refresh([DFPSlot]);
      Object.keys(additionalTargeting).forEach(function (key) {
        if (oldTargeting[key]) {
          DFPSlot.setTargeting(key, additionalTargeting[key]);
        } else {
          DFPSlot.clearTargeting(key);
        }
      });
      this.resetSlot();
    }
  }, {
    key: "destroy",
    value: function destroy() {
      var _window2 = window,
          googletag = _window2.googletag;
      googletag.destroySlots([this._DFPSlot]);
    }
  }, {
    key: "DFPSlot",
    get: function get() {
      return this._DFPSlot;
    }
  }, {
    key: "element",
    get: function get() {
      return this._element;
    }
  }, {
    key: "creative",
    get: function get() {
      return this._creative;
    }
  }, {
    key: "meta",
    get: function get() {
      return this._meta;
    }
  }, {
    key: "id",
    get: function get() {
      return this._id;
    }
  }, {
    key: "type",
    get: function get() {
      return this._type;
    }
  }, {
    key: "targeting",
    get: function get() {
      return this._DFPSlot.getTargetingMap();
    }
  }, {
    key: "inViewPercentage",
    get: function get() {
      return this._inViewPercentage;
    }
  }, {
    key: "impressionViewable",
    get: function get() {
      return this._impressionViewable;
    }
  }, {
    key: "visibility",
    get: function get() {
      return elementVisibility(this.element).visibility || 0;
    }
  }, {
    key: "distanceFromViewport",
    get: function get() {
      return elementVisibility(this.element).distance;
    }
  }, {
    key: "sizes",
    get: function get() {
      var sizes = [];

      var slotSizes = this._DFPSlot.getSizes();

      for (var i = 0; i < slotSizes.length; i += 1) {
        if (slotSizes[i] === 'fluid') {
          sizes.push([Infinity, Infinity]);
        } else {
          sizes.push([slotSizes[i].getWidth(), slotSizes[i].getHeight()]);
        }
      }

      return sizes;
    }
  }, {
    key: "sizeMap",
    get: function get() {
      var breakpointSize = getBreakpointSize(window, this._MCP._breakpoints);

      var _this$_MCP$Configurat = this._MCP.Configurator.getConfiguration(),
          _this$_MCP$Configurat2 = _this$_MCP$Configurat.slotDefinitions,
          slotDefinitions = _this$_MCP$Configurat2 === void 0 ? {} : _this$_MCP$Configurat2;

      var type = this.type;
      var sizeMap = slotDefinitions[type].sizes;
      var sizes = sizeMap && sizeMap.responsive && sizeMap.responsive[breakpointSize] || sizeMap["default"];
      return sizes.map(function (size) {
        return size === 'fluid' ? 'fluid' : size.split(',').map(function (v) {
          return Number(v);
        });
      });
    }
  }]);

  return DFPAdSlot;
}();


// CONCATENATED MODULE: ./src/MCP.js
function MCP_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { MCP_typeof = function _typeof(obj) { return typeof obj; }; } else { MCP_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return MCP_typeof(obj); }

function MCP_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function MCP_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { MCP_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { MCP_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function MCP_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function MCP_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { MCP_ownKeys(source, true).forEach(function (key) { MCP_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { MCP_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function MCP_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function MCP_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function MCP_createClass(Constructor, protoProps, staticProps) { if (protoProps) MCP_defineProperties(Constructor.prototype, protoProps); if (staticProps) MCP_defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (MCP_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function MCP_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function MCP_slicedToArray(arr, i) { return MCP_arrayWithHoles(arr) || MCP_iterableToArrayLimit(arr, i) || MCP_nonIterableRest(); }

function MCP_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function MCP_iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function MCP_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }









 // import elementVisibility from 'lib/elementVisibility';



/**
 * Converts an array of size strings into the format that DFP expects
 * @private
 * @param {Array<string>} sizes - Array of size strings to convert
 * @return {Array<Array<number>>} DFP compatible list of sizes
 */

function buildSizeMap(sizes) {
  if (!Array.isArray(sizes)) throw new Error('Source not an array');
  return sizes.map(function (size) {
    if (String(size).toLowerCase() === 'fluid') return 'fluid';
    var sizeArray = size.split(',');
    if (sizeArray.length !== 2) throw new Error('Wrong number of values');
    return sizeArray.map(function (item) {
      if (Number.isNaN(item)) throw new Error('Invalid value in array map');
      return Number(item);
    });
  });
}
/**
 * Takes an array of size strings a filters them based on max dimensions
 * @private
 * @param {Array<string> sizes - An array of comma delimited size dimensions
 * @param {Array<number>} maxSizes - An array containing a max width and height
 * @return {Array<string>} A filtered list of sizes
 */


function filterSizes(sizes, _ref) {
  var _ref2 = MCP_slicedToArray(_ref, 2),
      _ref2$ = _ref2[0],
      maxWidth = _ref2$ === void 0 ? 0 : _ref2$,
      _ref2$2 = _ref2[1],
      maxHeight = _ref2$2 === void 0 ? 0 : _ref2$2;

  return sizes.filter(function (wh) {
    var _wh$split$map = wh.split(',').map(function (v) {
      return Number(v);
    }),
        _wh$split$map2 = MCP_slicedToArray(_wh$split$map, 2),
        width = _wh$split$map2[0],
        height = _wh$split$map2[1];

    if (maxWidth > 0 && width > maxWidth) return false;
    if (maxHeight > 0 && height > maxHeight) return false;
    return true;
  });
}
/**
 * Builds the responsive mapping for the ad slot sizes according to the sites breakpoints
 * @private
 * @param {SizeMapping} breakpoints - List of page breakpoint sizes
 * @param {SizeMapping} sizeMapping - List of slot sizes, by breakpoint size
 * @return {SizeMapping}
 */


function buildResponsiveSizeMap(breakpoints, sizeMapping) {
  var SizeMappingBuilder = window.googletag.sizeMapping;
  var mapping = SizeMappingBuilder();
  Object.keys(breakpoints).forEach(function (key) {
    var breakpoint = Array.isArray(breakpoints[key]) ? breakpoints[key] : String(breakpoints[key]).split(',');
    mapping.addSize(breakpoint, buildSizeMap(sizeMapping[key]));
  });
  return mapping.build();
}
/**
 * This is the primary ad library class. Most interaction with the ad library will be done through
 * the class properties.
 *
 * This class is automatically instantiated and is accessible via the window.DatMCP object.
 * @example
 * window.DatMCP.appendSlot('#dfp_bigbox', { type: 'dfp_bigbox' });
 */


var MCP_MCP =
/*#__PURE__*/
function (_EventClass) {
  _inherits(MCP, _EventClass);

  /**
   * @private
   */

  /**
   * A Map object of slots indexed by the Node object of the slot container.
   */

  /**
   * @private
   */
  function MCP(_ref3) {
    var _this;

    var sourceOfTruth = _ref3.sourceOfTruth,
        rules = _ref3.rules,
        hierarchyFn = _ref3.hierarchyFn,
        networks = _ref3.networks,
        selectedNetwork = _ref3.selectedNetwork,
        config = _objectWithoutProperties(_ref3, ["sourceOfTruth", "rules", "hierarchyFn", "networks", "selectedNetwork"]);

    MCP_classCallCheck(this, MCP);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(MCP).call(this));
    /* eslint-disable no-underscore-dangle */

    MCP_defineProperty(_assertThisInitialized(_this), "_sourceOfTruth", void 0);

    MCP_defineProperty(_assertThisInitialized(_this), "_setup", void 0);

    MCP_defineProperty(_assertThisInitialized(_this), "_isLoaded", false);

    MCP_defineProperty(_assertThisInitialized(_this), "_isReady", false);

    MCP_defineProperty(_assertThisInitialized(_this), "_hasError", false);

    MCP_defineProperty(_assertThisInitialized(_this), "_additionalTargeting", {});

    MCP_defineProperty(_assertThisInitialized(_this), "_rules", []);

    MCP_defineProperty(_assertThisInitialized(_this), "_config", void 0);

    MCP_defineProperty(_assertThisInitialized(_this), "_hierarchyFn", function () {});

    MCP_defineProperty(_assertThisInitialized(_this), "_pageTargetingFn", function () {});

    MCP_defineProperty(_assertThisInitialized(_this), "_params", void 0);

    MCP_defineProperty(_assertThisInitialized(_this), "_networks", void 0);

    MCP_defineProperty(_assertThisInitialized(_this), "_selectedNetwork", void 0);

    MCP_defineProperty(_assertThisInitialized(_this), "_breakpoints", void 0);

    MCP_defineProperty(_assertThisInitialized(_this), "_overlaySelectors", void 0);

    MCP_defineProperty(_assertThisInitialized(_this), "utilities", {});

    MCP_defineProperty(_assertThisInitialized(_this), "Configurator", void 0);

    MCP_defineProperty(_assertThisInitialized(_this), "slots", void 0);

    MCP_defineProperty(_assertThisInitialized(_this), "ready", void 0);

    MCP_defineProperty(_assertThisInitialized(_this), "loaded", void 0);

    MCP_defineProperty(_assertThisInitialized(_this), "_resolveReady", void 0);

    MCP_defineProperty(_assertThisInitialized(_this), "_rejectReady", void 0);

    _assertThisInitialized(_this)._setupDependencies = _this._setupDependencies.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this)._applyGPTSettings = _this._applyGPTSettings.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this)._enableGPTServices = _this._enableGPTServices.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this)._applyPageTargeting = _this._applyPageTargeting.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this)._resolveSlotReference = _this._resolveSlotReference.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this)._defineAdSlot = _this._defineAdSlot.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this)._handleSlotVisibilityChanged = _this._handleSlotVisibilityChanged.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this)._handleImpressionViewable = _this._handleImpressionViewable.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this)._handleSlotRenderEnded = _this._handleSlotRenderEnded.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this)._updateSlotMeta = _this._updateSlotMeta.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this).getSlot = _this.getSlot.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this).appendSlot = _this.appendSlot.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this).refreshSlot = _this.refreshSlot.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this).refreshSlots = _this.refreshSlots.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this).pruneOrphanSlots = _this.pruneOrphanSlots.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this).getHierarchy = _this.getHierarchy.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this).getPageTargeting = _this.getPageTargeting.bind(_assertThisInitialized(_this));
    _assertThisInitialized(_this).initialize = _this.initialize.bind(_assertThisInitialized(_this));
    /* eslint-enable no-underscore-dangle */

    _this._config = config;
    _this._hierarchyFn = hierarchyFn;
    _this._networks = networks;
    _this.utilities = MCP_objectSpread({}, _this.utilities, {}, slotUtilities);
    _this.slots = new Map();
    _this.ready = new Promise(function (resolve, reject) {
      _this._resolveReady = resolve;
      _this._rejectReady = reject;
    }); // TODO: Change all references to this._setup to this.loaded throughout the library

    _this._setup = _this._setupDependencies({
      sourceOfTruth: sourceOfTruth,
      rules: rules
    });
    _this.loaded = _this._setup;
    return _this;
  }
  /**
   * Set to true once the ad library is ready to accept commands.
   * @type {boolean}
   */


  MCP_createClass(MCP, [{
    key: "getOption",
    value: function getOption(optionKey) {
      var config = this.Configurator.getConfiguration();
      return config.options && config.options[optionKey];
    }
    /**
     * Waits for async functions to complete before finishing the initialization process
     */

  }, {
    key: "_setupDependencies",
    value: function () {
      var _setupDependencies2 = MCP_asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee(_ref4) {
        var rules, sourceOfTruth, _ref5, _ref6, sourceOfTruthRes, rulesRes, meta, _this$Configurator$ge, dfpEnvironment;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                rules = _ref4.rules, sourceOfTruth = _ref4.sourceOfTruth;
                _context.prev = 1;
                loadGPTLibrary(); // Wait for all three promises in any order instead of one at a time

                _context.next = 5;
                return Promise.all([sourceOfTruth, rules]);

              case 5:
                _ref5 = _context.sent;
                _ref6 = MCP_slicedToArray(_ref5, 2);
                sourceOfTruthRes = _ref6[0];
                rulesRes = _ref6[1];
                this._sourceOfTruth = sourceOfTruthRes;
                this._rules = rulesRes;
                meta = this._sourceOfTruth.meta;
                this.Configurator = new lib_Configurator(this._rules, meta);
                _this$Configurator$ge = this.Configurator.getConfiguration(), dfpEnvironment = _this$Configurator$ge.dfpEnvironment;
                this._selectedNetwork = dfpEnvironment;
                this._isLoaded = true;
                this.dispatchEvent('loaded');
                return _context.abrupt("return", this);

              case 20:
                _context.prev = 20;
                _context.t0 = _context["catch"](1);
                consolv.error(_context.t0);
                throw new Error('MCP002 Dependency Error');

              case 24:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[1, 20]]);
      }));

      function _setupDependencies(_x) {
        return _setupDependencies2.apply(this, arguments);
      }

      return _setupDependencies;
    }()
  }, {
    key: "_applyGPTSettings",
    value: function _applyGPTSettings() {
      var _window = window,
          googletag = _window.googletag;
      var _this$Configurator$ge2 = this.Configurator.getConfiguration().gpt,
          _this$Configurator$ge3 = _this$Configurator$ge2.collapseEmptyDivs,
          collapseEmptyDivs = _this$Configurator$ge3 === void 0 ? true : _this$Configurator$ge3,
          _this$Configurator$ge4 = _this$Configurator$ge2.singleRequestMode,
          singleRequestMode = _this$Configurator$ge4 === void 0 ? true : _this$Configurator$ge4,
          _this$Configurator$ge5 = _this$Configurator$ge2.centerAds,
          centerAds = _this$Configurator$ge5 === void 0 ? true : _this$Configurator$ge5,
          _this$Configurator$ge6 = _this$Configurator$ge2.disableInitialLoad,
          disableInitialLoad = _this$Configurator$ge6 === void 0 ? true : _this$Configurator$ge6;
      /* eslint-disable prefer-arrow-callback */

      googletag.cmd.push(function applyGPTSettings() {
        var pubads = googletag.pubads();
        if (collapseEmptyDivs) pubads.collapseEmptyDivs(true);
        if (singleRequestMode) pubads.enableSingleRequest();
        if (centerAds) pubads.setCentering(true);
        if (disableInitialLoad) pubads.disableInitialLoad();
      });
      /* eslint-enable prefer-arrow-callback */
    }
    /* eslint-disable class-methods-use-this */

  }, {
    key: "_enableGPTServices",
    value: function _enableGPTServices() {
      var _window2 = window,
          googletag = _window2.googletag;
      /* eslint-disable prefer-arrow-callback */

      window.googletag.cmd.push(function enableGPTServices() {
        googletag.enableServices();
      });
      /* eslint-enable prefer-arrow-callback */
    }
    /* eslint-enable class-methods-use-this */

  }, {
    key: "_handleSlotRenderEnded",
    value: function _handleSlotRenderEnded(e) {
      /* eslint-disable no-unused-vars */
      var dfpSlot = Array.from(this.slots.values()).find(function (slot) {
        return slot.DFPSlot === e.slot;
      });
      /* eslint-enable no-unused-vars */

      if (dfpSlot) {
        dfpSlot.handleSlotRenderEnded(e);

        this._updateSlotMeta(dfpSlot);

        this.dispatchEvent('slotCreativeLoaded', {
          slot: dfpSlot
        });
      }

      this.dispatchEvent('slotRenderEnded', {
        originalEvent: e
      });
    }
  }, {
    key: "_handleSlotVisibilityChanged",
    value: function _handleSlotVisibilityChanged(e) {
      /* eslint-disable no-unused-vars */
      var dfpSlot = Array.from(this.slots.values()).find(function (slot) {
        return slot.DFPSlot === e.slot;
      });
      /* eslint-enable no-unused-vars */

      if (dfpSlot) dfpSlot.handleSlotVisibilityChanged(e);
      this.dispatchEvent('slotVisibilityChanged', {
        originalEvent: e
      });
    }
  }, {
    key: "_handleImpressionViewable",
    value: function _handleImpressionViewable(e) {
      /* eslint-disable no-unused-vars */
      var dfpSlot = Array.from(this.slots.values()).find(function (slot) {
        return slot.DFPSlot === e.slot;
      });
      /* eslint-enable no-unused-vars */

      if (dfpSlot) dfpSlot.handleImpressionViewable(e);
      this.dispatchEvent('impressionViewable', {
        originalEvent: e
      });
    }
  }, {
    key: "_bindGPTListeners",
    value: function _bindGPTListeners() {
      var _window3 = window,
          googletag = _window3.googletag;
      var _handleSlotRenderEnded = this._handleSlotRenderEnded,
          _handleSlotVisibilityChanged = this._handleSlotVisibilityChanged,
          _handleImpressionViewable = this._handleImpressionViewable;
      /* eslint-disable prefer-arrow-callback */

      googletag.cmd.push(function bindGPTListeners() {
        var pubads = googletag.pubads();
        pubads.addEventListener('slotRenderEnded', _handleSlotRenderEnded);
        pubads.addEventListener('slotVisibilityChanged', _handleSlotVisibilityChanged);
        pubads.addEventListener('impressionViewable', _handleImpressionViewable);
      });
      /* eslint-enable prefer-arrow-callback */
    }
  }, {
    key: "_applyPageTargeting",
    value: function _applyPageTargeting() {
      var _window4 = window,
          googletag = _window4.googletag;
      var pageTargeting = this.getPageTargeting(); // TODO: Unset unused keys in case this function is updating new targeting

      /* eslint-disable prefer-arrow-callback */

      googletag.cmd.push(function applyPageTargeting() {
        Object.keys(pageTargeting).forEach(function (key) {
          var value = pageTargeting[key];

          if (value !== undefined && value.length) {
            googletag.pubads().setTargeting(key, value);
          }
        });
      });
      /* eslint-enable prefer-arrow-callback */
    }
  }, {
    key: "_resolveSlotReference",
    value: function _resolveSlotReference(slotReference) {
      if (slotReference instanceof DFPAdSlot_DFPAdSlot) return slotReference;
      if (MCP_typeof(slotReference) === 'object' && slotReference.enabled === false) return null;
      var element = typeof slotReference === 'string' ? document.querySelector(slotReference) : slotReference; // Omitted the instanceof check because for some reason it's sometimes returning false when
      // the element IS a valid DOM element.
      // if (element instanceof Element) {
      //  return this.slots.get(element);
      // }

      var slot = this.slots.get(element);
      if (slot) return slot;
      return null; // throw new Error('MCPxxx: Invalid ad slot reference.');
    }
    /**
     * Handles the actual slot defining functionality
     */

  }, {
    key: "_defineAdSlot",
    value: function _defineAdSlot(slotType, element) {
      var _this2 = this;

      return new Promise(function (resolve) {
        var _window5 = window,
            googletag = _window5.googletag;
        var slots = _this2.slots,
            _breakpoints = _this2._breakpoints,
            _updateSlotMeta = _this2._updateSlotMeta;

        var _this2$Configurator$g = _this2.Configurator.getConfiguration(),
            slotDefinitions = _this2$Configurator$g.slotDefinitions;

        var _element$dataset = element.dataset,
            slotMaxHeight = _element$dataset.slotMaxHeight,
            slotMaxWidth = _element$dataset.slotMaxWidth,
            slotMaxSize = _element$dataset.slotMaxSize;
        var maxSize = [0, 0];

        function createEmptySlot() {
          var slot = {
            enabled: false
          };
          slots.set(element, slot);
          resolve(slot);
        }

        if (_this2.slots.get(element)) {
          consolv.log('MCP: Slot already defined', element);
          return;
        }

        var slotDefinition = slotDefinitions[slotType]; // Bail if the slot is explicitly disabled

        if (!slotDefinition || slotDefinition.enabled === false) {
          createEmptySlot();
          return;
        }

        if (!slotDefinition.sizes || !slotDefinition.sizes["default"]) {
          consolv.log("MCPxxx: Slot type \"".concat(slotType, "\" not configured."));
          createEmptySlot();
          return;
        } // Limit slot sizes if explicitly set on DOM element


        if (typeof slotMaxSize !== 'undefined') {
          maxSize = slotMaxSize.split(',').map(function (v) {
            return Number(v);
          });
        }

        if (typeof slotMaxWidth !== 'undefined') maxSize[0] = Number(slotMaxWidth);
        if (typeof slotMaxHeight !== 'undefined') maxSize[1] = Number(slotMaxHeight);

        var slotSizes = MCP_objectSpread({}, slotDefinition.sizes);

        if (maxSize[0] > 0 || maxSize[1] > 0) {
          if (slotSizes["default"]) slotSizes["default"] = filterSizes(slotSizes["default"], maxSize);

          if (slotSizes.responsive) {
            var responsiveSizes = MCP_objectSpread({}, slotSizes.responsive);

            Object.keys(responsiveSizes).forEach(function (sizeKey) {
              responsiveSizes[sizeKey] = filterSizes(responsiveSizes[sizeKey], maxSize);
            });
            slotSizes.responsive = responsiveSizes;
          }
        }

        var slotMeta = MCP_objectSpread({}, slotDefinition, {
          slotType: slotType,
          maxSize: maxSize,
          sizes: slotSizes
        });

        _this2.dispatchEvent('beforeDefineSlot', {
          meta: {
            slot: slotMeta
          }
        });

        var hierarchy = _this2.getHierarchy(slotMeta);

        var _MCP = _this2;
        /* eslint-disable prefer-arrow-callback */

        googletag.cmd.push(function defineAdSlot() {
          /* eslint-disable-next-line no-param-reassign */
          if (!element.id) element.id = uniqueId(slotType);
          var currentSlot = googletag.defineSlot(hierarchy, buildSizeMap(slotSizes["default"]), element.id); // TODO: currentSlot empty sometimes?
          // if (!currentSlot) throw new Error('MCPxxx: Error creating new slot with DFP library.');

          if (!currentSlot) {
            consolv.log('MCP: Problem creating ad slot');
            return;
          } // Builds out a size map that is responive to the breakpoints set when the site initializes
          // the library
          //


          if (_breakpoints && slotSizes.responsive) {
            var responsiveMap = buildResponsiveSizeMap(_breakpoints, slotSizes.responsive);
            currentSlot.defineSizeMapping(responsiveMap);
          }

          currentSlot.setTargeting('tagname', slotType);
          currentSlot.addService(googletag.pubads());
          var slot = new DFPAdSlot_DFPAdSlot({
            MCP: _MCP,
            slot: currentSlot,
            element: element,
            type: slotType,
            meta: slotMeta
          });

          _updateSlotMeta(slot);

          slots.set(element, slot);
          resolve(slot);
        });
        /* eslint-enable prefer-arrow-callback */
      });
    }
    /**
     * Updates meta data on specified slot
     * @private
     */

  }, {
    key: "_updateSlotMeta",
    value: function _updateSlotMeta(slot) {
      var slotData = {
        slot: slot.toPlainObject()
      };
      var meta = this.Configurator.getConfiguration({
        meta: slotData
      });
      Object.keys(meta).forEach(function (key) {
        slot.setMetaData(key, meta[key]);
      });
    }
    /**
     * Interates over all defined slots and destroys and prunes any slots whose elements are no
     * longer attached to the DOM.
     */

  }, {
    key: "pruneOrphanSlots",
    value: function pruneOrphanSlots() {
      var _this3 = this;

      this.slots.forEach(function (slot, element) {
        if (!window.document.body.contains(element)) {
          if (slot && slot.destroy) slot.destroy();

          _this3.slots["delete"](element);

          consolv.log('MCP: Pruned orphan slot', element);
        }
      });
    }
    /**
     * Returns the current page's hierarchy or site section
     * @return {Array<string>}
     */

  }, {
    key: "getHierarchy",
    value: function getHierarchy(slotMeta) {
      var otherMeta = this._sourceOfTruth.meta;
      var network = this._networks[this._selectedNetwork];
      if (!network) throw new Error('MCPxxx: Invalid network');

      var meta = MCP_objectSpread({}, otherMeta, {
        slot: slotMeta,
        network: network
      });

      return evaluateFn(this._hierarchyFn, meta);
    }
    /**
     * Returns the current page's targeting parameters
     * @return {SlotTargeting}
     */

  }, {
    key: "getPageTargeting",
    value: function getPageTargeting() {
      var _this$Configurator$ge7 = this.Configurator.getConfiguration(),
          _this$Configurator$ge8 = _this$Configurator$ge7.targetingWhitelist,
          targetingWhitelist = _this$Configurator$ge8 === void 0 ? [] : _this$Configurator$ge8;

      var meta = this._sourceOfTruth.meta;
      return src_getPageTargeting(targetingWhitelist, meta);
    }
    /**
     * Sets targeting for the page
     */

    /* eslint-disable prefer-arrow-callback,class-methods-use-this */

  }, {
    key: "setPageTargeting",
    value: function setPageTargeting(pageTargeting) {
      window.googletag.cmd.push(function applyPageTargeting() {
        Object.keys(pageTargeting).forEach(function (key) {
          var value = pageTargeting[key];

          if (value !== undefined && value.length) {
            window.googletag.pubads().setTargeting(key, value);
          }
        });
      });
    }
    /* eslint-enable prefer-arrow-callback,class-methods-use-this */

    /**
     * Appends an ad slot to the page after the initial page load
     * @param {SlotReference} element - DOM node for which to append the slot
     * @param {Object} [options] - Options that can be set on the appended slot
     * @param {string} [options.type] - The type of slot to append
     * @param {SlotTargeting} [options.additionalTargeting={}] - Additional targeting to add to the
     * slot refresh
     * @param {boolean} [options.load=true] - Allow the slot to load automatically
     * @return {Promise<DFPAdSlot, Error>}
     */

  }, {
    key: "appendSlot",
    value: function () {
      var _appendSlot = MCP_asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee2(element, _ref7) {
        var type, _ref7$additionalTarge, additionalTargeting, _ref7$lazyLoad, lazyLoad, _ref7$immediatelyLoad, immediatelyLoad, elementRef, slot, beforeEventParams;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                type = _ref7.type, _ref7$additionalTarge = _ref7.additionalTargeting, additionalTargeting = _ref7$additionalTarge === void 0 ? {} : _ref7$additionalTarge, _ref7$lazyLoad = _ref7.lazyLoad, lazyLoad = _ref7$lazyLoad === void 0 ? false : _ref7$lazyLoad, _ref7$immediatelyLoad = _ref7.immediatelyLoad, immediatelyLoad = _ref7$immediatelyLoad === void 0 ? true : _ref7$immediatelyLoad;
                _context2.next = 3;
                return this.ready;

              case 3:
                if (this.Configurator.getConfiguration().autoPruneOrphans) this.pruneOrphanSlots();
                elementRef = typeof element === 'string' ? document.getElementById(element) : element;

                if (elementRef) {
                  _context2.next = 7;
                  break;
                }

                return _context2.abrupt("return", new Error('MCPxxx: Invalid element reference'));

              case 7:
                _context2.next = 9;
                return this._defineAdSlot(type, elementRef);

              case 9:
                slot = _context2.sent;

                if (slot) {
                  _context2.next = 12;
                  break;
                }

                return _context2.abrupt("return", null);

              case 12:
                beforeEventParams = this.dispatchEvent('beforeAppendSlot', {
                  immediatelyLoad: immediatelyLoad,
                  slots: new Map([[elementRef, slot]])
                });

                if (!beforeEventParams.defaultPrevented) {
                  _context2.next = 15;
                  break;
                }

                return _context2.abrupt("return", slot);

              case 15:
                _context2.next = 17;
                return beforeEventParams.asyncEvents;

              case 17:
                Object.entries(additionalTargeting).forEach(function (_ref8) {
                  var _ref9 = MCP_slicedToArray(_ref8, 2),
                      key = _ref9[0],
                      value = _ref9[1];

                  slot.setTargeting(key, value);
                });
                if (immediatelyLoad === true) slot.refresh(); // this._updateSlotMeta(slot);

                consolv.log('MCP: Slot Appended', slot);
                this.dispatchEvent('slotCreated', {
                  slot: slot,
                  initialRequest: false
                });
                return _context2.abrupt("return", slot);

              case 22:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function appendSlot(_x2, _x3) {
        return _appendSlot.apply(this, arguments);
      }

      return appendSlot;
    }()
    /**
     * Refreshes an ad slot by finding slot through various types of references
     * @param {SlotReference} slotReference - Reference to the target slot
     * the refresh.
     * @return Promise<DFPAdSlot, Error>
     */

  }, {
    key: "refreshSlot",
    value: function refreshSlot(slotReference) {
      return this.refreshSlots([slotReference]);
    }
    /**
     * Refreshes multiple slots with a single ad request to allow for companion ads to be loaded
     * @param {Array<SlotReference>} slotReferences - List of slot references to refresh
     * @return Promise<DFPAdSlot, Error>
     */

  }, {
    key: "refreshSlots",
    value: function () {
      var _refreshSlots = MCP_asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee3(slotsReference) {
        var _this4 = this;

        var slots, beforeEventParams, nativeSlots;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.prev = 0;
                slots = slotsReference.reduce(function (acc, slotReference) {
                  var slot = _this4._resolveSlotReference(slotReference);

                  if (slot) {
                    acc.set(slot.element, slot);
                  } // else if (!(slot instanceof DFPAdSlot)) {
                  //   consolv.error('MCP: Not a valid slot reference', slotReference);
                  // }


                  return acc;
                }, new Map());
                beforeEventParams = this.dispatchEvent('beforeRefreshSlots', {
                  slots: slots
                });

                if (!beforeEventParams.defaultPrevented) {
                  _context3.next = 5;
                  break;
                }

                return _context3.abrupt("return", null);

              case 5:
                _context3.next = 7;
                return beforeEventParams.asyncEvents;

              case 7:
                nativeSlots = Array.from(slots).map(function (_ref10) {
                  var _ref11 = MCP_slicedToArray(_ref10, 2),
                      element = _ref11[0],
                      slot = _ref11[1];

                  return slot._DFPSlot;
                });
                window.googletag.pubads().refresh(nativeSlots);
                slots.forEach(function (slot) {
                  slot.resetSlot();
                });
                consolv.log('MCP: Refresh Slots', slots);
                this.dispatchEvent('afterRefreshlots', {
                  slots: slots
                });
                return _context3.abrupt("return", true);

              case 15:
                _context3.prev = 15;
                _context3.t0 = _context3["catch"](0);
                consolv.error(_context3.t0);
                return _context3.abrupt("return", null);

              case 19:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[0, 15]]);
      }));

      function refreshSlots(_x4) {
        return _refreshSlots.apply(this, arguments);
      }

      return refreshSlots;
    }()
    /**
     * Returns an ad slot object from a query selector or Element reference.
     * @param {ElementReference} elementReference - Reference to an ad slot
     * @return {DFPAdSlot}
     */

  }, {
    key: "getSlot",
    value: function getSlot(elementReference) {
      return this._resolveSlotReference(elementReference);
    }
    /**
     * Starts the initialization of the ad request
     * @param {object} [options] - List of options related to the ad library
     * @param {SlotTargeting} [options.additionalTargeting] - Additional targeting to apply to all
     *  slots. Returns a promise that resolves once the ad library has fully initialized.
     * @param {string} [options.selectedNetwork] - Optionally force the library to use a specific
     *  network
     * @param {SizeMapping} [options.breakpoints] - Optional list of page breakpoints
     * @return {Promise<this>}
     */

  }, {
    key: "initialize",
    value: function () {
      var _initialize = MCP_asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee4() {
        var _ref12,
            additionalTargeting,
            selectedNetwork,
            breakpoints,
            overlaySelectors,
            dfpEnv,
            defaultConfiguration,
            configuration,
            _args4 = arguments;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _ref12 = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {}, additionalTargeting = _ref12.additionalTargeting, selectedNetwork = _ref12.selectedNetwork, breakpoints = _ref12.breakpoints, overlaySelectors = _ref12.overlaySelectors, dfpEnv = _ref12.dfpEnv;
                _context4.next = 3;
                return this._setup;

              case 3:
                if (selectedNetwork) this._selectedNetwork = selectedNetwork; // Fix so sites can specify which environment they need

                if (dfpEnv === 'staging') this._selectedNetwork = 'staging';
                defaultConfiguration = {
                  overlaySelectors: Array.isArray(overlaySelectors) ? overlaySelectors : [overlaySelectors]
                };
                configuration = this.Configurator.getConfiguration(defaultConfiguration);
                this._overlaySelectors = configuration.overlaySelectors || [];
                this.additionalTargeting = additionalTargeting;
                this._breakpoints = breakpoints;

                this._applyGPTSettings();

                this._bindGPTListeners();

                this._applyPageTargeting();

                this._enableGPTServices();

                this.dispatchEvent('initialized');

                if (!this.isReady) {
                  this._resolveReady(this);

                  this._isReady = true;
                  this.dispatchEvent('ready');
                }

                return _context4.abrupt("return", this);

              case 17:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function initialize() {
        return _initialize.apply(this, arguments);
      }

      return initialize;
    }()
    /**
     * Signifies that content on the page has changed, old slots should be pruned, and we should look
     * for new slots
     * @param {Element} [parentElement] - Reference to a container element containing content that
     *  has changed
     * @param {boolean} [shouldUpdateCorrelator] - Whether to consider this a new page. Useful for
     * SPA and infinite scroll pages
     */

  }, {
    key: "update",
    value: function () {
      var _update = MCP_asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee5() {
        var parentElement,
            shouldUpdateCorrelator,
            _window6,
            googletag,
            _args5 = arguments;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                parentElement = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : null;
                shouldUpdateCorrelator = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : false;
                _window6 = window, googletag = _window6.googletag;
                _context5.next = 5;
                return this._sourceOfTruth.refresh();

              case 5:
                if (shouldUpdateCorrelator) googletag.pubads().updateCorrelator();
                this.pruneOrphanSlots();
                this.dispatchEvent('contentUpdated', {
                  parentElement: parentElement
                });

              case 8:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function update() {
        return _update.apply(this, arguments);
      }

      return update;
    }()
  }, {
    key: "isLoaded",
    get: function get() {
      return this._isLoaded;
    }
    /**
     * @private
     * Set to true once the ad library is ready to accept commands.
     * @type {boolean}
     */

  }, {
    key: "isReady",
    get: function get() {
      return this._isReady;
    }
    /**
     * Set to true when an unhandled error occurs in the ad library.
     * @return {boolean}
     */

  }, {
    key: "hasError",
    get: function get() {
      return this._hasError;
    }
  }, {
    key: "version",
    get: function get() {
      /* eslint-disable-next-line class-methods-use-this */
      return {"NODE_ENV":"production","version":"3.24.1","libraryName":"Master Control Program","endpoints":{"configuration":"https://code.adsales.snidigital.com/datmcp/3/mcp-configuration.json"},"dfpEnvironment":"staging","dfpNetworks":{"production":"109359770","staging":"201823409","golf-prod":"21849421099"},"slotConfigurationEndpoint":"https://bmxocid8k6.execute-api.us-east-1.amazonaws.com/v1/{lineItemId}/","libraryRemotePath":"code.adsales.snidigital.com/datmcp"}.version;
    }
  }]);

  return MCP;
}(EventClass["a" /* default */]);

/* harmony default export */ var src_MCP = (MCP_MCP);
// EXTERNAL MODULE: ./src/lib/TickClass.js
var TickClass = __webpack_require__(29);

// CONCATENATED MODULE: ./src/lib/BrowserActivity/BrowserVisibility.js
function BrowserVisibility_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { BrowserVisibility_typeof = function _typeof(obj) { return typeof obj; }; } else { BrowserVisibility_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return BrowserVisibility_typeof(obj); }

function BrowserVisibility_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function BrowserVisibility_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { BrowserVisibility_ownKeys(source, true).forEach(function (key) { BrowserVisibility_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { BrowserVisibility_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function BrowserVisibility_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function BrowserVisibility_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function BrowserVisibility_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function BrowserVisibility_createClass(Constructor, protoProps, staticProps) { if (protoProps) BrowserVisibility_defineProperties(Constructor.prototype, protoProps); if (staticProps) BrowserVisibility_defineProperties(Constructor, staticProps); return Constructor; }

function BrowserVisibility_possibleConstructorReturn(self, call) { if (call && (BrowserVisibility_typeof(call) === "object" || typeof call === "function")) { return call; } return BrowserVisibility_assertThisInitialized(self); }

function BrowserVisibility_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = BrowserVisibility_getPrototypeOf(object); if (object === null) break; } return object; }

function BrowserVisibility_getPrototypeOf(o) { BrowserVisibility_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return BrowserVisibility_getPrototypeOf(o); }

function BrowserVisibility_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) BrowserVisibility_setPrototypeOf(subClass, superClass); }

function BrowserVisibility_setPrototypeOf(o, p) { BrowserVisibility_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return BrowserVisibility_setPrototypeOf(o, p); }


/**
 * Monitors whether the browser window is in focus and current document is active
 */

var BrowserVisibility =
/*#__PURE__*/
function (_EventClass) {
  BrowserVisibility_inherits(BrowserVisibility, _EventClass);

  /**
   * @param  {object} config - configuration object to set specific settings in the instance
   * @param {object} ...params - object of the rest of the parameters to easily pass to
   * super consturctor
   */
  function BrowserVisibility() {
    var _getPrototypeOf2;

    var _this;

    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    BrowserVisibility_classCallCheck(this, BrowserVisibility);

    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      params[_key - 1] = arguments[_key];
    }

    _this = BrowserVisibility_possibleConstructorReturn(this, (_getPrototypeOf2 = BrowserVisibility_getPrototypeOf(BrowserVisibility)).call.apply(_getPrototypeOf2, [this, config].concat(params)));
    BrowserVisibility_assertThisInitialized(_this).setupEventListeners = _this.setupEventListeners.bind(BrowserVisibility_assertThisInitialized(_this));
    BrowserVisibility_assertThisInitialized(_this).releaseEventListeners = _this.releaseEventListeners.bind(BrowserVisibility_assertThisInitialized(_this));
    BrowserVisibility_assertThisInitialized(_this).documentVisibilityChange = _this.documentVisibilityChange.bind(BrowserVisibility_assertThisInitialized(_this));
    BrowserVisibility_assertThisInitialized(_this).windowFocusEvent = _this.windowFocusEvent.bind(BrowserVisibility_assertThisInitialized(_this));
    BrowserVisibility_assertThisInitialized(_this).windowBlurEvent = _this.windowBlurEvent.bind(BrowserVisibility_assertThisInitialized(_this));
    BrowserVisibility_assertThisInitialized(_this).triggerStateChangeEvent = _this.triggerStateChangeEvent.bind(BrowserVisibility_assertThisInitialized(_this));
    _this._config = BrowserVisibility_objectSpread({}, config);
    _this._visibilityState = typeof document.hasFocus === 'function' ? document.hasFocus() : document.visibilityState === 'visible';

    _this.setupEventListeners();

    return _this;
  }
  /**
   * Setup event listeners that trigger active state changes
   * @private
   */


  BrowserVisibility_createClass(BrowserVisibility, [{
    key: "setupEventListeners",
    value: function setupEventListeners() {
      document.addEventListener('visibilitychange', this.documentVisibilityChange);
      window.addEventListener('focus', this._windowFocusEvent);
      window.addEventListener('blur', this._windowBlurEvent);
    }
    /**
     * Release event listeners that trigger active state changes
     * @private
     */

  }, {
    key: "releaseEventListeners",
    value: function releaseEventListeners() {
      document.removeEventListeners('visibilitychange', this.documentVisibilityChange);
      window.removeEventListener('focus', this._windowFocusEvent);
      window.removeEventListeners('blur', this._windowBlurEvent);
    }
    /**
     * Internal callback for document visibility change event
     * @private
     */

  }, {
    key: "documentVisibilityChange",
    value: function documentVisibilityChange() {
      this.triggerStateChangeEvent(document.visibilityState === 'visible', {
        srcEvent: 'documentVisibilityChange'
      });
    }
    /**
     * Internal callback for window focus event
     * @private
     */

  }, {
    key: "windowFocusEvent",
    value: function windowFocusEvent() {
      this.triggerStateChangeEvent(true, {
        srcEvent: 'windowFocus'
      });
    }
    /**
     * Internal callback for window blur event
     * @private
     */

  }, {
    key: "windowBlurEvent",
    value: function windowBlurEvent() {
      this.triggerStateChangeEvent(false, {
        srcEvent: 'windowBlur'
      });
    }
    /**
     * Common event creator for different event callbacks
     * @private
     * @param  {boolean} state - new active state
     * @param  {Object} extraParams - any other parameters that might need to be passed to callbacks
     */

  }, {
    key: "triggerStateChangeEvent",
    value: function triggerStateChangeEvent(state) {
      var extraParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this._visibilityState = state;
      this.dispatchEvent('statechange', this._visibilityState, extraParams);
    }
    /**
     * Get the current active state of the activity
     * @return {boolean}
     */

  }, {
    key: "unload",

    /**
     * Cleanup any event listeners and variable references so it can be cleanly released
     * @param  {...object} params - any unloading params that might be passed to super's
     * unload function
     */
    value: function unload() {
      var _get2;

      this.releaseEventListeners();

      for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        params[_key2] = arguments[_key2];
      }

      (_get2 = _get(BrowserVisibility_getPrototypeOf(BrowserVisibility.prototype), "unload", this)).call.apply(_get2, [this].concat(params));
    }
  }, {
    key: "active",
    get: function get() {
      this._visibilityState = typeof document.hasFocus === 'function' ? document.hasFocus() : document.visibilityState === 'visible';
      return this._visibilityState;
    }
  }]);

  return BrowserVisibility;
}(EventClass["a" /* default */]);

/* harmony default export */ var BrowserActivity_BrowserVisibility = (BrowserVisibility);
// CONCATENATED MODULE: ./src/lib/BrowserActivity/KeyboardActivity.js
function KeyboardActivity_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { KeyboardActivity_typeof = function _typeof(obj) { return typeof obj; }; } else { KeyboardActivity_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return KeyboardActivity_typeof(obj); }

function KeyboardActivity_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function KeyboardActivity_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { KeyboardActivity_ownKeys(source, true).forEach(function (key) { KeyboardActivity_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { KeyboardActivity_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function KeyboardActivity_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function KeyboardActivity_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function KeyboardActivity_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function KeyboardActivity_createClass(Constructor, protoProps, staticProps) { if (protoProps) KeyboardActivity_defineProperties(Constructor.prototype, protoProps); if (staticProps) KeyboardActivity_defineProperties(Constructor, staticProps); return Constructor; }

function KeyboardActivity_possibleConstructorReturn(self, call) { if (call && (KeyboardActivity_typeof(call) === "object" || typeof call === "function")) { return call; } return KeyboardActivity_assertThisInitialized(self); }

function KeyboardActivity_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function KeyboardActivity_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { KeyboardActivity_get = Reflect.get; } else { KeyboardActivity_get = function _get(target, property, receiver) { var base = KeyboardActivity_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return KeyboardActivity_get(target, property, receiver || target); }

function KeyboardActivity_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = KeyboardActivity_getPrototypeOf(object); if (object === null) break; } return object; }

function KeyboardActivity_getPrototypeOf(o) { KeyboardActivity_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return KeyboardActivity_getPrototypeOf(o); }

function KeyboardActivity_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) KeyboardActivity_setPrototypeOf(subClass, superClass); }

function KeyboardActivity_setPrototypeOf(o, p) { KeyboardActivity_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return KeyboardActivity_setPrototypeOf(o, p); }


/**
 * Monitors keyboard activity to determine whether the user is actively engaged
 */

var KeyboardActivity =
/*#__PURE__*/
function (_TickClass) {
  KeyboardActivity_inherits(KeyboardActivity, _TickClass);

  /**
   * @param  {object} config - configuration object to set specific settings in the instance
   * @param {object} ...params - object of the rest of the parameters to easily pass to
   * super consturctor
   */
  function KeyboardActivity(config) {
    var _getPrototypeOf2;

    var _this;

    KeyboardActivity_classCallCheck(this, KeyboardActivity);

    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      params[_key - 1] = arguments[_key];
    }

    _this = KeyboardActivity_possibleConstructorReturn(this, (_getPrototypeOf2 = KeyboardActivity_getPrototypeOf(KeyboardActivity)).call.apply(_getPrototypeOf2, [this, config].concat(params)));
    KeyboardActivity_assertThisInitialized(_this).setupEventListeners = _this.setupEventListeners.bind(KeyboardActivity_assertThisInitialized(_this));
    KeyboardActivity_assertThisInitialized(_this).resetIdle = _this.resetIdle.bind(KeyboardActivity_assertThisInitialized(_this));
    KeyboardActivity_assertThisInitialized(_this).tick = _this.tick.bind(KeyboardActivity_assertThisInitialized(_this));
    KeyboardActivity_assertThisInitialized(_this).releaseEventListeners = _this.releaseEventListeners.bind(KeyboardActivity_assertThisInitialized(_this));
    KeyboardActivity_assertThisInitialized(_this).browserKeyDown = _this.browserKeyDown.bind(KeyboardActivity_assertThisInitialized(_this));
    _this._config = KeyboardActivity_objectSpread({
      tolerance: 10
    }, _this._config, {}, config);
    _this._keyboardActiveState = true;
    _this._keyboardIdleTime = 0;

    _this.setupEventListeners();

    return _this;
  }
  /**
   * Setup event listeners that trigger active state changes
   * @private
   */


  KeyboardActivity_createClass(KeyboardActivity, [{
    key: "setupEventListeners",
    value: function setupEventListeners() {
      document.addEventListener('keydown', this.browserKeyDown);
    }
    /**
     * Release event listeners that trigger active state changes
     * @private
     */

  }, {
    key: "releaseEventListeners",
    value: function releaseEventListeners() {
      document.removeEventListeners('keydown', this.browserKeyDown);
    }
    /**
     * Increments the idle time every X milliseconds
     * @private
     */

  }, {
    key: "tick",
    value: function tick() {
      this._keyboardIdleTime += 1;

      if (this._keyboardActiveState && this._keyboardIdleTime >= this._config.tolerance) {
        this._keyboardActiveState = false;
        this.dispatchEvent('statechange', false);
      }
    }
    /**
     * Callback for keyDown listener
     * @private
     */

  }, {
    key: "browserKeyDown",
    value: function browserKeyDown() {
      this._keyboardIdleTime = 0;

      if (!this._keyboardActiveState) {
        this._keyboardActiveState = true;
        this.dispatchEvent('statechange', true);
      }
    }
    /**
     * Resets the idle to 0 or a specified number
     * @param  {Number} buffer - an optional number to set the idle to
     */

  }, {
    key: "resetIdle",
    value: function resetIdle() {
      var buffer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      this._keyboardIdleTime = buffer;
    }
    /**
     * Get the current active state of the activity
     * @return {boolean}
     */

  }, {
    key: "unload",

    /**
     * Cleanup any event listeners and variable references so it can be cleanly released
     * @param  {...Object} params - any unloading params that might be passed to super's
     * unload function
     */
    value: function unload() {
      var _get2;

      this._releaseEventListeners();

      for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        params[_key2] = arguments[_key2];
      }

      (_get2 = KeyboardActivity_get(KeyboardActivity_getPrototypeOf(KeyboardActivity.prototype), "unload", this)).call.apply(_get2, [this].concat(params));
    }
  }, {
    key: "active",
    get: function get() {
      return this._keyboardActiveState;
    }
  }]);

  return KeyboardActivity;
}(TickClass["a" /* default */]);

/* harmony default export */ var BrowserActivity_KeyboardActivity = (KeyboardActivity);
// CONCATENATED MODULE: ./src/lib/BrowserActivity/MouseActivity.js
function MouseActivity_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { MouseActivity_typeof = function _typeof(obj) { return typeof obj; }; } else { MouseActivity_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return MouseActivity_typeof(obj); }

function MouseActivity_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function MouseActivity_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { MouseActivity_ownKeys(source, true).forEach(function (key) { MouseActivity_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { MouseActivity_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function MouseActivity_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function MouseActivity_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function MouseActivity_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function MouseActivity_createClass(Constructor, protoProps, staticProps) { if (protoProps) MouseActivity_defineProperties(Constructor.prototype, protoProps); if (staticProps) MouseActivity_defineProperties(Constructor, staticProps); return Constructor; }

function MouseActivity_possibleConstructorReturn(self, call) { if (call && (MouseActivity_typeof(call) === "object" || typeof call === "function")) { return call; } return MouseActivity_assertThisInitialized(self); }

function MouseActivity_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function MouseActivity_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { MouseActivity_get = Reflect.get; } else { MouseActivity_get = function _get(target, property, receiver) { var base = MouseActivity_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return MouseActivity_get(target, property, receiver || target); }

function MouseActivity_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = MouseActivity_getPrototypeOf(object); if (object === null) break; } return object; }

function MouseActivity_getPrototypeOf(o) { MouseActivity_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return MouseActivity_getPrototypeOf(o); }

function MouseActivity_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) MouseActivity_setPrototypeOf(subClass, superClass); }

function MouseActivity_setPrototypeOf(o, p) { MouseActivity_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return MouseActivity_setPrototypeOf(o, p); }


/**
 * Monitors mouse activity to determine whether the user is actively engaged
 */

var MouseActivity =
/*#__PURE__*/
function (_TickClass) {
  MouseActivity_inherits(MouseActivity, _TickClass);

  /**
   * @param  {object} config - configuration object to set specific settings in the instance
   * @param {object} ...params - object of the rest of the parameters to easily pass to
   * super consturctor
   */
  function MouseActivity(config) {
    var _getPrototypeOf2;

    var _this;

    MouseActivity_classCallCheck(this, MouseActivity);

    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      params[_key - 1] = arguments[_key];
    }

    _this = MouseActivity_possibleConstructorReturn(this, (_getPrototypeOf2 = MouseActivity_getPrototypeOf(MouseActivity)).call.apply(_getPrototypeOf2, [this, config].concat(params)));
    MouseActivity_assertThisInitialized(_this).setupEventListeners = _this.setupEventListeners.bind(MouseActivity_assertThisInitialized(_this));
    MouseActivity_assertThisInitialized(_this).resetIdle = _this.resetIdle.bind(MouseActivity_assertThisInitialized(_this));
    MouseActivity_assertThisInitialized(_this).tick = _this.tick.bind(MouseActivity_assertThisInitialized(_this));
    MouseActivity_assertThisInitialized(_this).releaseEventListeners = _this.releaseEventListeners.bind(MouseActivity_assertThisInitialized(_this));
    MouseActivity_assertThisInitialized(_this).browserMouseEvent = _this.browserMouseEvent.bind(MouseActivity_assertThisInitialized(_this));
    _this._config = MouseActivity_objectSpread({
      tolerance: 10
    }, _this._config, {}, config);
    _this._mouseActiveState = true;
    _this._mouseIdleTime = 0;
    _this._lastPosition = [0, 0];

    _this.setupEventListeners();

    return _this;
  }
  /**
   * Setup event listeners that trigger active state changes
   * @private
   */


  MouseActivity_createClass(MouseActivity, [{
    key: "setupEventListeners",
    value: function setupEventListeners() {
      document.addEventListener('mousemove', this.browserMouseEvent);
      document.addEventListener('mousedown', this.browserMouseEvent);
      document.addEventListener('wheel', this.browserMouseEvent);
    }
    /**
     * Release event listeners that trigger active state changes
     * @private
     */

  }, {
    key: "releaseEventListeners",
    value: function releaseEventListeners() {
      document.removeEventListeners('mousemove', this.browserMouseEvent);
      document.removeEventListeners('mousedown', this.browserMouseEvent);
      document.addEventListener('wheel', this.browserMouseEvent);
    }
    /**
     * Increments the idle time every X milliseconds
     * @private
     */

  }, {
    key: "tick",
    value: function tick() {
      if (this._mouseActiveState) {
        this._mouseIdleTime += 1;

        if (this._mouseIdleTime >= this._config.tolerance) {
          this._mouseActiveState = false;
          this.dispatchEvent('statechange', false);
        }
      }
    }
    /**
     * Callback for mouse event listeners
     * @param  {string} event.type  Type of event
     * @param  {number} event.x     Horizontal coordinate of mouse
     * @param  {number} event.y     Vertical coordinate of mouse
     * @private
     */

  }, {
    key: "browserMouseEvent",
    value: function browserMouseEvent(_ref) {
      var type = _ref.type,
          x = _ref.x,
          y = _ref.y;

      // Fix for IE11 because it triggers a mousemove event when the page content reflows
      if (type === 'mousemove') {
        if (this._lastPosition[0] !== x || this._lastPosition[1] !== y) {
          this._mouseIdleTime = 0;
        }
      } else {
        this._mouseIdleTime = 0;
      }

      this._lastPosition = [x, y];

      if (!this._mouseActiveState) {
        this._mouseActiveState = true;
        this.dispatchEvent('statechange', true);
      }
    }
    /**
     * Resets the idle to 0 or a specified number
     * @param  {Number} buffer - an optional number to set the idle to
     */

  }, {
    key: "resetIdle",
    value: function resetIdle() {
      var buffer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      this._mouseIdleTime = buffer;
    }
    /**
     * Get the current active state of the activity
     * @return {boolean}
     */

  }, {
    key: "unload",

    /**
     * Cleanup any event listeners and variable references so it can be cleanly released
     * @param  {...Object} params - any unloading params that might be passed to super's
     * unload function
     */
    value: function unload() {
      var _get2;

      this.releaseEventListeners();

      for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        params[_key2] = arguments[_key2];
      }

      (_get2 = MouseActivity_get(MouseActivity_getPrototypeOf(MouseActivity.prototype), "unload", this)).call.apply(_get2, [this].concat(params));
    }
  }, {
    key: "active",
    get: function get() {
      return this._mouseActiveState;
    }
  }]);

  return MouseActivity;
}(TickClass["a" /* default */]);

/* harmony default export */ var BrowserActivity_MouseActivity = (MouseActivity);
// CONCATENATED MODULE: ./src/lib/BrowserActivity/ScrollActivity.js
function ScrollActivity_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { ScrollActivity_typeof = function _typeof(obj) { return typeof obj; }; } else { ScrollActivity_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return ScrollActivity_typeof(obj); }

function ScrollActivity_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function ScrollActivity_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ScrollActivity_ownKeys(source, true).forEach(function (key) { ScrollActivity_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ScrollActivity_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function ScrollActivity_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function ScrollActivity_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function ScrollActivity_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function ScrollActivity_createClass(Constructor, protoProps, staticProps) { if (protoProps) ScrollActivity_defineProperties(Constructor.prototype, protoProps); if (staticProps) ScrollActivity_defineProperties(Constructor, staticProps); return Constructor; }

function ScrollActivity_possibleConstructorReturn(self, call) { if (call && (ScrollActivity_typeof(call) === "object" || typeof call === "function")) { return call; } return ScrollActivity_assertThisInitialized(self); }

function ScrollActivity_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function ScrollActivity_get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { ScrollActivity_get = Reflect.get; } else { ScrollActivity_get = function _get(target, property, receiver) { var base = ScrollActivity_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return ScrollActivity_get(target, property, receiver || target); }

function ScrollActivity_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = ScrollActivity_getPrototypeOf(object); if (object === null) break; } return object; }

function ScrollActivity_getPrototypeOf(o) { ScrollActivity_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return ScrollActivity_getPrototypeOf(o); }

function ScrollActivity_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) ScrollActivity_setPrototypeOf(subClass, superClass); }

function ScrollActivity_setPrototypeOf(o, p) { ScrollActivity_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return ScrollActivity_setPrototypeOf(o, p); }


/**
 * Monitors mouse activity to determine whether the user is actively engaged
 */

var ScrollActivity =
/*#__PURE__*/
function (_TickClass) {
  ScrollActivity_inherits(ScrollActivity, _TickClass);

  /**
   * @param  {object} config - configuration object to set specific settings in the instance
   * @param {object} ...params - object of the rest of the parameters to easily pass to
   * super consturctor
   */
  function ScrollActivity(config) {
    var _getPrototypeOf2;

    var _this;

    ScrollActivity_classCallCheck(this, ScrollActivity);

    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      params[_key - 1] = arguments[_key];
    }

    _this = ScrollActivity_possibleConstructorReturn(this, (_getPrototypeOf2 = ScrollActivity_getPrototypeOf(ScrollActivity)).call.apply(_getPrototypeOf2, [this, config].concat(params)));
    ScrollActivity_assertThisInitialized(_this).setupEventListeners = _this.setupEventListeners.bind(ScrollActivity_assertThisInitialized(_this));
    ScrollActivity_assertThisInitialized(_this).resetIdle = _this.resetIdle.bind(ScrollActivity_assertThisInitialized(_this));
    ScrollActivity_assertThisInitialized(_this).tick = _this.tick.bind(ScrollActivity_assertThisInitialized(_this));
    ScrollActivity_assertThisInitialized(_this).releaseEventListeners = _this.releaseEventListeners.bind(ScrollActivity_assertThisInitialized(_this));
    ScrollActivity_assertThisInitialized(_this).browserScroll = _this.browserScroll.bind(ScrollActivity_assertThisInitialized(_this));
    _this._config = ScrollActivity_objectSpread({
      tolerance: 10
    }, _this._config, {}, config);
    _this._scrollActiveState = true;
    _this._scrollIdleTime = 0;

    _this.setupEventListeners();

    return _this;
  }
  /**
   * Setup event listeners that trigger active state changes
   * @private
   */


  ScrollActivity_createClass(ScrollActivity, [{
    key: "setupEventListeners",
    value: function setupEventListeners() {
      document.addEventListener('scroll', this.browserScroll);
    }
    /**
     * Release event listeners that trigger active state changes
     * @private
     */

  }, {
    key: "releaseEventListeners",
    value: function releaseEventListeners() {
      document.removeEventListeners('scroll', this.browserScroll);
    }
    /**
     * Increments the idle time every X milliseconds
     * @private
     */

  }, {
    key: "tick",
    value: function tick() {
      this._scrollIdleTime += 1;

      if (this._scrollActiveState && this._scrollIdleTime >= this._config.tolerance) {
        this._scrollActiveState = false;
        this.dispatchEvent('statechange', false);
      }
    }
    /**
     * Callback for scroll event listener
     * @private
     */

  }, {
    key: "browserScroll",
    value: function browserScroll() {
      this._scrollIdleTime = 0;

      if (!this._scrollActiveState) {
        this._scrollActiveState = true;
        this.dispatchEvent('statechange', true);
      }
    }
    /**
     * Resets the idle to 0 or a specified number
     * @param  {Number} buffer - an optional number to set the idle to
     */

  }, {
    key: "resetIdle",
    value: function resetIdle() {
      var buffer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      this._scrollIdleTime = buffer;
    }
    /**
     * Get the current active state of the activity
     * @return {boolean}
     */

  }, {
    key: "unload",

    /**
     * Cleanup any event listeners and variable references so it can be cleanly released
     * @param  {...Object} params - any unloading params that might be passed to super's
     * unload function
     */
    value: function unload() {
      var _get2;

      this.releaseEventListeners();

      for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        params[_key2] = arguments[_key2];
      }

      (_get2 = ScrollActivity_get(ScrollActivity_getPrototypeOf(ScrollActivity.prototype), "unload", this)).call.apply(_get2, [this].concat(params));
    }
  }, {
    key: "active",
    get: function get() {
      return this._scrollActiveState;
    }
  }]);

  return ScrollActivity;
}(TickClass["a" /* default */]);

/* harmony default export */ var BrowserActivity_ScrollActivity = (ScrollActivity);
// CONCATENATED MODULE: ./src/lib/BrowserActivity/index.js
function BrowserActivity_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { BrowserActivity_typeof = function _typeof(obj) { return typeof obj; }; } else { BrowserActivity_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return BrowserActivity_typeof(obj); }

function BrowserActivity_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function BrowserActivity_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { BrowserActivity_ownKeys(source, true).forEach(function (key) { BrowserActivity_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { BrowserActivity_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function BrowserActivity_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function BrowserActivity_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function BrowserActivity_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function BrowserActivity_createClass(Constructor, protoProps, staticProps) { if (protoProps) BrowserActivity_defineProperties(Constructor.prototype, protoProps); if (staticProps) BrowserActivity_defineProperties(Constructor, staticProps); return Constructor; }

function BrowserActivity_possibleConstructorReturn(self, call) { if (call && (BrowserActivity_typeof(call) === "object" || typeof call === "function")) { return call; } return BrowserActivity_assertThisInitialized(self); }

function BrowserActivity_getPrototypeOf(o) { BrowserActivity_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return BrowserActivity_getPrototypeOf(o); }

function BrowserActivity_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function BrowserActivity_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) BrowserActivity_setPrototypeOf(subClass, superClass); }

function BrowserActivity_setPrototypeOf(o, p) { BrowserActivity_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return BrowserActivity_setPrototypeOf(o, p); }







var BrowserActivityModules = {
  BrowserVisibility: BrowserActivity_BrowserVisibility,
  KeyboardActivity: BrowserActivity_KeyboardActivity,
  MouseActivity: BrowserActivity_MouseActivity,
  ScrollActivity: BrowserActivity_ScrollActivity
};
/**
 * A list of activity types that must be active for the user to be considered engaged
 * @type {Array}
 */

var requiredActivities = ['BrowserVisibility'];
/**
 * Abstracts the various activity activity modules into a single engagement
 * property and event
 */

var BrowserActivity_BrowserActivity =
/*#__PURE__*/
function (_EventClass) {
  BrowserActivity_inherits(BrowserActivity, _EventClass);

  /**
   * @param  {Object} config - configuration object to set specific settings in the instance
   * @param {Object} ...params - object of the rest of the parameters to easily pass to
   * super consturctor
   */
  function BrowserActivity() {
    var _getPrototypeOf2;

    var _this;

    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    BrowserActivity_classCallCheck(this, BrowserActivity);

    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      params[_key - 1] = arguments[_key];
    }

    _this = BrowserActivity_possibleConstructorReturn(this, (_getPrototypeOf2 = BrowserActivity_getPrototypeOf(BrowserActivity)).call.apply(_getPrototypeOf2, [this, config].concat(params)));
    var global = config.global || {};

    var extendedConfig = BrowserActivity_objectSpread({}, _this._config, {
      global: BrowserActivity_objectSpread({
        tolerance: 20,
        frequency: 1000
      }, global)
    });

    _this._engaged = null;
    _this._activityInstances = {};
    BrowserActivity_assertThisInitialized(_this).handleStateChange = _this.handleStateChange.bind(BrowserActivity_assertThisInitialized(_this));
    BrowserActivity_assertThisInitialized(_this).getEngagements = _this.getEngagements.bind(BrowserActivity_assertThisInitialized(_this));
    Object.keys(BrowserActivityModules).forEach(function (activity) {
      var activityConfig = BrowserActivity_objectSpread({}, extendedConfig.global, {}, extendedConfig[activity]);

      var activityInstance = new BrowserActivityModules[activity](activityConfig);
      _this._activityInstances[activity] = activityInstance;
      activityInstance.addEventListener('statechange', _this.handleStateChange.bind(BrowserActivity_assertThisInitialized(_this), activity));
    });
    _this._engaged = _this._activityInstances.BrowserVisibility.active;
    return _this;
  }

  BrowserActivity_createClass(BrowserActivity, [{
    key: "updateEngagedState",
    value: function updateEngagedState() {
      var _this2 = this;

      var active = Object.keys(this._activityInstances).filter(function (activityName) {
        return !array_includes_default()(requiredActivities, activityName);
      }).some(function (activityName) {
        return _this2._activityInstances[activityName].active;
      });
      var required = !requiredActivities.length || requiredActivities.every(function (activityName) {
        return _this2._activityInstances[activityName].active;
      });
      var nextEngagedState = required && active;

      if (this._engaged !== nextEngagedState) {
        this._engaged = nextEngagedState;
        this.dispatchEvent('statechange', this._engaged);
      }

      return nextEngagedState;
    }
    /**
     * Callback for events that runs the event emitting method
     * @private
     */

  }, {
    key: "handleStateChange",
    value: function handleStateChange() {
      this.updateEngagedState();
    }
    /**
     * @type {boolean} - Returns whether the user is considered engaged or not
     */

  }, {
    key: "getEngagements",

    /**
     * Returns a list of activity types and their state
     * @return {Object}
     */
    value: function getEngagements() {
      var _this3 = this;

      var obj = {};
      Object.keys(this._activityInstances).forEach(function (activityType) {
        obj[activityType] = _this3._activityInstances[activityType].active;
      });
      return obj;
    }
  }, {
    key: "isEngaged",
    get: function get() {
      return this.updateEngagedState();
    }
  }]);

  return BrowserActivity;
}(EventClass["a" /* default */]);

/* harmony default export */ var lib_BrowserActivity = (BrowserActivity_BrowserActivity);
// CONCATENATED MODULE: ./src/Kronos.js
function Kronos_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Kronos_typeof = function _typeof(obj) { return typeof obj; }; } else { Kronos_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Kronos_typeof(obj); }

function Kronos_slicedToArray(arr, i) { return Kronos_arrayWithHoles(arr) || Kronos_iterableToArrayLimit(arr, i) || Kronos_nonIterableRest(); }

function Kronos_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function Kronos_iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function Kronos_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function Kronos_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function Kronos_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Kronos_ownKeys(source, true).forEach(function (key) { Kronos_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Kronos_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function Kronos_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function Kronos_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { Kronos_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { Kronos_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function Kronos_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function Kronos_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function Kronos_createClass(Constructor, protoProps, staticProps) { if (protoProps) Kronos_defineProperties(Constructor.prototype, protoProps); if (staticProps) Kronos_defineProperties(Constructor, staticProps); return Constructor; }

function Kronos_possibleConstructorReturn(self, call) { if (call && (Kronos_typeof(call) === "object" || typeof call === "function")) { return call; } return Kronos_assertThisInitialized(self); }

function Kronos_getPrototypeOf(o) { Kronos_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Kronos_getPrototypeOf(o); }

function Kronos_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function Kronos_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Kronos_setPrototypeOf(subClass, superClass); }

function Kronos_setPrototypeOf(o, p) { Kronos_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Kronos_setPrototypeOf(o, p); }

function Kronos_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var defaultConfiguration = {
  kronos: {
    enabled: true,
    tolerance: 30,
    targetingCountKey: 'kronosrefreshcount',
    targetingRefreshKey: 'kronosrefresh'
  }
};
/**
 * Monitors user engagement and refreshes ad slots based on configuration
 */

var Kronos_Kronos =
/*#__PURE__*/
function (_TickClass) {
  Kronos_inherits(Kronos, _TickClass);

  function Kronos(MCPRef) {
    var _this;

    var configuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    Kronos_classCallCheck(this, Kronos);

    _this = Kronos_possibleConstructorReturn(this, Kronos_getPrototypeOf(Kronos).call(this, {
      autoStartTicker: false
    }));

    Kronos_defineProperty(Kronos_assertThisInitialized(_this), "_MCP", void 0);

    Kronos_defineProperty(Kronos_assertThisInitialized(_this), "_activity", void 0);

    _this._MCP = MCPRef;
    _this._ready = _this._constructorAsync(configuration);
    return _this;
  }

  Kronos_createClass(Kronos, [{
    key: "_constructorAsync",
    value: function () {
      var _constructorAsync2 = Kronos_asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee(configuration) {
        var fromConfigurator, tolerance;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this._MCP.ready;

              case 2:
                /* eslint-disable-line no-underscore-dangle */
                fromConfigurator = this._MCP.Configurator.getConfiguration({
                  defaults: defaultConfiguration
                }).kronos;
                this._configuration = Kronos_objectSpread({}, fromConfigurator, {}, configuration);
                tolerance = this._configuration.tolerance;
                this._activity = new lib_BrowserActivity({
                  global: {
                    tolerance: tolerance
                  }
                });
                this.isReady = true;
                this.startTicker();

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function _constructorAsync(_x) {
        return _constructorAsync2.apply(this, arguments);
      }

      return _constructorAsync;
    }()
    /**
     * Fires on an interval to check the state of each slot
     */

  }, {
    key: "tick",
    value: function tick() {
      var _this2 = this;

      var _this$_configuration = this._configuration,
          _this$_configuration$ = _this$_configuration.enabled,
          enabled = _this$_configuration$ === void 0 ? true : _this$_configuration$,
          targetingRefreshKey = _this$_configuration.targetingRefreshKey,
          targetingCountKey = _this$_configuration.targetingCountKey;
      if (!enabled || !this._activity.isEngaged) return;
      /* eslint-disable-next-line no-unused-vars */

      var slotsToRefresh = Array.from(this._MCP.slots).reduce(function (acc, _ref) {
        var _ref2 = Kronos_slicedToArray(_ref, 2),
            element = _ref2[0],
            slot = _ref2[1];

        if (Kronos_typeof(slot) === 'object' && slot.enabled === false) return acc;
        var meta = slot.meta,
            inViewPercentage = slot.inViewPercentage,
            visibility = slot.visibility;
        var refresh = meta.refresh,
            refreshThreshold = meta.refreshThreshold,
            forceRefresh = meta.forceRefresh;
        var _meta$counter = meta.counter,
            counter = _meta$counter === void 0 ? 0 : _meta$counter;

        var overlayVisible = Array.isArray(_this2._MCP._overlaySelectors) && _this2._MCP._overlaySelectors.some(function (selector) {
          return document.querySelector(selector);
        }); // Increment counter only if it is in view


        if (slot.meta.creativeLoaded && visibility > 0.5 && !overlayVisible) {
          slot.setMetaData('counter', counter += 1);
        }

        if (slot.getMetaData('stale')) return acc;

        if (forceRefresh && visibility > 0.5) {
          acc.push(slot);
          return acc;
        }

        if (refresh && refreshThreshold && counter >= refreshThreshold) {
          var kronosRefreshes = (slot.getMetaData('kronosRefreshes') || 0) + 1;
          slot.setMetaData('kronosRefreshes', kronosRefreshes);
          slot.setTargeting(targetingRefreshKey, 'true');
          slot.setTargeting(targetingCountKey, kronosRefreshes);
          acc.push(slot);
        }

        return acc;
      }, []);
      if (slotsToRefresh.length === 0) return;

      var _this$dispatchEvent = this.dispatchEvent('beforeKronosRefresh', {
        slots: slotsToRefresh
      }),
          _this$dispatchEvent$d = _this$dispatchEvent.defaultPrevented,
          defaultPrevented = _this$dispatchEvent$d === void 0 ? false : _this$dispatchEvent$d,
          asyncEvents = _this$dispatchEvent.asyncEvents;

      if (defaultPrevented) return;
      Promise.resolve().then(asyncEvents).then(function () {
        slotsToRefresh.forEach(function (slot) {
          slot.clearTargetingAfterRefresh(['kronosrefresh', 'kronosrefreshcounter']);
          slot.setMetaData('counter', 0);
          slot.setMetaData('stale', true);
          slot.removeMetaData('forceRefresh');
        });

        _this2._MCP.refreshSlots(slotsToRefresh);
      });
    }
  }]);

  return Kronos;
}(TickClass["a" /* default */]);


// EXTERNAL MODULE: ./node_modules/lodash/throttle.js
var throttle = __webpack_require__(158);
var throttle_default = /*#__PURE__*/__webpack_require__.n(throttle);

// CONCATENATED MODULE: ./src/lib/resolveElement.js
function resolveElement(element) {
  if (element instanceof Element) return element;

  if (typeof element === 'string') {
    var queryResults = document.querySelector(element);
    if (queryResults) return element;
    var byId = document.getElementById(element);
    if (byId) return byId;
  }

  return null;
}
// CONCATENATED MODULE: ./src/PhotoGallery.js
function PhotoGallery_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function PhotoGallery_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { PhotoGallery_ownKeys(source, true).forEach(function (key) { PhotoGallery_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { PhotoGallery_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function PhotoGallery_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function PhotoGallery_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { PhotoGallery_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { PhotoGallery_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function PhotoGallery_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function PhotoGallery_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function PhotoGallery_createClass(Constructor, protoProps, staticProps) { if (protoProps) PhotoGallery_defineProperties(Constructor.prototype, protoProps); if (staticProps) PhotoGallery_defineProperties(Constructor, staticProps); return Constructor; }

function PhotoGallery_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var PhotoGallery_defaultConfiguration = {
  photoGallery: {
    enabled: true,
    activeSlots: {
      // leaderboard: { selector: '#dfp_leaderboard', refreshRate: 2 },
      bigbox: {
        selector: '#overlay_bigbox',
        refreshRate: 1
      } // interstitial: { selector: '#photo_interstitial_wrapper_1', refreshRate: 4 },

    },
    refreshThrottle: 4000,
    refreshRate: 2,
    interstitialFrequency: 3
  }
};
/**
 * Handles desktop photo gallery-ad slot synchronization with configurable frequency rates
 */

var PhotoGallery_PhotoGallery =
/*#__PURE__*/
function () {
  /**
   * @param {Object} param - object containing all of the properties for the PhotoGallery
   * @param {Object} param.MCPRef - reference to the MCP library
   * @param {Object} param.configuration - configuration for the photo gallery functionality
   */
  function PhotoGallery(MCPRef) {
    var configuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    PhotoGallery_classCallCheck(this, PhotoGallery);

    PhotoGallery_defineProperty(this, "_currentIncrement", 0);

    PhotoGallery_defineProperty(this, "_configuration", void 0);

    PhotoGallery_defineProperty(this, "_mcp", void 0);

    PhotoGallery_defineProperty(this, "isReady", false);

    PhotoGallery_defineProperty(this, "ready", void 0);

    PhotoGallery_defineProperty(this, "_throttledRefreshTest", void 0);

    PhotoGallery_defineProperty(this, "_interstitialContainer", void 0);

    /* eslint-disable no-underscore-dangle */
    this._constructorAsync = this._constructorAsync.bind(this);
    this._interstitialTest = this._interstitialTest.bind(this);
    this._refreshTest = this._refreshTest.bind(this);
    /* eslint-enable no-underscore-dangle */

    this.setSyncSlot = this.setSyncSlot.bind(this);
    this.setInterstitialSlot = this.setInterstitialSlot.bind(this);
    this.removeSyncSlot = this.removeSyncSlot.bind(this);
    this.next = this.next.bind(this);
    this.previous = this.previous.bind(this);
    this._mcp = MCPRef;
    this.ready = this._constructorAsync(configuration);
  }

  PhotoGallery_createClass(PhotoGallery, [{
    key: "_constructorAsync",
    value: function () {
      var _constructorAsync2 = PhotoGallery_asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee(configuration) {
        var fromConfigurator;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this._mcp.ready;

              case 2:
                /* eslint-disable-line no-underscore-dangle */
                this.isReady = true;
                fromConfigurator = this._mcp.Configurator.getConfiguration({
                  defaults: PhotoGallery_defaultConfiguration
                }).photoGallery;
                this._configuration = PhotoGallery_objectSpread({}, fromConfigurator, {}, configuration); // creates a throttled version of the _refreshTest function to stop refreshes from happening
                // too quickly

                this._throttledRefreshTest = throttle_default()(this._refreshTest, this._configuration.refreshThrottle, {
                  leading: true,
                  trailing: false
                });
                return _context.abrupt("return", this);

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function _constructorAsync(_x) {
        return _constructorAsync2.apply(this, arguments);
      }

      return _constructorAsync;
    }()
    /**
     * Allows sync slots to be added after the initial load of the photo gallery module
     * @param {string} slotType - a name or identifier of the slot(s) being targeted
     * @param {string} selector - an element selector that matches desired elements
     * @param {number} refreshRate - frequency of ad refreshes based on photo navigation events
     */

  }, {
    key: "setSyncSlot",
    value: function () {
      var _setSyncSlot = PhotoGallery_asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee2(slotType, selector, refreshRate, additionalConfiguration) {
        var rule;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.ready;

              case 2:
                rule = PhotoGallery_objectSpread({}, additionalConfiguration, {
                  selector: selector
                });
                if (refreshRate) rule.refreshRate = refreshRate;
                this._configuration.activeSlots[slotType] = PhotoGallery_objectSpread({}, this._configuration.activeSlots[slotType], {}, rule);

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function setSyncSlot(_x2, _x3, _x4, _x5) {
        return _setSyncSlot.apply(this, arguments);
      }

      return setSyncSlot;
    }()
  }, {
    key: "setInterstitialSlot",
    value: function () {
      var _setInterstitialSlot = PhotoGallery_asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee3(elementReference) {
        var element;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.ready;

              case 2:
                element = resolveElement(elementReference);

                if (element) {
                  this._configuration.activeSlots.interstitial = element; // this._configuration.interstitialSlot = element;
                }

              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function setInterstitialSlot(_x6) {
        return _setInterstitialSlot.apply(this, arguments);
      }

      return setInterstitialSlot;
    }()
    /**
     * Allows sync slots to be removed after the initial load of the photo gallery module
     * @param {string} slotType - a name or identifier of the slot(s) being targeted
     */

  }, {
    key: "removeSyncSlot",
    value: function () {
      var _removeSyncSlot = PhotoGallery_asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee4(slotType) {
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.ready;

              case 2:
                if (this._configuration.activeSlots[slotType]) {
                  delete this._configuration.activeSlots[slotType];
                }

              case 3:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function removeSyncSlot(_x7) {
        return _removeSyncSlot.apply(this, arguments);
      }

      return removeSyncSlot;
    }()
    /**
     * Increments the current incrementer for the photo gallery and tests refresh condition
     */

  }, {
    key: "next",
    value: function next() {
      var response = {
        showInterstitial: false
      };

      if (this.isReady && this._configuration.enabled) {
        this._currentIncrement += 1;
        response.showInterstitial = this._interstitialTest();

        this._throttledRefreshTest();
      }

      return response;
    }
    /**
     * Increments the current incrementer for the photo gallery and tests refresh condition, for
     * reverse navigation
     */

  }, {
    key: "previous",
    value: function previous() {
      var response = {
        showInterstitial: false
      };

      if (this.isReady && this._configuration.enabled) {
        this._currentIncrement += 1;
        response.showInterstitial = this._interstitialTest();

        this._throttledRefreshTest();
      }

      return response;
    }
    /**
     * Unthrottled function that checks the refresh frequency of each configured slot and refreshes,
     * if necessary
     */

  }, {
    key: "_refreshTest",
    value: function _refreshTest() {
      var _this = this;

      var activeSlots = this._configuration.activeSlots;
      var shouldTick = false;
      Object.keys(activeSlots).forEach(function (slotType) {
        // interstitialTest handles interstitial slots
        if (slotType === 'interstitial') return;
        var _activeSlots$slotType = activeSlots[slotType],
            selector = _activeSlots$slotType.selector,
            refreshRate = _activeSlots$slotType.refreshRate;
        var rate = typeof refreshRate === 'number' ? refreshRate : _this._configuration.refreshRate;
        if (rate < 1 || _this._currentIncrement === 0 || _this._currentIncrement % rate) return;
        document.querySelectorAll(selector).forEach(function (element) {
          var slot = _this._mcp.slots.get(element);

          if (slot) {
            // Queue refresh rather than initiate immediately
            slot.setMetaData('forceRefresh', true);
            shouldTick = true;
          }
        });
      }); // Tell Kronos to tick now so we don't have to wait up to a second to initiate a refresh

      if (shouldTick && this._mcp.Kronos) this._mcp.Kronos.tick();
    }
  }, {
    key: "_interstitialTest",
    value: function _interstitialTest() {
      var _this$_configuration = this._configuration,
          interstitialFrequency = _this$_configuration.interstitialFrequency,
          activeSlots = _this$_configuration.activeSlots,
          galleryContainer = _this$_configuration.galleryContainer;
      var _currentIncrement = this._currentIncrement;
      var interstitial = activeSlots.interstitial;
      if (!interstitial) return false;

      var interstitialSlot = this._mcp.getSlot(interstitial.selector);

      if (!interstitialSlot) {
        consolv.log('DatMCP PhotoGallery: Interstitial slot invalid');
        return false;
      }

      if ( // !galleryContainer ||
      !interstitialSlot || typeof interstitialFrequency !== 'number' || _currentIncrement < 1 || interstitialFrequency < 1 || this._currentIncrement % interstitialFrequency !== 0) {
        return false;
      }

      var slotsToRefresh = [interstitialSlot]; // interstitialSlot.setTargeting('inttype', 'pislot');

      if (activeSlots.bigbox) {
        var bigbox = this._mcp.getSlot(activeSlots.bigbox.selector); // bigbox.setMetaData('counter', 0);
        // bigbox.setTargeting('inttype', 'pislot');


        slotsToRefresh.push(bigbox);
      }

      this._mcp.refreshSlots(slotsToRefresh); // galleryContainer.classList.add('interstitial-show');


      return true;
    }
  }]);

  return PhotoGallery;
}();


// EXTERNAL MODULE: ./node_modules/intersect/index.js
var intersect = __webpack_require__(67);
var intersect_default = /*#__PURE__*/__webpack_require__.n(intersect);

// CONCATENATED MODULE: ./src/PrebidAdapter.js
function PrebidAdapter_slicedToArray(arr, i) { return PrebidAdapter_arrayWithHoles(arr) || PrebidAdapter_iterableToArrayLimit(arr, i) || PrebidAdapter_nonIterableRest(); }

function PrebidAdapter_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function PrebidAdapter_iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function PrebidAdapter_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function PrebidAdapter_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function PrebidAdapter_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { PrebidAdapter_ownKeys(source, true).forEach(function (key) { PrebidAdapter_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { PrebidAdapter_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function PrebidAdapter_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var _buildEnv = {"NODE_ENV":"production","version":"3.24.1","libraryName":"Master Control Program","endpoints":{"configuration":"https://code.adsales.snidigital.com/datmcp/3/mcp-configuration.json"},"dfpEnvironment":"staging","dfpNetworks":{"production":"109359770","staging":"201823409","golf-prod":"21849421099"},"slotConfigurationEndpoint":"https://bmxocid8k6.execute-api.us-east-1.amazonaws.com/v1/{lineItemId}/","libraryRemotePath":"code.adsales.snidigital.com/datmcp"},
    libraryRemotePath = _buildEnv.libraryRemotePath;
var defaultConfig = {
  enabled: false,
  prebidTimeout: 1000,
  failsafeTimeout: 2000
};
/**
 * Creates the prebid request and callback that is called before loading slots
 */

var PrebidAdapter_setupRequestBids = function setupRequestBids(MCP, config) {
  return function (event, _ref) {
    var slots = _ref.slots,
        addAsyncEvent = _ref.addAsyncEvent,
        immediatelyLoad = _ref.immediatelyLoad;
    if (event === 'beforeAppendSlot' && !immediatelyLoad) return;
    var runPerformanceTest = MCP._config.performanceTest === true;
    var startTime;
    if (runPerformanceTest) startTime = window.performance.now();
    var asyncEvent = new Promise(function (resolve) {
      if (!window.pbjs || !window.pbjs.que) {
        window.pbjs = PrebidAdapter_objectSpread({}, window.pbjs, {
          que: []
        });
      }

      var _window = window,
          pbjs = _window.pbjs; // const pbjs = loadPrebidLibrary();

      var failsafeTimerRef;
      /* eslint-disable-next-line prefer-arrow-callback */

      pbjs.que.push(function requestBids() {
        var adUnits = Array.from(slots).reduce(function (acc, _ref2) {
          var _ref3 = PrebidAdapter_slicedToArray(_ref2, 2),
              element = _ref3[0],
              slot = _ref3[1];

          var site = MCP._sourceOfTruth.page.site;
          var slotMap = config.slotMap && config.slotMap[site] && config.slotMap[site][slot.type];
          if (!slotMap) return acc;
          var bids = Object.keys(slotMap).reduce(function (bidsAcc, bidId) {
            // Check to see if bid has a specific size restriction and compare
            var slotSizes = slotMap[bidId].sizes;
            var bidSizes = slot.sizes.map(function (v) {
              return v.join(',');
            });

            if (!slotMap[bidId].sizes || intersect_default()(slotSizes, bidSizes).length) {
              bidsAcc.push({
                bidder: slotMap[bidId].bidder || bidId,
                params: slotMap[bidId].params
              });
            }

            return bidsAcc;
          }, []);
          var filteredSizes = slot.sizes.filter(function (size) {
            return size.every(function (value) {
              return value !== Infinity;
            });
          });
          acc.push({
            code: element.id,
            mediaTypes: {
              banner: {
                sizes: filteredSizes
              }
            },
            bids: bids
          });
          return acc;
        }, []);

        if (!adUnits.length) {
          consolv.log('MCP: Prebid has no valid ad units');
          resolve();
          return;
        }

        var bidRequest = {
          adUnitCodes: adUnits.map(function (adUnit) {
            return adUnit.code;
          }),
          bidsBackHandler: function bidsBackHandler(bids) {
            pbjs.setTargetingForGPTAsync();
            window.clearTimeout(failsafeTimerRef);

            if (runPerformanceTest) {
              var requestDuration = (window.performance.now() - startTime) / 1000;
              consolv.log('MCP: Prebid requests received', bids, "".concat(requestDuration, " seconds"));
            } else {
              consolv.log('MCP: Prebid requests received', bids);
            }

            resolve();
          },
          timeout: config.prebidTimeout
        };
        pbjs.addAdUnits(adUnits);
        pbjs.requestBids(bidRequest);
        consolv.log('MCP: Prebid Request Bids', adUnits);
      });
      failsafeTimerRef = window.setTimeout(function () {
        consolv.log("MCP: Prebid failsafe timeout exceeded at ".concat(config.prebidTimeout, " seconds"));
        resolve();
      }, config.failsafeTimeout);
    });
    addAsyncEvent(asyncEvent);
  };
};
/**
 * Generates the configuration and sets up event listeners for slot loads
 */


function PrebidAdapter(MCP) {
  if (!window.pbjs || !window.pbjs.que) {
    window.pbjs = PrebidAdapter_objectSpread({}, window.pbjs, {
      que: []
    });
  }

  var _window2 = window,
      pbjs = _window2.pbjs;

  MCP._setup.then(function () {
    /* eslint-disable-line no-underscore-dangle */
    var config = MCP.Configurator.getConfiguration();

    var prebidConfig = PrebidAdapter_objectSpread({}, defaultConfig, {}, config.prebid);

    var priceGranularity = prebidConfig.priceGranularity,
        additionalConfig = prebidConfig.config,
        analytics = prebidConfig.analytics;

    if (prebidConfig.enabled) {
      var requestBids = PrebidAdapter_setupRequestBids(MCP, prebidConfig);

      if (priceGranularity || additionalConfig || analytics) {
        /* eslint-disable-next-line prefer-arrow-callback */
        pbjs.que.push(function setPriceGranularity() {
          if (priceGranularity) {
            pbjs.setConfig({
              priceGranularity: priceGranularity
            });
          }

          if (config) {
            pbjs.setConfig(additionalConfig);
          }

          if (analytics) {
            Object.keys(analytics).forEach(function (provider) {
              pbjs.enableAnalytics(PrebidAdapter_objectSpread({
                provider: provider
              }, analytics[provider]));
            });
          }
        });
      }

      MCP.addEventListener('beforeLoadSlots', function () {
        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {
          params[_key] = arguments[_key];
        }

        return requestBids.apply(void 0, ['beforeLoadSlots'].concat(params));
      });
      MCP.addEventListener('beforeAppendSlot', function () {
        for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          params[_key2] = arguments[_key2];
        }

        return requestBids.apply(void 0, ['beforeAppendSlot'].concat(params));
      });
      MCP.addEventListener('beforeRefreshSlots', function () {
        for (var _len3 = arguments.length, params = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
          params[_key3] = arguments[_key3];
        }

        return requestBids.apply(void 0, ['beforeRefreshSlots'].concat(params));
      });
    }
  });
}
// CONCATENATED MODULE: ./src/AmazonA9Adapter.js
function AmazonA9Adapter_slicedToArray(arr, i) { return AmazonA9Adapter_arrayWithHoles(arr) || AmazonA9Adapter_iterableToArrayLimit(arr, i) || AmazonA9Adapter_nonIterableRest(); }

function AmazonA9Adapter_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function AmazonA9Adapter_iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function AmazonA9Adapter_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }



var AmazonA9Adapter_defaultConfig = {
  enabled: false,
  timeout: 1000,
  failsafeTimeout: 2000
};
/* eslint-disable prefer-rest-params */

function setupA9Globals() {
  if (window.apstag) return;

  function queue(command, args) {
    window.apstag._Q.push([command, args]);
  }

  window.apstag = {
    init: function init() {
      if (window.apstag._Q) {
        queue('i', arguments);
      } else {
        window.apstag.init.apply(null, arguments);
      }
    },
    fetchBids: function fetchBids() {
      if (window.apstag._Q) {
        queue('f', arguments);
      } else {
        window.apstag.fetchBids.apply(null, arguments);
      }
    },
    setDisplayBids: function setDisplayBids() {},
    targetingKeys: function targetingKeys() {
      return [];
    },
    _Q: []
  };
}
/* eslint-enable prefer-rest-params */

/**
 * Creates the Amazon A9 request and callback that is called before loading slots
 */


var AmazonA9Adapter_setupRequestBids = function setupRequestBids(MCP, config) {
  return function (event, _ref) {
    var slots = _ref.slots,
        addAsyncEvent = _ref.addAsyncEvent;
    var runPerformanceTest = MCP._config.performanceTest === true;
    var startTime;
    if (runPerformanceTest) startTime = window.performance.now();
    var asyncEvent = new Promise(function (resolve) {
      var _window = window,
          apstag = _window.apstag;
      var _config$slots = config.slots,
          slotMap = _config$slots === void 0 ? {} : _config$slots,
          failsafeTimeout = config.failsafeTimeout;
      var failsafeTimerRef;
      /* eslint-disable-next-line no-unused-vars */

      var adUnits = Array.from(slots).reduce(function (acc, _ref2) {
        var _ref3 = AmazonA9Adapter_slicedToArray(_ref2, 2),
            element = _ref3[0],
            slot = _ref3[1];

        var slotConfig = slotMap[slot.type];
        var sizes = slot.sizeMap.map(function (d) {
          return d.join(',');
        });
        if (!slotConfig) return acc;
        if (!sizes.length) return acc; // Will only include sizes listed in A9 configuration, unless no size map is configured

        var validSizes = Array.isArray(slotConfig.sizes) ? intersect_default()(slotConfig.sizes, sizes) : sizes;

        if (validSizes.length) {
          acc.push({
            slotID: slot.id,
            slotName: slot.getAdUnitPath(),
            sizes: validSizes.map(function (v) {
              return v.split(',').map(function (n) {
                return Number(n);
              });
            })
          });
        }

        return acc;
      }, []);

      if (!adUnits.length) {
        consolv.log('MCP: AmazonA9 has no valid ad units');
        resolve();
        return;
      }

      consolv.log('MCP: AmazonA9 bids ready', adUnits);
      /* eslint-disable-next-line prefer-const */

      failsafeTimerRef = window.setTimeout(function () {
        consolv.log("MCP: AmazonA9 failsafe timeout exceeded at ".concat(failsafeTimeout, " seconds"));
        resolve();
      }, failsafeTimeout);
      apstag.fetchBids({
        slots: adUnits
      }, function (bids) {
        apstag.setDisplayBids();
        window.clearTimeout(failsafeTimerRef);

        if (runPerformanceTest) {
          var requestDuration = (window.performance.now() - startTime) / 1000;
          consolv.log('MCP: AmazonA9 requests received', bids, "".concat(requestDuration, " seconds"));
        } else {
          consolv.log('MCP: AmazonA9 requests received', bids);
        }

        resolve();
      });
    });
    addAsyncEvent(asyncEvent);
  };
};
/**
 * Generates the configuration and sets up event listeners for slot loads
 */


function AmazonA9Adapter(MCP) {
  setupA9Globals();
  var _window2 = window,
      apstag = _window2.apstag;

  MCP._setup.then(function () {
    /* eslint-disable-line no-underscore-dangle */
    var _MCP$Configurator$get = MCP.Configurator.getConfiguration({
      defaults: {
        amazonA9: AmazonA9Adapter_defaultConfig
      }
    }),
        amazonA9 = _MCP$Configurator$get.amazonA9; // const { priceGranularity, config: additionalConfig, analytics } = prebidConfig;


    if (amazonA9.enabled) {
      apstag.init({
        pubID: amazonA9.pubID,
        adServer: 'googletag',
        bidTimeout: apstag.timeout
      });
      var requestBids = AmazonA9Adapter_setupRequestBids(MCP, amazonA9);
      MCP.addEventListener('beforeRefreshSlots', function () {
        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {
          params[_key] = arguments[_key];
        }

        return requestBids.apply(void 0, ['beforeRefreshSlots'].concat(params));
      });
    }
  });
}
// CONCATENATED MODULE: ./src/IndexExchangeAdapter.js
function IndexExchangeAdapter_slicedToArray(arr, i) { return IndexExchangeAdapter_arrayWithHoles(arr) || IndexExchangeAdapter_iterableToArrayLimit(arr, i) || IndexExchangeAdapter_nonIterableRest(); }

function IndexExchangeAdapter_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function IndexExchangeAdapter_iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function IndexExchangeAdapter_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }


var IndexExchangeAdapter_defaultConfig = {
  enabled: false,
  timeout: 1000,
  failsafeTimeout: 2000
};

function setupIXGlobals() {
  window.headertag = window.headertag || {};
  window.headertag.cmd = window.headertag.cmd || [];
}
/* eslint-disable */


function setIXTargeting(demand) {
  if (!demand || !demand.slot) return;
  window.googletag.pubads().getSlots().forEach(function (slot) {
    var div = slot.getSlotElementId();

    if (demand.slot.hasOwnProperty(div)) {
      var allBids = {};
      demand.slot[div].forEach(function (bid) {
        for (var key in bid.targeting) {
          if (allBids.hasOwnProperty(key)) allBids[key].push(bid.targeting[key][0]);else {
            allBids[key] = bid.targeting[key];
          }
        }
      });

      for (var key in allBids) {
        slot.setTargeting(key, allBids[key]);
      }
    }
  });
}
/* eslint-enable */

/**
 * Creates the Index Exchange request and callback that is called before loading slots
 */


var IndexExchangeAdapter_setupRequestBids = function setupRequestBids(MCP, config) {
  return function (event, _ref) {
    var slots = _ref.slots,
        addAsyncEvent = _ref.addAsyncEvent;
    var runPerformanceTest = MCP._config.performanceTest === true;
    var startTime;
    if (runPerformanceTest) startTime = window.performance.now();
    var asyncEvent = new Promise(function (resolve) {
      var _window = window,
          headertag = _window.headertag;
      var _config$slots = config.slots,
          slotMap = _config$slots === void 0 ? [] : _config$slots,
          failsafeTimeout = config.failsafeTimeout;
      var failsafeTimerRef;
      /* eslint-disable-next-line no-unused-vars */

      var adUnits = Array.from(slots).reduce(function (acc, _ref2) {
        var _ref3 = IndexExchangeAdapter_slicedToArray(_ref2, 2),
            element = _ref3[0],
            slot = _ref3[1];

        if (slotMap.includes(slot.type) && slot.sizeMap.length) {
          acc.push({
            htSlotName: slot.id
          });
        }

        return acc;
      }, []);

      if (!adUnits.length) {
        consolv.log('MCP: IndexExchange has no valid ad units');
        resolve();
        return;
      }

      consolv.log('MCP: IndexExchange bids ready', adUnits);
      failsafeTimerRef = window.setTimeout(function () {
        consolv.log("MCP: IndexExchange failsafe timeout exceeded at ".concat(failsafeTimeout, " seconds"));
        resolve();
      }, failsafeTimeout);
      /* eslint-disable-next-line prefer-arrow-callback */

      headertag.cmd.push(function retrieveDemand() {
        headertag.retrieveDemand(adUnits, function (demand) {
          window.clearTimeout(failsafeTimerRef);
          setIXTargeting(demand);

          if (runPerformanceTest) {
            var requestDuration = (window.performance.now() - startTime) / 1000;
            consolv.log('MCP: IndexExchange requests received', demand, "".concat(requestDuration, " seconds"));
          } else {
            consolv.log('MCP: IndexExchange requests received', demand);
          }

          resolve();
        });
      });
    });
    addAsyncEvent(asyncEvent);
  };
};
/**
 * Generates the configuration and sets up event listeners for slot loads
 */


function IndexExchangeAdapter(MCP) {
  setupIXGlobals();

  MCP._setup.then(function () {
    /* eslint-disable-line no-underscore-dangle */
    var _MCP$Configurator$get = MCP.Configurator.getConfiguration({
      defaults: {
        indexExchange: IndexExchangeAdapter_defaultConfig
      }
    }),
        indexExchange = _MCP$Configurator$get.indexExchange;

    if (indexExchange.enabled) {
      var requestBids = IndexExchangeAdapter_setupRequestBids(MCP, indexExchange);
      MCP.addEventListener('beforeRefreshSlots', function () {
        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {
          params[_key] = arguments[_key];
        }

        return requestBids.apply(void 0, ['beforeRefreshSlots'].concat(params));
      });
    }
  });
}
// CONCATENATED MODULE: ./src/LegacyAdapter.js
function LegacyAdapter_slicedToArray(arr, i) { return LegacyAdapter_arrayWithHoles(arr) || LegacyAdapter_iterableToArrayLimit(arr, i) || LegacyAdapter_nonIterableRest(); }

function LegacyAdapter_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function LegacyAdapter_iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function LegacyAdapter_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }



var legacyProps = ['getInitializedSlots', 'SniAdsError', 'playerCreated', 'getVersion', 'getKeyValues', 'getValueByKey', 'getNetworkId', 'getEnvironment', 'getDfpHierarchy', 'getSlotSizes', 'getTargetedKeyValues', 'getSlotConfig', 'getCurrentPageTargeting', 'setKeyValue', 'getSlot', 'refreshSlot', 'refreshSlots', 'reloadTargeting', 'getInitCfg', '_cleanValue', '_setSlotTargeting', '_submitNapalm'];
var legacyPropsGallery = ['setRefreshRate', // 'setInterstitialSlot',
'reset', 'resetGallerySlots', 'getState', 'clearInterstitial', 'getDescriptorData', 'getConfigData'];
/**
 * @access private
 */

function generateLegacyAdapter(MCP) {
  Object.assign(window.SniAds, {
    init: function init() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      consolv.log.apply(consolv, ['init'].concat(args));
      MCP.initialize.apply(MCP, args);
    },
    Event: {
      publish: function publish() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        MCP.ready.then(function () {
          if (args[0] === '_newSlotDefined') {
            var elements = document.querySelectorAll('[id^=dfp_bigbox_]');
            var newElements = Array.from(elements).filter(function (element) {
              return !MCP.slots.has(element);
            });
            newElements.forEach(function (element) {
              MCP.appendSlot(element, {
                type: 'dfp_bigbox'
              });
            });
            return;
          }

          consolv.log.apply(consolv, ['SniAds.Events.publish'].concat(args));
        });
      },
      subscribe: function subscribe(event, callbackFunction, priority) {
        switch (event) {
          case 'slotRenderComplete':
            {
              MCP.addEventListener('slotRenderComplete', callbackFunction, {
                priority: priority
              });
              break;
            }

          default:
            {
              consolv.log('Unmapped subscribe: ', event, callbackFunction, {
                priority: priority
              });
            }
        }
      },
      unsubscribe: function unsubscribe(event, callbackFunction) {
        switch (event) {
          case 'slotRenderComplete':
            {
              MCP.removeEventListener('slotRenderComplete', callbackFunction);
              break;
            }

          default:
            {
              consolv.log('Unmapped unsubscribe: ', event, callbackFunction);
            }
        }
      }
    },
    ready: function ready(callbackFunction) {
      if (MCP.isReady) {
        callbackFunction();
      } else {
        MCP.addEventListener('ready', callbackFunction);
      }
    },
    getDefinedSlots: function getDefinedSlots() {
      var slots = {};
      Array.from(MCP.slots).forEach(function (_ref) {
        var _ref2 = LegacyAdapter_slicedToArray(_ref, 2),
            element = _ref2[0],
            slot = _ref2[1];

        // eslint-disable-line no-unused-vars
        slots[slot.id] = slot.DFPSlot;
      });
      return slots;
    },
    appendSlot: function appendSlot(element, tag) {
      var targetingArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var preventLoadArg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
      MCP.ready.then(function () {
        consolv.log('Legacy appendSlot', tag, element);
        var targeting = targetingArg;
        var preventLoad = preventLoadArg;

        if (typeof targetingArg === 'boolean') {
          targeting = {};
          preventLoad = targetingArg;
        } // preventLoad = false;


        var node;

        if (element.substring(0, 1) === '#') {
          node = document.querySelector(element);
        } else {
          node = document.getElementById(element) || document.querySelector(".".concat(element));
        }

        if (!node) return null;
        var id = uniqueId(node.id || tag);
        if (node.id !== id) node.id = id;
        MCP.appendSlot(node, {
          type: tag,
          additionalTargeting: targeting,
          immediatelyLoad: !preventLoad
        });
        return element;
      });
    },
    appendSlots: function appendSlots() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      consolv.log.apply(consolv, ['appendSlots'].concat(args));
    },
    Iframe: {
      resizeSlot: MCP.utilities.resizeSlotIFrame
    },
    River: {
      repeatBigbox: function repeatBigbox(config) {
        // const element = document.querySelector(`${args[0].target}
        //   .${args[0].adClass.split(' ').join('.')}`);
        consolv.log('repeatBigbox', config);
      }
    },
    Gallery: {
      init: function init() {
        var legacyCfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        /* eslint-disable camelcase */
        var container = legacyCfg.container,
            dismiss_elts = legacyCfg.dismiss_elts;
        var configuration = {
          galleryContainer: document.querySelector(container),
          galleryNavigationButtons: dismiss_elts
        };
        /* eslint-enable camelcase */

        MCP.initializePhotoGallery(configuration);
      },
      isInit: function isInit() {
        return MCP.PhotoGallery !== undefined;
      },
      next: function next() {
        return MCP.PhotoGallery && MCP.PhotoGallery.next();
      },
      previous: function previous() {
        return MCP.PhotoGallery && MCP.PhotoGallery.previous();
      },
      setSyncSlot: function setSyncSlot(slotId) {// MCP.PhotoGallery.setSyncSlot('bigbox', `#${slotId}`);
      },
      setInterstitialSlot: function setInterstitialSlot(elementId) {// MCP.PhotoGallery.setSyncSlot('interstitial', `#${elementId}`);
      }
    }
  });
  legacyPropsGallery.forEach(function (key) {
    window.SniAds.Gallery[key] = function () {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      consolv.log.apply(consolv, ["Gallery.".concat(key)].concat(args));
    };
  });
  legacyProps.forEach(function (key) {
    window.SniAds[key] = function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      consolv.log.apply(consolv, [key].concat(args));
    };
  });
}
// CONCATENATED MODULE: ./src/FixedLeaderboard.js
function FixedLeaderboard_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function FixedLeaderboard_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function FixedLeaderboard_createClass(Constructor, protoProps, staticProps) { if (protoProps) FixedLeaderboard_defineProperties(Constructor.prototype, protoProps); if (staticProps) FixedLeaderboard_defineProperties(Constructor, staticProps); return Constructor; }

function FixedLeaderboard_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


var FixedLeaderboard_defaults = {
  fixedLeaderboard: {
    enabled: false,
    duration: 10,
    resizeWaitDuration: 5,
    containerSelector: 'section.o-Leaderboard',
    leaderboardSelector: '#dfp_leaderboard'
  }
};

var generateStyles = function generateStyles(values) {
  return "".concat(values.containerSelector, ".fixed-leaderboard {\n    z-index: 10000;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    position: fixed;\n    overflow: hidden;\n    transition: height 0.5s;\n  }");
};

var FixedLeaderboard_FixedLeaderboard =
/*#__PURE__*/
function () {
  function FixedLeaderboard(MCP) {
    FixedLeaderboard_classCallCheck(this, FixedLeaderboard);

    FixedLeaderboard_defineProperty(this, "_MCP", void 0);

    FixedLeaderboard_defineProperty(this, "_configuration", void 0);

    this.initialize = this.initialize.bind(this);
    this.handleSlotCreativeLoaded = this.handleSlotCreativeLoaded.bind(this);
    this.captureLeaderboard = this.captureLeaderboard.bind(this);
    this.releaseLeaderboard = this.releaseLeaderboard.bind(this);
    this._MCP = MCP; // MCP.addEventListener('loaded', this.initialize);

    MCP.loaded.then(this.initialize);
    MCP.addEventListener('slotCreativeLoaded', this.handleSlotCreativeLoaded);
  }

  FixedLeaderboard_createClass(FixedLeaderboard, [{
    key: "initialize",
    value: function initialize() {
      this._configuration = this._MCP.Configurator.getConfiguration({
        defaults: FixedLeaderboard_defaults
      }).fixedLeaderboard;
      var styleNode = document.createElement('style');
      var containerSelector = this._configuration.containerSelector;
      styleNode.innerHTML = generateStyles({
        containerSelector: containerSelector
      });
      document.body.appendChild(styleNode);
    }
  }, {
    key: "handleSlotCreativeLoaded",
    value: function handleSlotCreativeLoaded(_ref) {
      var _this = this;

      var slot = _ref.slot;
      var _this$_configuration = this._configuration,
          enabled = _this$_configuration.enabled,
          containerSelector = _this$_configuration.containerSelector,
          leaderboardSelector = _this$_configuration.leaderboardSelector,
          resizeWaitDuration = _this$_configuration.resizeWaitDuration;
      if (!enabled) return;
      var leaderboardContainer = document.querySelector(containerSelector);
      var leaderboard = document.querySelector(leaderboardSelector);
      if (!leaderboardContainer || !leaderboard || slot.element !== leaderboard) return; // Stop monitoring ad slots after finding the first leaderboard load

      this._MCP.removeEventListener('slotCreativeLoaded', this.handleSlotCreativeLoaded);

      var leaderboardHeight = leaderboard.offsetHeight; // Only fix leaderboards if they are a 728x90

      if (leaderboardHeight > 90) return;
      var timerId;
      var elapsed = 0;

      var waitForHeight = function waitForHeight() {
        if (leaderboard.offsetHeight > 1) {
          if (leaderboard.offsetHeight <= 90) _this.captureLeaderboard();
          window.clearInterval(timerId);
          return;
        }

        elapsed += 100;

        if (elapsed > resizeWaitDuration * 1000) {
          window.clearInterval(timerId);
        }
      };

      timerId = window.setInterval(waitForHeight);
      waitForHeight();
    }
  }, {
    key: "captureLeaderboard",
    value: function captureLeaderboard() {
      var _this$_configuration2 = this._configuration,
          leaderboardSelector = _this$_configuration2.leaderboardSelector,
          containerSelector = _this$_configuration2.containerSelector,
          duration = _this$_configuration2.duration;
      var leaderboardContainer = document.querySelector(containerSelector);
      var leaderboard = document.querySelector(leaderboardSelector);
      var leaderboardHeight = leaderboard.offsetHeight;
      leaderboardContainer.classList.add('fixed-leaderboard');
      document.body.style.marginTop = "".concat(leaderboardHeight, "px");
      consolv.log("MCP.FixedLeaderboard: Enabled for ".concat(duration, " seconds"));
      if (duration > 0) window.setTimeout(this.releaseLeaderboard, duration * 1000);
    }
  }, {
    key: "releaseLeaderboard",
    value: function releaseLeaderboard() {
      var leaderboardContainer = document.querySelector(this._configuration.containerSelector);
      if (!leaderboardContainer) return;
      leaderboardContainer.classList.remove('fixed-leaderboard');
      document.body.style.removeProperty('margin-top');
      consolv.log('MCP.FixedLeaderboard: Released leaderboard');
    }
  }]);

  return FixedLeaderboard;
}();


// CONCATENATED MODULE: ./src/lazyLoader.js
function lazyLoader_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function lazyLoader_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { lazyLoader_ownKeys(source, true).forEach(function (key) { lazyLoader_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { lazyLoader_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function lazyLoader_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function lazyLoader_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function lazyLoader_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { lazyLoader_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { lazyLoader_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

 // import { throttle } from 'lodash';

var lazyLoader_defaultConfig = {
  // throttleWaitDuration: 400,
  distanceFromViewport: 500
};
function lazyLoader(_x) {
  return _lazyLoader.apply(this, arguments);
}

function _lazyLoader() {
  _lazyLoader = lazyLoader_asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(MCP) {
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            MCP.addEventListener('ready', function () {
              consolv.log('MCP: Lazy loader initialized');
              var config = MCP.Configurator.getConfiguration();

              var lazyLoaderConfig = lazyLoader_objectSpread({}, lazyLoader_defaultConfig, {}, config.lazyLoader);

              var distanceFromViewport = lazyLoaderConfig.distanceFromViewport;

              var checkSlots = function checkSlots() {
                var slotsToLoad = Array.from(MCP.slots.values()).filter(function (slot) {
                  return slot.creative && slot.creative.isEmpty && slot.getMetaData('shouldLazyLoad') && !slot.getMetaData('loaded') && slot.distanceFromViewport < distanceFromViewport;
                });
                slotsToLoad.forEach(function (slot) {
                  slot.setMetaData('loaded', true);
                });

                if (slotsToLoad.length) {
                  MCP.refreshSlots(slotsToLoad);
                  consolv.log('MCP: Lazy loading slots', slotsToLoad);
                }
              }; // const throttledCheckSlots = throttle(checkSlots, throttleWaitDuration);


              checkSlots();
              MCP.addEventListener('slotCreated', checkSlots);
              document.addEventListener('scroll', checkSlots);
              MCP.addEventListener('foundSlots', checkSlots);
            });

          case 1:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _lazyLoader.apply(this, arguments);
}
// EXTERNAL MODULE: ./node_modules/nth-check/index.js
var nth_check = __webpack_require__(102);
var nth_check_default = /*#__PURE__*/__webpack_require__.n(nth_check);

// CONCATENATED MODULE: ./src/lib/getDistanceFromElements.js
function getClosestElements(_ref) {
  var siblings = _ref.siblings,
      element = _ref.element;
  var _window = window,
      document = _window.document;
  var currentElementTop = element.offsetTop;
  var siblingTops = siblings.map(function (el) {
    return el.offsetTop;
  });
  return siblingTops.reduce(function (closest, top) {
    var distanceFromElement = Math.abs(currentElementTop - top);
    return distanceFromElement < closest ? distanceFromElement : closest;
  }, Infinity);
}
// CONCATENATED MODULE: ./src/findAdSlots.js
function findAdSlots_slicedToArray(arr, i) { return findAdSlots_arrayWithHoles(arr) || findAdSlots_iterableToArrayLimit(arr, i) || findAdSlots_nonIterableRest(); }

function findAdSlots_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function findAdSlots_iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function findAdSlots_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function findAdSlots_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { findAdSlots_typeof = function _typeof(obj) { return typeof obj; }; } else { findAdSlots_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return findAdSlots_typeof(obj); }




var findAdSlots_defaultConfig = {
  findSlotsOnLoad: [],
  slotDefinitions: {}
};
/**
 * Finds ad slots on the page load and initializes them
 * @param {MCP} MCP - Reference to the MCP instance
 */

function findAdSlots(MCP, parentElement) {
  consolv.log('MCP: Looking for ad slots');

  var _MCP$Configurator$get = MCP.Configurator.getConfiguration({
    defaults: findAdSlots_defaultConfig
  }),
      findSlotsOnLoad = _MCP$Configurator$get.findSlotsOnLoad,
      slotDefinitions = _MCP$Configurator$get.slotDefinitions;

  var parent = document;

  if (parentElement && findAdSlots_typeof(parentElement) === 'object' && parentElement.querySelectorAll) {
    parent = parentElement;
  }

  var newAdSlots = [];
  var existingSlots = Array.from(MCP.slots).map(function (_ref) {
    var _ref2 = findAdSlots_slicedToArray(_ref, 2),
        el = _ref2[0],
        slot = _ref2[1];

    return {
      element: el,
      type: slot.type
    };
  });
  findSlotsOnLoad.forEach(function (entry) {
    var searchEntry = findAdSlots_typeof(entry) === 'object' ? entry : {
      selector: "#".concat(entry, ", [data-slot-type=\"").concat(entry, "\"]"),
      type: entry
    };
    var elements = Array.from(parent.querySelectorAll(searchEntry.selector)); // Filters out existing ad slots that have been matched by the selector

    elements.filter(function (element) {
      return !existingSlots.find(function (slot) {
        return slot.element === element;
      });
    }).forEach(function (element, index) {
      var similarSlots = existingSlots.filter(function (slot) {
        return slot.type === searchEntry.type;
      }).map(function (item) {
        return item.element;
      }); // Restricts pixel distance between rendered elements of the same type

      var slotType = searchEntry.type;

      if (!slotDefinitions[slotType]) {
        consolv.log('MCP findAdSlots: Slot not defined', slotType);
        slotType = 'nop';
      }

      var _slotDefinitions$slot = slotDefinitions[slotType],
          distanceFromSimilarSlot = _slotDefinitions$slot.distanceFromSimilarSlot,
          distanceFromTop = _slotDefinitions$slot.distanceFromTop,
          nthInstance = _slotDefinitions$slot.nthInstance;

      if (distanceFromSimilarSlot && similarSlots.length) {
        var closestSimilarSlot = getClosestElements({
          element: element,
          siblings: similarSlots
        });

        if (closestSimilarSlot < distanceFromSimilarSlot) {
          slotType = 'nop';
        }
      } // Restricts ad slots within a certain distance of the page top


      if (distanceFromTop && element.offsetTop < distanceFromTop) {
        slotType = 'nop';
      }

      if (nthInstance) {
        var checkNth = nth_check_default.a.compile(nth_check_default.a.parse(nthInstance));

        if (!checkNth(index)) {
          slotType = 'nop';
        }
      }

      existingSlots.push({
        element: element,
        type: slotType
      });

      var slot = MCP._defineAdSlot(slotType, element);

      newAdSlots.push(slot);
      MCP.dispatchEvent('slotCreated', {
        slot: slot
      });
    });
  });
  Promise.all(newAdSlots).then(function (createdSlots) {
    // const beforeEventParameters = MCP.dispatchEvent('foundAdSlots', { slots: createdSlots });
    // if (beforeEventParameters.defaultPrevented) return;
    // await beforeEventParameters.asyncEvents;
    MCP.loaded.then(function () {
      var loadedSlots = createdSlots.filter(function (slot) {
        return slot.enabled !== false && slot.meta.preventFindRefresh !== true;
      });
      consolv.log('MCP: Found ad slots', loadedSlots);
      MCP.dispatchEvent('foundSlots', {
        slots: loadedSlots
      });

      if (loadedSlots.length) {
        loadedSlots.forEach(function (slot) {
          slot.setMetaData('loaded', true);
        });
        MCP.refreshSlots(loadedSlots);
      }
    });
  });
}
function setupFindAdSlots(MCP) {
  MCP.addEventListener('initialized', function () {
    findAdSlots(MCP);
  });
  MCP.addEventListener('contentUpdated', function (_ref3) {
    var parentElement = _ref3.parentElement;
    findAdSlots(MCP, parentElement);
  });
}
// CONCATENATED MODULE: ./src/botDetector.js
var botDetector_configuration = {
  generateBeacon: function generateBeacon(botType) {
    return "https://1unjqeylyh.execute-api.us-east-1.amazonaws.com/Dev/?test=bottest&bottype=".concat(botType);
  },
  bots: {
    google: /Googlebot/,
    bing: /bingbot/,
    duckduckgo: /DuckDuckBot/,
    pinterest: /Pinterest\/|Pinterestbot/,
    facebook: /facebot|facebookexternalhit/,
    yahoo: /Yahoo! Slurp/,
    twitter: /Twitterbot/,
    slack: /Slackbot/
  }
};
function setupBotDetector(MCP) {
  function botDetector() {
    var userAgent = MCP.Configurator.meta.device.ua;
    var botId = Object.keys(botDetector_configuration.bots).find(function (key) {
      return RegExp(botDetector_configuration.bots[key]).exec(userAgent);
    });

    if (botId) {
      MCP.setPageTargeting({
        bottype: botId
      });
      var beaconURL = botDetector_configuration.generateBeacon(botId);
      fetch(beaconURL, {
        method: 'GET',
        mode: 'no-cors',
        cache: 'no-cache'
      });
    }
  }

  MCP.addEventListener('ready', botDetector);
  MCP.addEventListener('contentUpdated', botDetector);
}
// CONCATENATED MODULE: ./src/golfAdditionalSlotMeta.js
var positionCounts = {};
function positionCount(position) {
  if (positionCounts[position] === undefined) {
    positionCounts[position] = 0;
  }
  /* eslint-disable no-plusplus */


  return ++positionCounts[position];
  /* eslint-enable no-plusplus */
}
/**
 *  Creates an incremented value for position, and adds additional targeting to ad slots
 *
 */

/* harmony default export */ var golfAdditionalSlotMeta = (function (MCP) {
  MCP.loaded.then(function () {
    if (MCP.Configurator.meta.page.site !== 'golfdigest') return; // Add position instance to the ad slot

    var addAdditionSlotMeta = function addAdditionSlotMeta(_ref) {
      var meta = _ref.meta;

      /* eslint-disable-next-line no-param-reassign */
      meta.slot.positionInstance = positionCount(meta.slot.position);
    };

    MCP.addEventListener('beforeDefineSlot', addAdditionSlotMeta); // Add the targeting to the ad slots before they are refreshed

    var addTargetingBeforeRefresh = function addTargetingBeforeRefresh(_ref2) {
      var slots = _ref2.slots;
      Array.from(slots.values()).forEach(function (slot) {
        slot.setTargeting('pos_instance', slot.meta.positionInstance);
        slot.setTargeting('ctx_slot_type', slot.type);
        slot.setTargeting('pos', slot.meta.position);
        if (!slot.getTargeting('ctx_slot_rn').length) slot.setTargeting('ctx_slot_rn', '0');
      });
    };

    MCP.addEventListener('beforeRefreshSlots', addTargetingBeforeRefresh);
  });
});
// CONCATENATED MODULE: ./src/buildSlotHierarchy.js
/* flow */

/**
 * @access private
 */
function hgtv(_ref) {
  var env = _ref.env,
      page = _ref.page,
      network = _ref.network;
  return [network, page.site, page.categorydspname, page.sctndspname, page.subsection, page.subsection2].join('/');
}

function disc(_ref2) {
  var env = _ref2.env,
      page = _ref2.page,
      network = _ref2.network;
  return [network, page.site, page.section].join('/');
}

function golfdigest(_ref3) {
  var env = _ref3.env,
      page = _ref3.page,
      slot = _ref3.slot,
      network = _ref3.network;

  if (slot.useLegacyPath) {
    return [network, 'golfdigest.cm', slot.position, page.categorydspname, page.contentType, slot.positionInstance].join('/');
  }

  return [network, 'golfdigest', slot.position, page.categorydspname, page.contentType, slot.positionInstance].join('/');
}

function other(_ref4) {
  var env = _ref4.env,
      page = _ref4.page,
      network = _ref4.network;
  return [network, page.site, page.categorydspname, page.sctndspname].join('/');
}

function fnk(_ref5) {
  var env = _ref5.env,
      page = _ref5.page,
      network = _ref5.network;
  return [network, 'food', 'fnk'].join('/');
}

var hierarchyMaps = {
  hgtv: hgtv,
  disc: disc,
  golfdigest: golfdigest,
  'dtc-web': fnk,
  '*': other
};
/* harmony default export */ var buildSlotHierarchy = (function () {
  var meta = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var site = meta.page.site;
  var hierarchyMap = hierarchyMaps[site] || hierarchyMaps['*'];
  return hierarchyMap(meta);
});
// CONCATENATED MODULE: ./src/creativeMetaRetriever.js
function creativeMetaRetriever_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function creativeMetaRetriever_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { creativeMetaRetriever_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { creativeMetaRetriever_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var creativeMetaRetriever_buildEnv = {"NODE_ENV":"production","version":"3.24.1","libraryName":"Master Control Program","endpoints":{"configuration":"https://code.adsales.snidigital.com/datmcp/3/mcp-configuration.json"},"dfpEnvironment":"staging","dfpNetworks":{"production":"109359770","staging":"201823409","golf-prod":"21849421099"},"slotConfigurationEndpoint":"https://bmxocid8k6.execute-api.us-east-1.amazonaws.com/v1/{lineItemId}/","libraryRemotePath":"code.adsales.snidigital.com/datmcp"},
    slotConfigurationEndpoint = creativeMetaRetriever_buildEnv.slotConfigurationEndpoint;
/**
 * Fetches additional creative meta data from an external API
 * @access private
 */

function fetchCreativeMeta(_x) {
  return _fetchCreativeMeta.apply(this, arguments);
}

function _fetchCreativeMeta() {
  _fetchCreativeMeta = creativeMetaRetriever_asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(_ref) {
    var slot, lineItemId, configurationUrl, response, responseJSON, creativeMeta;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            slot = _ref.slot;
            slot.setMetaData('creativeMetaLoaded', false);
            lineItemId = slot.creative.lineItemId; // If there is no lineItemId, it is probably Google AdX, so we won't have any meta for it

            if (!(!slotConfigurationEndpoint || !lineItemId)) {
              _context.next = 6;
              break;
            }

            slot.setMetaData('creativeMetaLoaded', true);
            return _context.abrupt("return");

          case 6:
            _context.prev = 6;
            configurationUrl = slotConfigurationEndpoint.replace('{lineItemId}', lineItemId);
            _context.next = 10;
            return fetch(configurationUrl);

          case 10:
            response = _context.sent;

            if (!(response.status !== 200)) {
              _context.next = 13;
              break;
            }

            throw new Error(response.status);

          case 13:
            _context.next = 15;
            return response.json();

          case 15:
            responseJSON = _context.sent;
            creativeMeta = responseJSON.find(function (item) {
              return Number(item.id) === Number(lineItemId);
            });

            if (creativeMeta) {
              if (creativeMeta.priority) slot.setMetaData('priority', Number(creativeMeta.priority));

              if (creativeMeta.kronosLocked) {
                // Value coming from API is either string of 1 or 0 (or nothing)
                slot.setMetaData('kronosLocked', creativeMeta.kronosLocked === '1');
              }
            }

            slot.setMetaData('creativeMetaLoaded', true);
            _context.next = 25;
            break;

          case 21:
            _context.prev = 21;
            _context.t0 = _context["catch"](6);
            consolv.log('MCP: Unable to fetch creative meta data');
            slot.setMetaData('creativeMetaError', true);

          case 25:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[6, 21]]);
  }));
  return _fetchCreativeMeta.apply(this, arguments);
}

function CreativeMetaRetriever(MCP) {
  MCP.addEventListener('slotCreativeLoaded', function (e) {
    fetchCreativeMeta(e).then(function () {
      // Refresh slot configuration after creative meta has been loaded
      MCP._updateSlotMeta(e.slot);
    });
  });
}
// CONCATENATED MODULE: ./src/fetchReporter.js
function fetchReporter_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { fetchReporter_typeof = function _typeof(obj) { return typeof obj; }; } else { fetchReporter_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return fetchReporter_typeof(obj); }

function fetchReporter_slicedToArray(arr, i) { return fetchReporter_arrayWithHoles(arr) || fetchReporter_iterableToArrayLimit(arr, i) || fetchReporter_nonIterableRest(); }

function fetchReporter_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function fetchReporter_iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function fetchReporter_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function fetchReporter_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function fetchReporter_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { fetchReporter_ownKeys(source, true).forEach(function (key) { fetchReporter_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { fetchReporter_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function fetchReporter_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


var fetchReporter_defaultConfig = {
  enabled: true,
  reportFrequency: 3,
  endpoint: 'https://fetch-api.sni-dat.com/',
  keys: ['site', 'unique_id', 'category', 'page_type', 'detail_id', {
    topic: 'sponsorship'
  }, 'adkey1', 'adkey2']
};
function fetchReporter(MCP) {
  MCP.addEventListener('initialized', function () {
    var config = MCP.Configurator.getConfiguration();

    var fetchConfig = fetchReporter_objectSpread({}, fetchReporter_defaultConfig, {}, config.fetch);

    if (!fetchConfig.enabled) return;
    var shouldReport = Math.round(Math.random() * 100 <= fetchConfig.reportFrequency);

    if (shouldReport) {
      var url = new URL(fetchConfig.endpoint);
      url.searchParams.append('ref', document.referrer);
      url.searchParams.append('url', document.location.href);
      url.searchParams.append('has_video', document.querySelector('.m-VideoPlayer') ? 1 : 0);
      fetchConfig.keys.forEach(function (entry) {
        var _ref = fetchReporter_typeof(entry) === 'object' ? Object.entries(entry)[0] : [entry, entry],
            _ref2 = fetchReporter_slicedToArray(_ref, 2),
            metaKey = _ref2[0],
            key = _ref2[1];

        url.searchParams.append(key, MCP.Configurator._meta.page[metaKey] || '');
      });
      fetch(url, {
        mode: 'no-cors'
      });
      consolv.log('MCP: FETCH data sent');
    }
  });
}
// EXTERNAL MODULE: ./src/config/prebid/initial.json
var initial = __webpack_require__(159);
var initial_default = /*#__PURE__*/__webpack_require__.n(initial);

// EXTERNAL MODULE: ./src/config/prebid/appnexus.json
var appnexus = __webpack_require__(160);
var appnexus_default = /*#__PURE__*/__webpack_require__.n(appnexus);

// EXTERNAL MODULE: ./src/config/prebid/criteo.json
var criteo = __webpack_require__(161);
var criteo_default = /*#__PURE__*/__webpack_require__.n(criteo);

// EXTERNAL MODULE: ./src/config/prebid/ix.json
var ix = __webpack_require__(162);
var ix_default = /*#__PURE__*/__webpack_require__.n(ix);

// EXTERNAL MODULE: ./src/config/prebid/kargo.json
var kargo = __webpack_require__(163);
var kargo_default = /*#__PURE__*/__webpack_require__.n(kargo);

// EXTERNAL MODULE: ./src/config/prebid/rubicon.json
var rubicon = __webpack_require__(164);
var rubicon_default = /*#__PURE__*/__webpack_require__.n(rubicon);

// EXTERNAL MODULE: ./src/config/prebid/triplelift.json
var triplelift = __webpack_require__(165);
var triplelift_default = /*#__PURE__*/__webpack_require__.n(triplelift);

// EXTERNAL MODULE: ./src/config/prebid/aol.json
var aol = __webpack_require__(166);
var aol_default = /*#__PURE__*/__webpack_require__.n(aol);

// EXTERNAL MODULE: ./src/config/prebid/pubmatic.json
var pubmatic = __webpack_require__(167);
var pubmatic_default = /*#__PURE__*/__webpack_require__.n(pubmatic);

// EXTERNAL MODULE: ./src/config/amazonA9.json
var amazonA9 = __webpack_require__(168);
var amazonA9_default = /*#__PURE__*/__webpack_require__.n(amazonA9);

// EXTERNAL MODULE: ./src/config/indexExchange.json
var indexExchange = __webpack_require__(169);
var indexExchange_default = /*#__PURE__*/__webpack_require__.n(indexExchange);

// CONCATENATED MODULE: ./src/index.js
function src_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function src_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { src_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { src_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function src_slicedToArray(arr, i) { return src_arrayWithHoles(arr) || src_iterableToArrayLimit(arr, i) || src_nonIterableRest(); }

function src_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function src_iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function src_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function src_toConsumableArray(arr) { return src_arrayWithoutHoles(arr) || src_iterableToArray(arr) || src_nonIterableSpread(); }

function src_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function src_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function src_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }




 // import SlotOverlay from 'lib/slotOverlay';
// import Configurator from 'lib/Configurator';





 // import hierarchyMaps from 'config/hierarchyMaps.json';












 // import generateRules from './generateRules';









 // import audienceNetwork from './config/prebid/audienceNetwork.json';




 // import sonobi from './config/prebid/sonobi.json';






var src_buildEnv = {"NODE_ENV":"production","version":"3.24.1","libraryName":"Master Control Program","endpoints":{"configuration":"https://code.adsales.snidigital.com/datmcp/3/mcp-configuration.json"},"dfpEnvironment":"staging","dfpNetworks":{"production":"109359770","staging":"201823409","golf-prod":"21849421099"},"slotConfigurationEndpoint":"https://bmxocid8k6.execute-api.us-east-1.amazonaws.com/v1/{lineItemId}/","libraryRemotePath":"code.adsales.snidigital.com/datmcp"},
    NODE_ENV = src_buildEnv.NODE_ENV,
    dfpNetworks = src_buildEnv.dfpNetworks,
    libraryName = src_buildEnv.libraryName,
    version = src_buildEnv.version;

var src_queryString$parse = query_string_default.a.parse(window.location.search),
    sniadsoff = src_queryString$parse.sniadsoff,
    mcpperf = src_queryString$parse.mcpperf;

var disableMCP = sniadsoff !== undefined;
var src_runPerformanceTest = mcpperf !== undefined || NODE_ENV === 'development';
var loadTime; // TODO: Check for Personally Identifiable Information in URL and halt MCP if found
// TODO: Detect if page is being run inside of an IFRAME and escape if not whitelisted

if (!disableMCP && !window.DatMCP.isLoaded) {
  if (window.performance && src_runPerformanceTest) {
    loadTime = window.performance.now();
    consolv.log("DatMCP loaded at ".concat(loadTime / 1000, "."));
  }

  consolv.log("".concat(libraryName, " ").concat(version, " ").concat(NODE_ENV, " - Initializing"));
  var prebidRules = [].concat(src_toConsumableArray(initial_default.a), src_toConsumableArray(rubicon_default.a), src_toConsumableArray(appnexus_default.a), src_toConsumableArray(ix_default.a), src_toConsumableArray(criteo_default.a), src_toConsumableArray(kargo_default.a), src_toConsumableArray(triplelift_default.a), src_toConsumableArray(aol_default.a), src_toConsumableArray(pubmatic_default.a));

  try {
    var src_rules = [].concat(src_toConsumableArray(targetingWhitelist_default.a), src_toConsumableArray(slotDefinitions_default.a), src_toConsumableArray(prebidRules), src_toConsumableArray(amazonA9_default.a), src_toConsumableArray(indexExchange_default.a), src_toConsumableArray(kronosRules_default.a), src_toConsumableArray(configuration_default.a), src_toConsumableArray(rules_default.a), src_toConsumableArray(dfpEnvironment_default.a)); // const rules = generateRules(defaultRules, endpoints.configuration);
    // Determines the page framework and builds the metadata
    // const sourceOfTruth = mdManagerAdapter().then(adapter => new SourceOfTruth(adapter).ready);

    var src_sourceOfTruth = rat_race_default()([mdManagerAdapter(), dtcWebPageAdapter()]).then(function (adapter) {
      return new SourceOfTruth_SourceOfTruth(adapter).ready;
    });
    /* eslint-disable camelcase */

    var filteredRules = src_sourceOfTruth.then(function (SoT) {
      var config_channel = SoT.page.config_channel;
      return src_rules.filter(function (rule) {
        if (rule.channel === undefined || rule.channel === config_channel) return true;
        if (Array.isArray(rule.channel) && rule.channel.indexOf(config_channel) >= 0) return true;
        return false;
      });
    });
    /* eslint-enable camelcase */
    // TODO: Set sharethrough key

    var DatMCP = new src_MCP({
      rules: filteredRules,
      sourceOfTruth: src_sourceOfTruth,
      hierarchyFn: buildSlotHierarchy,
      networks: dfpNetworks,
      performanceTest: src_runPerformanceTest
    });
    var _window$DatMCP = window.DatMCP,
        executeQueue = _window$DatMCP.executeQueue,
        loaderInitialized = _window$DatMCP.loaderInitialized;
    window.DatMCP = DatMCP;
    Object.assign(DatMCP, {
      executeQueue: executeQueue,
      loaderInitialized: loaderInitialized
    });

    window.DatMCP.execute = function (callback) {
      var callbackRes = typeof callback === 'function' ? callback(window.DatMCP) : undefined;
      return Promise.resolve(callbackRes);
    };

    setupBotDetector(DatMCP);
    golfAdditionalSlotMeta(DatMCP);
    PrebidAdapter(DatMCP);
    AmazonA9Adapter(DatMCP);
    IndexExchangeAdapter(DatMCP);
    setupFindAdSlots(DatMCP); // Maps legacy ad library functions to their new implementations

    generateLegacyAdapter(DatMCP); // Sets up the desktop photo gallery functionality

    DatMCP.initializePhotoGallery = function (galleryConfiguration) {
      consolv.log('MCP: PhotoGallery module initialized');
      DatMCP.PhotoGallery = new PhotoGallery_PhotoGallery(DatMCP, galleryConfiguration);
    }; // Watches user interaction with page and refreshes slots based on defined criteria


    DatMCP.Kronos = new Kronos_Kronos(DatMCP);
    DatMCP.FixedLeaderboard = new FixedLeaderboard_FixedLeaderboard(DatMCP); // Pulls creative info from remote API and stores it in the slot's meta data

    CreativeMetaRetriever(DatMCP);
    lazyLoader(DatMCP); // Sends page meta data a server to track page statistics
    // fetchReporter(DatMCP);
    // Debugging overlay for slots
    // DatMCP.enableSlotOverlay = () => new SlotOverlay(DatMCP);

    if (window.performance && src_runPerformanceTest) {
      DatMCP.addEventListener('ready', function () {
        var timeToLoad = (window.performance.now() - loadTime) / 1000;
        consolv.log("DatMCP took ".concat(timeToLoad, " seconds to load."));
      });
    } // Execute any queued functions that rely on the ad library


    DatMCP.addEventListener('loaded', function () {
      if (Array.isArray(executeQueue)) {
        executeQueue.forEach(function (_ref) {
          var _ref2 = src_slicedToArray(_ref, 2),
              callback = _ref2[0],
              resolve = _ref2[1];

          resolve(callback(DatMCP));
        });
      }
    });
    DatMCP.loadSlotOverlay =
    /*#__PURE__*/
    src_asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee() {
      var _ref4, SlotOverlay, overlay;

      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _context.next = 3;
              return __webpack_require__.e(/* import() | SlotOverlay */ 1).then(__webpack_require__.bind(null, 387));

            case 3:
              _ref4 = _context.sent;
              SlotOverlay = _ref4["default"];
              window.sessionStorage.setItem('mcp-overlay', '1');
              overlay = new SlotOverlay(DatMCP, DatMCP.Kronos);
              overlay.enable();
              DatMCP.slotOverlay = overlay;
              _context.next = 14;
              break;

            case 11:
              _context.prev = 11;
              _context.t0 = _context["catch"](0);
              consolv.log('MCPxxx: Error loading slot overlay');

            case 14:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[0, 11]]);
    }));
  } catch (e) {
    /* eslint-disable-next-line */
    console.error(e);
    reportException(e);
  }

  if (window.sessionStorage.getItem('mcp-overlay') === '1') {
    window.DatMCP.loadSlotOverlay();
  }
}

/***/ }),

/***/ 47:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(103);

var ES = __webpack_require__(106);

var implementation = __webpack_require__(113);

var getPolyfill = __webpack_require__(114);

var polyfill = getPolyfill();

var shim = __webpack_require__(187);

var slice = Array.prototype.slice;
/* eslint-disable no-unused-vars */

var boundIncludesShim = function includes(array, searchElement) {
  /* eslint-enable no-unused-vars */
  ES.RequireObjectCoercible(array);
  return polyfill.apply(array, slice.call(arguments, 1));
};

define(boundIncludesShim, {
  getPolyfill: getPolyfill,
  implementation: implementation,
  shim: shim
});
module.exports = boundIncludesShim;

/***/ }),

/***/ 52:
/***/ (function(module, exports) {

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};

    module.paths = []; // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ }),

/***/ 53:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(68);

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

/***/ }),

/***/ 66:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

/**
 * Module exports.
 * @public
 */

exports.parse = parse;
exports.serialize = serialize;
/**
 * Module variables.
 * @private
 */

var decode = decodeURIComponent;
var encode = encodeURIComponent;
var pairSplitRegExp = /; */;
/**
 * RegExp to match field-content in RFC 7230 sec 3.2
 *
 * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
 * field-vchar   = VCHAR / obs-text
 * obs-text      = %x80-FF
 */

var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
/**
 * Parse a cookie header.
 *
 * Parse the given cookie header string into an object
 * The object has the various cookies as keys(names) => values
 *
 * @param {string} str
 * @param {object} [options]
 * @return {object}
 * @public
 */

function parse(str, options) {
  if (typeof str !== 'string') {
    throw new TypeError('argument str must be a string');
  }

  var obj = {};
  var opt = options || {};
  var pairs = str.split(pairSplitRegExp);
  var dec = opt.decode || decode;

  for (var i = 0; i < pairs.length; i++) {
    var pair = pairs[i];
    var eq_idx = pair.indexOf('='); // skip things that don't look like key=value

    if (eq_idx < 0) {
      continue;
    }

    var key = pair.substr(0, eq_idx).trim();
    var val = pair.substr(++eq_idx, pair.length).trim(); // quoted values

    if ('"' == val[0]) {
      val = val.slice(1, -1);
    } // only assign once


    if (undefined == obj[key]) {
      obj[key] = tryDecode(val, dec);
    }
  }

  return obj;
}
/**
 * Serialize data into a cookie header.
 *
 * Serialize the a name value pair into a cookie string suitable for
 * http headers. An optional options object specified cookie parameters.
 *
 * serialize('foo', 'bar', { httpOnly: true })
 *   => "foo=bar; httpOnly"
 *
 * @param {string} name
 * @param {string} val
 * @param {object} [options]
 * @return {string}
 * @public
 */


function serialize(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode;

  if (typeof enc !== 'function') {
    throw new TypeError('option encode is invalid');
  }

  if (!fieldContentRegExp.test(name)) {
    throw new TypeError('argument name is invalid');
  }

  var value = enc(val);

  if (value && !fieldContentRegExp.test(value)) {
    throw new TypeError('argument val is invalid');
  }

  var str = name + '=' + value;

  if (null != opt.maxAge) {
    var maxAge = opt.maxAge - 0;
    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');
    str += '; Max-Age=' + Math.floor(maxAge);
  }

  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError('option domain is invalid');
    }

    str += '; Domain=' + opt.domain;
  }

  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError('option path is invalid');
    }

    str += '; Path=' + opt.path;
  }

  if (opt.expires) {
    if (typeof opt.expires.toUTCString !== 'function') {
      throw new TypeError('option expires is invalid');
    }

    str += '; Expires=' + opt.expires.toUTCString();
  }

  if (opt.httpOnly) {
    str += '; HttpOnly';
  }

  if (opt.secure) {
    str += '; Secure';
  }

  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;

    switch (sameSite) {
      case true:
        str += '; SameSite=Strict';
        break;

      case 'lax':
        str += '; SameSite=Lax';
        break;

      case 'strict':
        str += '; SameSite=Strict';
        break;

      case 'none':
        str += '; SameSite=None';
        break;

      default:
        throw new TypeError('option sameSite is invalid');
    }
  }

  return str;
}
/**
 * Try decoding a string using a decoding function.
 *
 * @param {string} str
 * @param {function} decode
 * @private
 */


function tryDecode(str, decode) {
  try {
    return decode(str);
  } catch (e) {
    return str;
  }
}

/***/ }),

/***/ 67:
/***/ (function(module, exports) {

module.exports = intersect;

function many(sets) {
  var o = {};
  var l = sets.length - 1;
  var first = sets[0];
  var last = sets[l];

  for (var i in first) {
    o[first[i]] = 0;
  }

  for (var i = 1; i <= l; i++) {
    var row = sets[i];

    for (var j in row) {
      var key = row[j];
      if (o[key] === i - 1) o[key] = i;
    }
  }

  var a = [];

  for (var i in last) {
    var key = last[i];
    if (o[key] === l) a.push(key);
  }

  return a;
}

function intersect(a, b) {
  if (!b) return many(a);
  var res = [];

  for (var i = 0; i < a.length; i++) {
    if (indexOf(b, a[i]) > -1) res.push(a[i]);
  }

  return res;
}

intersect.big = function (a, b) {
  if (!b) return many(a);
  var ret = [];
  var temp = {};

  for (var i = 0; i < b.length; i++) {
    temp[b[i]] = true;
  }

  for (var i = 0; i < a.length; i++) {
    if (temp[a[i]]) ret.push(a[i]);
  }

  return ret;
};

function indexOf(arr, el) {
  for (var i = 0; i < arr.length; i++) {
    if (arr[i] === el) return i;
  }

  return -1;
}

/***/ }),

/***/ 68:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(175);

module.exports = Function.prototype.bind || implementation;

/***/ }),

/***/ 69:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var fnToStr = Function.prototype.toString;
var constructorRegex = /^\s*class\b/;

var isES6ClassFn = function isES6ClassFunction(value) {
  try {
    var fnStr = fnToStr.call(value);
    return constructorRegex.test(fnStr);
  } catch (e) {
    return false; // not a function
  }
};

var tryFunctionObject = function tryFunctionToStr(value) {
  try {
    if (isES6ClassFn(value)) {
      return false;
    }

    fnToStr.call(value);
    return true;
  } catch (e) {
    return false;
  }
};

var toStr = Object.prototype.toString;
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';

module.exports = function isCallable(value) {
  if (!value) {
    return false;
  }

  if (typeof value !== 'function' && _typeof(value) !== 'object') {
    return false;
  }

  if (typeof value === 'function' && !value.prototype) {
    return true;
  }

  if (hasToStringTag) {
    return tryFunctionObject(value);
  }

  if (isES6ClassFn(value)) {
    return false;
  }

  var strClass = toStr.call(value);
  return strClass === fnClass || strClass === genClass;
};

/***/ }),

/***/ 70:
/***/ (function(module, exports) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var g; // This works in non-strict mode

g = function () {
  return this;
}();

try {
  // This works if eval is allowed (see CSP)
  g = g || new Function("return this")();
} catch (e) {
  // This works if the window reference is available
  if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object") g = window;
} // g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}


module.exports = g;

/***/ }),

/***/ 71:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* globals
	Set,
	Map,
	WeakSet,
	WeakMap,

	Promise,

	Symbol,
	Proxy,

	Atomics,
	SharedArrayBuffer,

	ArrayBuffer,
	DataView,
	Uint8Array,
	Float32Array,
	Float64Array,
	Int8Array,
	Int16Array,
	Int32Array,
	Uint8ClampedArray,
	Uint16Array,
	Uint32Array,
*/

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var undefined; // eslint-disable-line no-shadow-restricted-names

var ThrowTypeError = Object.getOwnPropertyDescriptor ? function () {
  return Object.getOwnPropertyDescriptor(arguments, 'callee').get;
}() : function () {
  throw new TypeError();
};
var hasSymbols = typeof Symbol === 'function' && _typeof(Symbol.iterator) === 'symbol';

var getProto = Object.getPrototypeOf || function (x) {
  return x.__proto__;
}; // eslint-disable-line no-proto


var generator; // = function * () {};

var generatorFunction = generator ? getProto(generator) : undefined;
var asyncFn; // async function() {};

var asyncFunction = asyncFn ? asyncFn.constructor : undefined;
var asyncGen; // async function * () {};

var asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;
var asyncGenIterator = asyncGen ? asyncGen() : undefined;
var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);
var INTRINSICS = {
  '$ %Array%': Array,
  '$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
  '$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,
  '$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
  '$ %ArrayPrototype%': Array.prototype,
  '$ %ArrayProto_entries%': Array.prototype.entries,
  '$ %ArrayProto_forEach%': Array.prototype.forEach,
  '$ %ArrayProto_keys%': Array.prototype.keys,
  '$ %ArrayProto_values%': Array.prototype.values,
  '$ %AsyncFromSyncIteratorPrototype%': undefined,
  '$ %AsyncFunction%': asyncFunction,
  '$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,
  '$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,
  '$ %AsyncGeneratorFunction%': asyncGenFunction,
  '$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,
  '$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,
  '$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
  '$ %Boolean%': Boolean,
  '$ %BooleanPrototype%': Boolean.prototype,
  '$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,
  '$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,
  '$ %Date%': Date,
  '$ %DatePrototype%': Date.prototype,
  '$ %decodeURI%': decodeURI,
  '$ %decodeURIComponent%': decodeURIComponent,
  '$ %encodeURI%': encodeURI,
  '$ %encodeURIComponent%': encodeURIComponent,
  '$ %Error%': Error,
  '$ %ErrorPrototype%': Error.prototype,
  '$ %eval%': eval,
  // eslint-disable-line no-eval
  '$ %EvalError%': EvalError,
  '$ %EvalErrorPrototype%': EvalError.prototype,
  '$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
  '$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,
  '$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
  '$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,
  '$ %Function%': Function,
  '$ %FunctionPrototype%': Function.prototype,
  '$ %Generator%': generator ? getProto(generator()) : undefined,
  '$ %GeneratorFunction%': generatorFunction,
  '$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,
  '$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
  '$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,
  '$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
  '$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,
  '$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
  '$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,
  '$ %isFinite%': isFinite,
  '$ %isNaN%': isNaN,
  '$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
  '$ %JSON%': JSON,
  '$ %JSONParse%': JSON.parse,
  '$ %Map%': typeof Map === 'undefined' ? undefined : Map,
  '$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
  '$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,
  '$ %Math%': Math,
  '$ %Number%': Number,
  '$ %NumberPrototype%': Number.prototype,
  '$ %Object%': Object,
  '$ %ObjectPrototype%': Object.prototype,
  '$ %ObjProto_toString%': Object.prototype.toString,
  '$ %ObjProto_valueOf%': Object.prototype.valueOf,
  '$ %parseFloat%': parseFloat,
  '$ %parseInt%': parseInt,
  '$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,
  '$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,
  '$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,
  '$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,
  '$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,
  '$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,
  '$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
  '$ %RangeError%': RangeError,
  '$ %RangeErrorPrototype%': RangeError.prototype,
  '$ %ReferenceError%': ReferenceError,
  '$ %ReferenceErrorPrototype%': ReferenceError.prototype,
  '$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
  '$ %RegExp%': RegExp,
  '$ %RegExpPrototype%': RegExp.prototype,
  '$ %Set%': typeof Set === 'undefined' ? undefined : Set,
  '$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
  '$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,
  '$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
  '$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,
  '$ %String%': String,
  '$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
  '$ %StringPrototype%': String.prototype,
  '$ %Symbol%': hasSymbols ? Symbol : undefined,
  '$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,
  '$ %SyntaxError%': SyntaxError,
  '$ %SyntaxErrorPrototype%': SyntaxError.prototype,
  '$ %ThrowTypeError%': ThrowTypeError,
  '$ %TypedArray%': TypedArray,
  '$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,
  '$ %TypeError%': TypeError,
  '$ %TypeErrorPrototype%': TypeError.prototype,
  '$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
  '$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,
  '$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
  '$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,
  '$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
  '$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,
  '$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
  '$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,
  '$ %URIError%': URIError,
  '$ %URIErrorPrototype%': URIError.prototype,
  '$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
  '$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,
  '$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,
  '$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype
};

module.exports = function GetIntrinsic(name, allowMissing) {
  if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
    throw new TypeError('"allowMissing" argument must be a boolean');
  }

  var key = '$ ' + name;

  if (!(key in INTRINSICS)) {
    throw new SyntaxError('intrinsic ' + name + ' does not exist!');
  } // istanbul ignore if // hopefully this is impossible to test :-)


  if (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {
    throw new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
  }

  return INTRINSICS[key];
};

/***/ }),

/***/ 72:
/***/ (function(module, exports) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = _typeof(value);

  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;

/***/ })

/******/ });
//# sourceMappingURL=DatMCP-3.24.1-af4165cfee8d6f663e2f.js.map